<!--
  #%L
  GwtMaterial
  %%
  Copyright (C) 2015 - 2016 GwtMaterialDesign
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->
<!DOCTYPE ui:UiBinder SYSTEM "http://dl.google.com/gwt/DTD/xhtml.ent">
<ui:UiBinder xmlns:ui="urn:ui:com.google.gwt.uibinder"
             xmlns:m="urn:import:gwt.material.design.client.ui"
             xmlns:demo="urn:import:gwt.material.design.demo.client.ui">

    <ui:with field='res' type='gwt.material.design.client.resources.MaterialResources' />

    <ui:style>
        .block{
            display: block;
        }
        .icon i{
            font-size: 4em;
        }
    </ui:style>
    <m:MaterialPanel>
        <m:MaterialPanel addStyleNames="code">
            <m:MaterialTitle title="Note" description="As of Version 2.0 we marked MaterialAnimator as Deprecated, instead we used MaterialAnimation for GMD Animation class" />
            <m:MaterialRow>
                <m:MaterialColumn>
                    <demo:PrettyPre addStyleNames="lang-java">
                        &emsp;MaterialAnimation animation = new MaterialAnimation();<br/>
                        animation.setTransition(transition);<br/>
                        animation.setDelayMillis(0);<br/>
                        animation.setDurationMillis(1000);<br/>
                        animation.setInfinite(false);<br/>
                        animation.animate(card);
                    </demo:PrettyPre>
                    <m:MaterialCard ui:field="card">
                        <m:MaterialCardContent textColor="WHITE">
                            <m:MaterialCardTitle textColor="BLACK" text="Sample" iconType="POLYMER" iconPosition="RIGHT"/>
                            <m:MaterialLabel textColor="BLACK" text="I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively." />
                        </m:MaterialCardContent>
                        <m:MaterialCardAction>
                            <m:MaterialLink text="Link 1" />
                            <m:MaterialLink text="Link 1" />
                        </m:MaterialCardAction>
                    </m:MaterialCard>
                    <m:MaterialListBox ui:field="lstAnimations" old="true" />
                    <m:MaterialButton ui:field="btnAnimate" text="Animate" textColor="WHITE"/>
                </m:MaterialColumn>
            </m:MaterialRow>
        </m:MaterialPanel>
    
        <m:MaterialPanel addStyleNames="code">
            <m:MaterialTitle title="Infinite" description="You can easily set the animation infinite."/>
            <m:MaterialRow>
                <m:MaterialColumn>
                    <demo:PrettyPre addStyleNames="lang-java">
                        &emsp;MaterialAnimation infiniteAnimation = new MaterialAnimation();<br/>
                        infiniteAnimation.setTransition(Transition.PULSE);<br/>
                        infiniteAnimation.setDelayMillis(0);<br/>
                        infiniteAnimation.setDurationMillis(1000);<br/>
                        infiniteAnimation.setInfinite(true);<br/>
                        infiniteAnimation.animate(iconHeart);<br/><br/>
                        // To stop the infinite animation <br/>
                        infiniteAnimation.stopAnimation();
                    </demo:PrettyPre>
                    <m:MaterialButton ui:field="iconHeart" width="100px" height="100px" addStyleNames="{style.icon}" type="FLOATING" size="LARGE" iconType="FAVORITE" backgroundColor="PINK" />
                </m:MaterialColumn>
            </m:MaterialRow>
            <m:MaterialButton ui:field="btnAnimateInfinite" text="Infinite Animation" textColor="WHITE"/>
            <m:MaterialButton ui:field="btnStopAnimation" text="Stop Animation" type="FLAT" />
        </m:MaterialPanel>
    
        <m:MaterialPanel addStyleNames="code">
            <m:MaterialTitle title="Callback" description="Setting the callback after animation" />
            <m:MaterialRow>
                <m:MaterialColumn>
                    <demo:PrettyPre addStyleNames="lang-java">
                        &emsp;MaterialAnimation animation = new MaterialAnimation();<br/>
                        animation.setDelayMillis(0);<br/>
                        animation.setDurationMillis(1000);<br/>
                        animation.transition(Transition.FLIPINX);<br/>
                        animation.animate(iconCallback, () -> {<br/>
                        &emsp;MaterialToast.fireToast("Animation is finished");<br/>
                        });
                    </demo:PrettyPre>
                    <m:MaterialButton ui:field="iconCallback" width="100px" height="100px" addStyleNames="{style.icon}" type="FLOATING" size="LARGE" iconType="DIRECTIONS_BIKE" />
                </m:MaterialColumn>
            </m:MaterialRow>
            <m:MaterialButton ui:field="btnAnimateCallback" text="Animate with Callback" textColor="WHITE"/>
        </m:MaterialPanel>
    </m:MaterialPanel>
</ui:UiBinder>
