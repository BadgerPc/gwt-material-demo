$wnd.gwtmaterialdemo.runAsyncCallback10("function n_b(){}\nfunction Bsd(a){this.a=a}\nfunction Dsd(a){this.a=a}\nfunction Fsd(a){this.a=a}\nfunction Hsd(a){this.a=a}\nfunction q_b(){q_b=Nqb;m_b=new n_b}\nfunction h_b(){f_b();e_b.call(this);this.b=new $wnd.Object}\nfunction ysd(){nFb.call(this);lFb(this,zsd(new Asd(this)))}\nfunction rsd(a,b,c){yEb();XEb.call(this,a,b,c,(Hhd(),Fhd))}\nfunction g_b(a,b){$wnd.$(ho(rD(a.D,205))).mask(b,a.b)}\nfunction Lsd(a){var b;if(!a.d){b=new ysd;a.d=b}return a.d}\nfunction f_b(){f_b=Nqb;!VKb&&(VKb=new WKb);Zbc();bcc((q_b(),m_b),true,false)}\nfunction Asd(a){this.a=new Bsd(this);this.b=new Dsd(this);this.c=new Fsd(this);this.d=new Hsd(this);this.e=a}\nfunction Ksd(a){var b,c;if(!a.c){c=new rsd(LBb(FFb(a.a)),(b=Lsd(a),b),Jsd(a));qEb((IFb(a.a),c),DHb(IFb(a.a)));a.c=c}return a.c}\nfunction zsd(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,$,ab,bb,cb,db,eb,fb,gb,hb,ib,jb,kb,lb,mb,nb,ob,pb,qb,rb,sb;b=new mbc;$Kb(b,(c=new I_b,$Kb(c,(j=new yad,xs(ho(j.a),(esb(),(new Urb(fsb(s3e))).a)),bA(j,s3e),j)),$Kb(c,(k=new Jle,pRb(k.a,G2e),rRb(k.a),(Msb(),k.rb).style[RSe]=(Sw(),ZSe),sRb(k.a,'jQuery-Mask-Plugin 1.14.10'),k)),$Kb(c,(l=new I_b,$Kb(l,(m=new h_b,uhc((!m.V&&(m.V=new whc(m)),m.V),lRe),ho(m.D).setAttribute(qSe,'eg: 000-00-0000000'),Bdd(m.A).length==0||qo(m.A,hLe),Cdd(m.A,'Phone Number'),(ho(m.D).getAttribute(qSe)||'').length==0||qo(m.A,hLe),m.a='000-00-0000000',m)),$Kb(l,(n=new h_b,uhc((!n.V&&(n.V=new whc(n)),n.V),lRe),ho(n.D).setAttribute(qSe,'eg: (00) 0000-0000'),Bdd(n.A).length==0||qo(n.A,hLe),Cdd(n.A,'Phone with Odd'),(ho(n.D).getAttribute(qSe)||'').length==0||qo(n.A,hLe),n.a='(00) 0000-0000',n)),$Kb(l,(o=new h_b,uhc((!o.V&&(o.V=new whc(o)),o.V),lRe),ho(o.D).setAttribute(qSe,'eg: (000) 000-000'),Bdd(o.A).length==0||qo(o.A,hLe),Cdd(o.A,'US Phone Number'),(ho(o.D).getAttribute(qSe)||'').length==0||qo(o.A,hLe),o.a='(000) 000-000',o)),l)),$Kb(c,(p=new I_b,$Kb(p,(q=new h_b,uhc((!q.V&&(q.V=new whc(q)),q.V),lRe),ho(q.D).setAttribute(qSe,'eg: 00000-000'),Bdd(q.A).length==0||qo(q.A,hLe),Cdd(q.A,'CEP'),(ho(q.D).getAttribute(qSe)||'').length==0||qo(q.A,hLe),q.a='00000-000',q)),$Kb(p,(r=new h_b,uhc((!r.V&&(r.V=new whc(r)),r.V),lRe),ho(r.D).setAttribute(qSe,'eg: 000.000.000-00'),Bdd(r.A).length==0||qo(r.A,hLe),Cdd(r.A,'CPF'),(ho(r.D).getAttribute(qSe)||'').length==0||qo(r.A,hLe),r.a='000.000.000-00',r)),$Kb(p,(s=new h_b,uhc((!s.V&&(s.V=new whc(s)),s.V),lRe),ho(s.D).setAttribute(qSe,'eg: 000,000,000,000,000.00'),Bdd(s.A).length==0||qo(s.A,hLe),Cdd(s.A,'Money'),(ho(s.D).getAttribute(qSe)||'').length==0||qo(s.A,hLe),s.a='000,000,000,000,000.00',s)),p)),$Kb(c,(t=new I_b,$Kb(t,(u=new h_b,uhc((!u.V&&(u.V=new whc(u)),u.V),lRe),ho(u.D).setAttribute(qSe,t3e),Bdd(u.A).length==0||qo(u.A,hLe),Cdd(u.A,u3e),(ho(u.D).getAttribute(qSe)||'').length==0||qo(u.A,hLe),u.a=v3e,u)),$Kb(t,(v=new h_b,uhc((!v.V&&(v.V=new whc(v)),v.V),lRe),ho(v.D).setAttribute(qSe,w3e),Bdd(v.A).length==0||qo(v.A,hLe),Cdd(v.A,x3e),(ho(v.D).getAttribute(qSe)||'').length==0||qo(v.A,hLe),v.a=y3e,v)),$Kb(t,(w=new h_b,uhc((!w.V&&(w.V=new whc(w)),w.V),lRe),ho(w.D).setAttribute(qSe,z3e),Bdd(w.A).length==0||qo(w.A,hLe),Cdd(w.A,A3e),(ho(w.D).getAttribute(qSe)||'').length==0||qo(w.A,hLe),w.a=B3e,w)),t)),$Kb(c,(A=new Ule,Ndd(A,(B=new twe,B.a+='\\u2003&lt;m:MaterialRow&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"Phone Number\" placeholder=\"eg: 000-00-0000000\" mask=\"000-00-0000000\" grid=\"s12 m4 l4\"/&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"Phone with Odd\" placeholder=\"eg: (00) 0000-0000\" mask=\"(00) 0000-0000\" grid=\"s12 m4 l4\"/&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"US Phone Number\" placeholder=\"eg: (000) 000-000\" mask=\"(000) 000-000\" grid=\"s12 m4 l4\"/&gt;<br> &lt;/m:MaterialRow&gt;<br> &lt;m:MaterialRow&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"CEP\" placeholder=\"eg: 00000-000\" mask=\"00000-000\" grid=\"s12 m4 l4\"/&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"CPF\" placeholder=\"eg: 000.000.000-00\" mask=\"000.000.000-00\" grid=\"s12 m4 l4\"/&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"Money\" placeholder=\"eg: 000,000,000,000,000.00\" mask=\"000,000,000,000,000.00\" grid=\"s12 m4 l4\"/&gt;<br> &lt;/m:MaterialRow&gt;<br> &lt;m:MaterialRow&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"Ip Address\" placeholder=\"eg: 000.000.000.000\" mask=\"000.000.000.000\" grid=\"s12 m4 l4\"/&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"Percentage\" placeholder=\"eg: 000000.00%\" mask=\"000000.00%\" grid=\"s12 m4 l4\"/&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"Credit Card\" placeholder=\"eg: 0000 0000 0000 0000\" mask=\"0000 0000 0000 0000\" grid=\"s12 m4 l4\"/&gt;<br> &lt;/m:MaterialRow&gt;<br>',new Orb(B.a)).a),yo(A.rb,oSe,true),A)),yo(c.rb,JOe,true),c));$Kb(b,(d=new I_b,$Kb(d,(C=new yad,Ldd(C.b,'The mask will be placed from the right to the left if reverse is true (Default : false)'),xs(ho(C.a),(new Urb(fsb('Reverse'))).a),bA(C,'Reverse'),C)),$Kb(d,(D=new I_b,$Kb(D,(F=new h_b,uhc((!F.V&&(F.V=new whc(F)),F.V),lRe),ho(F.D).setAttribute(qSe,t3e),Bdd(F.A).length==0||qo(F.A,hLe),Cdd(F.A,u3e),(ho(F.D).getAttribute(qSe)||'').length==0||qo(F.A,hLe),F.b.reverse=true,F.a=v3e,F)),$Kb(D,(G=new h_b,uhc((!G.V&&(G.V=new whc(G)),G.V),lRe),ho(G.D).setAttribute(qSe,w3e),Bdd(G.A).length==0||qo(G.A,hLe),Cdd(G.A,x3e),(ho(G.D).getAttribute(qSe)||'').length==0||qo(G.A,hLe),G.b.reverse=true,G.a=y3e,G)),$Kb(D,(H=new h_b,uhc((!H.V&&(H.V=new whc(H)),H.V),lRe),ho(H.D).setAttribute(qSe,z3e),Bdd(H.A).length==0||qo(H.A,hLe),Cdd(H.A,A3e),(ho(H.D).getAttribute(qSe)||'').length==0||qo(H.A,hLe),H.b.reverse=true,H.a=B3e,H)),D)),$Kb(d,(I=new Ule,Ndd(I,(J=new twe,J.a+='&lt;ma:inputmask.MaterialInputMask label=\"Ip Address\" placeholder=\"eg: 000.000.000.000\" mask=\"000.000.000.000\" reverse=\"true\" grid=\"s12 m4 l4\"/&gt;<br> &lt;ma:inputmask.MaterialInputMask label=\"Percentage\" placeholder=\"eg: 000000.00%\" mask=\"000000.00%\" reverse=\"true\" grid=\"s12 m4 l4\"/&gt;<br> &lt;ma:inputmask.MaterialInputMask label=\"Credit Card\" placeholder=\"eg: 0000 0000 0000 0000\" mask=\"0000 0000 0000 0000\" reverse=\"true\" grid=\"s12 m4 l4\"/&gt;<br>',new Orb(J.a)).a),yo(I.rb,oSe,true),I)),yo(d.rb,JOe,true),d));$Kb(b,(e=new I_b,$Kb(e,(K=new yad,Ldd(K.b,'The textfield will automatically clears whenever the value is not match with the mask provided. (Default : false)'),xs(ho(K.a),(new Urb(fsb(C3e))).a),bA(K,C3e),K)),$Kb(e,(L=new I_b,$Kb(L,(M=new h_b,uhc((!M.V&&(M.V=new whc(M)),M.V),lRe),M.b.clearIfNotMatch=true,ho(M.D).setAttribute(qSe,t3e),Bdd(M.A).length==0||qo(M.A,hLe),Cdd(M.A,u3e),(ho(M.D).getAttribute(qSe)||'').length==0||qo(M.A,hLe),M.a=v3e,M)),$Kb(L,(N=new h_b,uhc((!N.V&&(N.V=new whc(N)),N.V),lRe),N.b.clearIfNotMatch=true,ho(N.D).setAttribute(qSe,w3e),Bdd(N.A).length==0||qo(N.A,hLe),Cdd(N.A,x3e),(ho(N.D).getAttribute(qSe)||'').length==0||qo(N.A,hLe),N.a=y3e,N)),$Kb(L,(O=new h_b,uhc((!O.V&&(O.V=new whc(O)),O.V),lRe),O.b.clearIfNotMatch=true,ho(O.D).setAttribute(qSe,z3e),Bdd(O.A).length==0||qo(O.A,hLe),Cdd(O.A,A3e),(ho(O.D).getAttribute(qSe)||'').length==0||qo(O.A,hLe),O.a=B3e,O)),L)),$Kb(e,(P=new Ule,Ndd(P,(Q=new twe,Q.a+='&lt;ma:inputmask.MaterialInputMask label=\"Ip Address\" placeholder=\"eg: 000.000.000.000\" mask=\"000.000.000.000\" clearIfNotMatch=\"true\" grid=\"s12 m4 l4\"/&gt;<br> &lt;ma:inputmask.MaterialInputMask label=\"Percentage\" placeholder=\"eg: 000000.00%\" mask=\"000000.00%\" clearIfNotMatch=\"true\" grid=\"s12 m4 l4\"/&gt;<br> &lt;ma:inputmask.MaterialInputMask label=\"Credit Card\" placeholder=\"eg: 0000 0000 0000 0000\" mask=\"0000 0000 0000 0000\" clearIfNotMatch=\"true\" grid=\"s12 m4 l4\"/&gt;<br>',new Orb(Q.a)).a),yo(P.rb,oSe,true),P)),yo(e.rb,JOe,true),e));$Kb(b,(f=new I_b,$Kb(f,(R=new yad,Ldd(R.b,'Set whether you want to set on focus on your mask for easy selection.'),xs(ho(R.a),(new Urb(fsb(D3e))).a),bA(R,D3e),R)),$Kb(f,(S=new I_b,$Kb(S,(T=new h_b,uhc((!T.V&&(T.V=new whc(T)),T.V),lRe),T.b.selectOnFocus=true,ho(T.D).setAttribute(qSe,t3e),Bdd(T.A).length==0||qo(T.A,hLe),Cdd(T.A,u3e),(ho(T.D).getAttribute(qSe)||'').length==0||qo(T.A,hLe),T.a=v3e,T)),$Kb(S,(U=new h_b,uhc((!U.V&&(U.V=new whc(U)),U.V),lRe),U.b.selectOnFocus=true,ho(U.D).setAttribute(qSe,w3e),Bdd(U.A).length==0||qo(U.A,hLe),Cdd(U.A,x3e),(ho(U.D).getAttribute(qSe)||'').length==0||qo(U.A,hLe),U.a=y3e,U)),$Kb(S,(V=new h_b,uhc((!V.V&&(V.V=new whc(V)),V.V),lRe),V.b.selectOnFocus=true,ho(V.D).setAttribute(qSe,z3e),Bdd(V.A).length==0||qo(V.A,hLe),Cdd(V.A,A3e),(ho(V.D).getAttribute(qSe)||'').length==0||qo(V.A,hLe),V.a=B3e,V)),S)),$Kb(f,(W=new Ule,Ndd(W,(X=new twe,X.a+='&lt;ma:inputmask.MaterialInputMask label=\"Ip Address\" placeholder=\"eg: 000.000.000.000\" mask=\"000.000.000.000\" selectOnFocus=\"true\" grid=\"s12 m4 l4\"/&gt;<br> &lt;ma:inputmask.MaterialInputMask label=\"Percentage\" placeholder=\"eg: 000000.00%\" mask=\"000000.00%\" selectOnFocus=\"true\" grid=\"s12 m4 l4\"/&gt;<br> &lt;ma:inputmask.MaterialInputMask label=\"Credit Card\" placeholder=\"eg: 0000 0000 0000 0000\" mask=\"0000 0000 0000 0000\" selectOnFocus=\"true\" grid=\"s12 m4 l4\"/&gt;<br>',new Orb(X.a)).a),yo(W.rb,oSe,true),W)),yo(f.rb,JOe,true),f));$Kb(b,(g=new I_b,$Kb(g,(Y=new yad,Ldd(Y.b,'Gets the value of the field with the mask.'),xs(ho(Y.a),(new Urb(fsb(S1e))).a),bA(Y,S1e),Y)),$Kb(g,(Z=new I_b,$Kb(Z,($=new h_b,uhc((!$.V&&($.V=new whc($)),$.V),lRe),ho($.D).setAttribute(qSe,t3e),Bdd($.A).length==0||qo($.A,hLe),Cdd($.A,u3e),(ho($.D).getAttribute(qSe)||'').length==0||qo($.A,hLe),$.b.reverse=true,$.a=v3e,a.e.b=$,$)),$Kb(Z,(ab=new k2c,$Kb(ab,(bb=new JRb,RSb(bb.j,S1e),bb.j.mb||$Kb(bb,bb.j),cLb(bb,a.b),bb)),uhc((!ab.V&&(ab.V=new whc(ab)),ab.V),pSe),ab)),Z)),$Kb(g,(cb=new Ule,Ndd(cb,(db=new twe,db.a+='inputMask.getValue();',new Orb(db.a)).a),yo(cb.rb,uSe,true),cb)),yo(g.rb,JOe,true),g));$Kb(b,(h=new I_b,$Kb(h,(eb=new yad,Ldd(eb.b,'Gets the value of the field without the mask.'),xs(ho(eb.a),(new Urb(fsb(E3e))).a),bA(eb,E3e),eb)),$Kb(h,(fb=new I_b,$Kb(fb,(gb=new h_b,uhc((!gb.V&&(gb.V=new whc(gb)),gb.V),lRe),ho(gb.D).setAttribute(qSe,t3e),Bdd(gb.A).length==0||qo(gb.A,hLe),Cdd(gb.A,u3e),(ho(gb.D).getAttribute(qSe)||'').length==0||qo(gb.A,hLe),gb.b.reverse=true,gb.a=v3e,a.e.a=gb,gb)),$Kb(fb,(hb=new k2c,$Kb(hb,(ib=new JRb,RSb(ib.j,E3e),ib.j.mb||$Kb(ib,ib.j),cLb(ib,a.a),ib)),uhc((!hb.V&&(hb.V=new whc(hb)),hb.V),pSe),hb)),fb)),$Kb(h,(jb=new Ule,Ndd(jb,(kb=new twe,kb.a+='inputMask.getCleanValue();',new Orb(kb.a)).a),yo(jb.rb,uSe,true),jb)),yo(h.rb,JOe,true),h));$Kb(b,(i=new I_b,$Kb(i,(lb=new yad,Ldd(lb.b,'Programmatically controls the Input Mask main methods.'),xs(ho(lb.a),(new Urb(fsb(F3e))).a),bA(lb,F3e),lb)),$Kb(i,(mb=new I_b,$Kb(mb,(nb=new h_b,uhc((!nb.V&&(nb.V=new whc(nb)),nb.V),lRe),ho(nb.D).setAttribute(qSe,t3e),Bdd(nb.A).length==0||qo(nb.A,hLe),Cdd(nb.A,u3e),(ho(nb.D).getAttribute(qSe)||'').length==0||qo(nb.A,hLe),nb.b.reverse=true,nb.a=v3e,a.e.c=nb,nb)),$Kb(mb,(ob=new k2c,$Kb(ob,(pb=new JRb,pb.rb.style[lLe]=dUe,ULb(pb,(hpc(),Uoc)),RSb(pb.j,'Unmask'),pb.j.mb||$Kb(pb,pb.j),uMb(pb,Hkc),cLb(pb,a.c),pb)),$Kb(ob,(qb=new JRb,RSb(qb.j,'mask'),qb.j.mb||$Kb(qb,qb.j),cLb(qb,a.d),qb)),uhc((!ob.V&&(ob.V=new whc(ob)),ob.V),pSe),ob)),mb)),$Kb(i,(rb=new Ule,Ndd(rb,(sb=new twe,sb.a+='\\u2003inputMask.mask(\"00.00\"); <br> inputMask.unmask();',new Orb(sb.a)).a),yo(rb.rb,uSe,true),rb)),yo(i.rb,JOe,true),i));return b}\nvar r3e='gwt.material.design.addins.client.inputmask',s3e='Basic Examples',t3e='eg: 000.000.000.000',u3e='Ip Address',v3e='000.000.000.000',w3e='eg: 000000.00%',x3e='Percentage',y3e='000000.00%',z3e='eg: 0000 0000 0000 0000',A3e='Credit Card',B3e='0000 0000 0000 0000',C3e='Clear If not Match',D3e='Select on Focus',E3e='Get Clean Value',F3e='Unmask and Mask control';Mqb(145,120,UMe,h_b);_.Ue=function i_b(){this.a==null||this.a.length==0?(fs(),fs()):g_b(this,this.a)};_.Fc=function j_b(){L$b(this);this.a==null||this.a.length==0?(fs(),fs()):g_b(this,this.a)};_.Gc=function k_b(){!this.W&&(this.W=new LUc(this));IUc(this.W);$wnd.$(ho(rD(this.D,205))).unmask()};_.Ve=function l_b(){$wnd.$(ho(rD(this.D,205))).unmask()};var PN=Eue(r3e,'MaterialInputMask',145);var m_b;Mqb(2738,1,{},n_b);_.Gd=function o_b(){return 'inputMaskJs'};_.Hd=function p_b(){var a;a=new twe;a.a+=\"/**\\n * jquery.mask.js\\n * @version: v1.14.10\\n * @author: Igor Escobar\\n *\\n * Created by Igor Escobar on 2012-03-10. Please report any bug at http://blog.igorescobar.com\\n *\\n * Copyright (c) 2012 Igor Escobar http://blog.igorescobar.com\\n *\\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\\n *\\n * Permission is hereby granted, free of charge, to any person\\n * obtaining a copy of this software and associated documentation\\n * files (the \\\"Software\\\"), to deal in the Software without\\n * restriction, including without limitation the rights to use,\\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\\n * copies of the Software, and to permit persons to whom the\\n * Software is furnished to do so, subject to the following\\n * conditions:\\n *\\n * The above copyright notice and this permission notice shall be\\n * included in all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND,\\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\\n * OTHER DEALINGS IN THE SOFTWARE.\\n */\\n\\n/* jshint laxbreak: true */\\n/* jshint maxcomplexity:17 */\\n/* global define */\\n\\n'use strict';\\n\\n// UMD (Universal Module Definition) patterns for JavaScript modules that work everywhere.\\n// https://github.com/umdjs/umd/blob/master/jqueryPluginCommonjs.js\\n(function (factory, jQuery, Zepto) {\\n\\n    if (typeof define === 'function' && define.amd) {\\n        define(['jquery'], factory);\\n    } else if (typeof exports === 'object') {\\n        module.exports = factory(require('jquery'));\\n    } else {\\n        factory(jQuery || Zepto);\\n    }\\n\\n}(function ($) {\\n\\n    var Mask = function (el, mask, options) {\\n\\n        var p = {\\n            invalid: [],\\n            getCaret: function () {\\n                try {\\n                    var sel,\\n                        pos = 0,\\n                        ctrl = el.get(0),\\n                        dSel = document.selection,\\n                        cSelStart = ctrl.selectionStart;\\n\\n                    // IE Support\\n                    if (dSel && navigator.appVersion.indexOf('MSIE 10') === -1) {\\n                        sel = dSel.createRange();\\n                        sel.moveStart('character', -p.val().length);\\n                        pos = sel.text.length;\\n                    }\\n                    // Firefox support\\n                    else if (cSelStart || cSelStart === '0') {\\n                        pos = cSelStart;\\n                    }\\n\\n                    return pos;\\n                } catch (e) {}\\n            },\\n            setCaret: function(pos) {\\n                try {\\n                    if (el.is(':focus')) {\\n                        var range, ctrl = el.get(0);\\n\\n                        // Firefox, WebKit, etc..\\n                        if (ctrl.setSelectionRange) {\\n                            ctrl.setSelectionRange(pos, pos);\\n                        } else { // IE\\n                            range = ctrl.createTextRange();\\n                            range.collapse(true);\\n                            range.moveEnd('character', pos);\\n                            range.moveStart('character', pos);\\n                            range.select();\\n                        }\\n                    }\\n                } catch (e) {}\\n            },\\n            events: function() {\\n                el\\n                    .on('keydown.mask', function(e) {\\n                        el.data('mask-keycode', e.keyCode || e.which);\\n                        el.data('mask-previus-value', el.val());\\n                    })\\n                    .on($.jMaskGlobals.useInput ? 'input.mask' : 'keyup.mask', p.behaviour)\\n                    .on('paste.mask drop.mask', function() {\\n                        setTimeout(function() {\\n                            el.keydown().keyup();\\n                        }, 100);\\n                    })\\n                    .on('change.mask', function(){\\n                        el.data('changed', true);\\n                    })\\n                    .on('blur.mask', function(){\\n                        if (oldValue !== p.val() && !el.data('changed')) {\\n                            el.trigger('change');\\n                        }\\n                        el.data('changed', false);\\n                    })\\n                    // it's very important that this callback remains in this position\\n                    // otherwhise oldValue it's going to work buggy\\n                    .on('blur.mask', function() {\\n                        oldValue = p.val();\\n                    })\\n                    // select all text on focus\\n                    .on('focus.mask', function (e) {\\n                        if (options.selectOnFocus === true) {\\n                            $(e.target).select();\\n                        }\\n                    })\\n                    // clear the value if it not complete the mask\\n                    .on('focusout.mask', function() {\\n                        if (options.clearIfNotMatch && !regexMask.test(p.val())) {\\n                            p.val('');\\n                        }\\n                    });\\n            },\\n            getRegexMask: function() {\\n                var maskChunks = [], translation, pattern, optional, recursive, oRecursive, r;\\n\\n                for (var i = 0; i < mask.length; i++) {\\n                    translation = jMask.translation[mask.charAt(i)];\\n\\n                    if (translation) {\\n\\n                        pattern = translation.pattern.toString().replace(/.{1}$|^.{1}/g, '');\\n                        optional = translation.optional;\\n                        recursive = translation.recursive;\\n\\n                        if (recursive) {\\n                            maskChunks.push(mask.charAt(i));\\n                            oRecursive = {digit: mask.charAt(i), pattern: pattern};\\n                        } else {\\n                            maskChunks.push(!optional && !recursive ? pattern : (pattern + '?'));\\n                        }\\n\\n                    } else {\\n                        maskChunks.push(mask.charAt(i).replace(/[-\\\\/\\\\\\\\^$*+?.()|[\\\\]{}]/g, '\\\\\\\\$&'));\\n                    }\\n                }\\n\\n                r = maskChunks.join('');\\n\\n                if (oRecursive) {\\n                    r = r.replace(new RegExp('(' + oRecursive.digit + '(.*' + oRecursive.digit + ')?)'), '($1)?')\\n                        .replace(new RegExp(oRecursive.digit, 'g'), oRecursive.pattern);\\n                }\\n\\n                return new RegExp(r);\\n            },\\n            destroyEvents: function() {\\n                el.off(['input', 'keydown', 'keyup', 'paste', 'drop', 'blur', 'focusout', ''].join('.mask '));\\n            },\\n            val: function(v) {\\n                var isInput = el.is('input'),\\n                    method = isInput ? 'val' : 'text',\\n                    r;\\n\\n                if (arguments.length > 0) {\\n                    if (el[method]() !== v) {\\n                        el[method](v);\\n                    }\\n                    r = el;\\n                } else {\\n                    r = el[method]();\\n                }\\n\\n                return r;\\n            },\\n            calculateCaretPosition: function(caretPos, newVal) {\\n                var newValL = newVal.length,\\n                    oValue  = el.data('mask-previus-value') || '',\\n                    oValueL = oValue.length;\\n\\n                // edge cases when erasing digits\\n                if (el.data('mask-keycode') === 8 && oValue !== newVal) {\\n                    caretPos = caretPos - (newVal.slice(0, caretPos).length - oValue.slice(0, caretPos).length);\\n\\n                    // edge cases when typing new digits\\n                } else if (oValue !== newVal) {\\n                    // if the cursor is at the end keep it there\\n                    if (caretPos >= oValueL) {\\n                        caretPos = newValL;\\n                    } else {\\n                        caretPos = caretPos + (newVal.slice(0, caretPos).length - oValue.slice(0, caretPos).length);\\n                    }\\n                }\\n\\n                return caretPos;\\n            },\\n            behaviour: function(e) {\\n                e = e || window.event;\\n                p.invalid = [];\\n\\n                var keyCode = el.data('mask-keycode');\\n\\n                if ($.inArray(keyCode, jMask.byPassKeys) === -1) {\\n                    var newVal   = p.getMasked(),\\n                        caretPos = p.getCaret();\\n\\n                    setTimeout(function(caretPos, newVal) {\\n                        p.setCaret(p.calculateCaretPosition(caretPos, newVal));\\n                    }, 10, caretPos, newVal);\\n\\n                    p.val(newVal);\\n                    p.setCaret(caretPos);\\n                    return p.callbacks(e);\\n                }\\n            },\\n            getMasked: function(skipMaskChars, val) {\\n                var buf = [],\\n                    value = val === undefined ? p.val() : val + '',\\n                    m = 0, maskLen = mask.length,\\n                    v = 0, valLen = value.length,\\n                    offset = 1, addMethod = 'push',\\n                    resetPos = -1,\\n                    lastMaskChar,\\n                    check;\\n\\n                if (options.reverse) {\\n                    addMethod = 'unshift';\\n                    offset = -1;\\n                    lastMaskChar = 0;\\n                    m = maskLen - 1;\\n                    v = valLen - 1;\\n                    check = function () {\\n                        return m > -1 && v > -1;\\n                    };\\n                } else {\\n                    lastMaskChar = maskLen - 1;\\n                    check = function () {\\n                        return m < maskLen && v < valLen;\\n                    };\\n                }\\n\\n                var lastUntranslatedMaskChar;\\n                while (check()) {\\n                    var maskDigit = mask.charAt(m),\\n                        valDigit = value.charAt(v),\\n                        translation = jMask.translation[maskDigit];\\n\\n                    if (translation) {\\n                        if (valDigit.match(translation.pattern)) {\\n                            buf[addMethod](valDigit);\\n                            if (translation.recursive) {\\n                                if (resetPos === -1) {\\n                                    resetPos = m;\\n                                } else if (m === lastMaskChar) {\\n                                    m = resetPos - offset;\\n                                }\\n\\n                                if (lastMaskChar === resetPos) {\\n                                    m -= offset;\\n                                }\\n                            }\\n                            m += offset;\\n                        } else if (valDigit === lastUntranslatedMaskChar) {\\n                            // matched the last untranslated (raw) mask character that we encountered\\n                            // likely an insert offset the mask character from the last entry; fall\\n                            // through and only increment v\\n                            lastUntranslatedMaskChar = undefined;\\n                        } else if (translation.optional) {\\n                            m += offset;\\n                            v -= offset;\\n                        } else if (translation.fallback) {\\n                            buf[addMethod](translation.fallback);\\n                            m += offset;\\n                            v -= offset;\\n                        } else {\\n                            p.invalid.push({p: v, v: valDigit, e: translation.pattern});\\n                        }\\n                        v += offset;\\n                    } else {\\n                        if (!skipMaskChars) {\\n                            buf[addMethod](maskDigit);\\n                        }\\n\\n                        if (valDigit === maskDigit) {\\n                            v += offset;\\n                        } else {\\n                            lastUntranslatedMaskChar = maskDigit;\\n                        }\\n\\n                        m += offset;\\n                    }\\n                }\\n\\n                var lastMaskCharDigit = mask.charAt(lastMaskChar);\\n                if (maskLen === valLen + 1 && !jMask.translation[lastMaskCharDigit]) {\\n                    buf.push(lastMaskCharDigit);\\n                }\\n\\n                return buf.join('');\\n            },\\n            callbacks: function (e) {\\n                var val = p.val(),\\n                    changed = val !== oldValue,\\n                    defaultArgs = [val, e, el, options],\\n                    callback = function(name, criteria, args) {\\n                        if (typeof options[name] === 'function' && criteria) {\\n                            options[name].apply(this, args);\\n                        }\\n                    };\\n\\n                callback('onChange', changed === true, defaultArgs);\\n                callback('onKeyPress', changed === true, defaultArgs);\\n                callback('onComplete', val.length === mask.length, defaultArgs);\\n                callback('onInvalid', p.invalid.length > 0, [val, e, el, p.invalid, options]);\\n            }\\n        };\\n\\n        el = $(el);\\n        var jMask = this, oldValue = p.val(), regexMask;\\n\\n        mask = typeof mask === 'function' ? mask(p.val(), undefined, el,  options) : mask;\\n\\n        // public methods\\n        jMask.mask = mask;\\n        jMask.options = options;\\n        jMask.remove = function() {\\n            var caret = p.getCaret();\\n            p.destroyEvents();\\n            p.val(jMask.getCleanVal());\\n            p.setCaret(caret);\\n            return el;\\n        };\\n\\n        // get value without mask\\n        jMask.getCleanVal = function() {\\n            return p.getMasked(true);\\n        };\\n\\n        // get masked value without the value being in the input or element\\n        jMask.getMaskedVal = function(val) {\\n            return p.getMasked(false, val);\\n        };\\n\\n        jMask.init = function(onlyMask) {\\n            onlyMask = onlyMask || false;\\n            options = options || {};\\n\\n            jMask.clearIfNotMatch  = $.jMaskGlobals.clearIfNotMatch;\\n            jMask.byPassKeys       = $.jMaskGlobals.byPassKeys;\\n            jMask.translation      = $.extend({}, $.jMaskGlobals.translation, options.translation);\\n\\n            jMask = $.extend(true, {}, jMask, options);\\n\\n            regexMask = p.getRegexMask();\\n\\n            if (onlyMask) {\\n                p.events();\\n                p.val(p.getMasked());\\n            } else {\\n                if (options.placeholder) {\\n                    el.attr('placeholder' , options.placeholder);\\n                }\\n\\n                // this is necessary, otherwise if the user submit the form\\n                // and then press the \\\"back\\\" button, the autocomplete will erase\\n                // the data. Works fine on IE9+, FF, Opera, Safari.\\n                if (el.data('mask')) {\\n                    el.attr('autocomplete', 'off');\\n                }\\n\\n                // detect if is necessary let the user type freely.\\n                // for is a lot faster than forEach.\\n                for (var i = 0, maxlength = true; i < mask.length; i++) {\\n                    var translation = jMask.translation[mask.charAt(i)];\\n                    if (translation && translation.recursive) {\\n                        maxlength = false;\\n                        break;\\n                    }\\n                }\\n\\n                if (maxlength) {\\n                    el.attr('maxlength', mask.length);\\n                }\\n\\n                p.destroyEvents();\\n                p.events();\\n\\n                var caret = p.getCaret();\\n                p.val(p.getMasked());\\n                p.setCaret(caret);\\n            }\\n        };\\n\\n        jMask.init(!el.is('input'));\\n    };\\n\\n    $.maskWatchers = {};\\n    var HTMLAttributes = function () {\\n            var input = $(this),\\n                options = {},\\n                prefix = 'data-mask-',\\n                mask = input.attr('data-mask');\\n\\n            if (input.attr(prefix + 'reverse')) {\\n                options.reverse = true;\\n            }\\n\\n            if (input.attr(prefix + 'clearifnotmatch')) {\\n              \";a.a+=\"  options.clearIfNotMatch = true;\\n            }\\n\\n            if (input.attr(prefix + 'selectonfocus') === 'true') {\\n                options.selectOnFocus = true;\\n            }\\n\\n            if (notSameMaskObject(input, mask, options)) {\\n                return input.data('mask', new Mask(this, mask, options));\\n            }\\n        },\\n        notSameMaskObject = function(field, mask, options) {\\n            options = options || {};\\n            var maskObject = $(field).data('mask'),\\n                stringify = JSON.stringify,\\n                value = $(field).val() || $(field).text();\\n            try {\\n                if (typeof mask === 'function') {\\n                    mask = mask(value);\\n                }\\n                return typeof maskObject !== 'object' || stringify(maskObject.options) !== stringify(options) || maskObject.mask !== mask;\\n            } catch (e) {}\\n        },\\n        eventSupported = function(eventName) {\\n            var el = document.createElement('div'), isSupported;\\n\\n            eventName = 'on' + eventName;\\n            isSupported = (eventName in el);\\n\\n            if ( !isSupported ) {\\n                el.setAttribute(eventName, 'return;');\\n                isSupported = typeof el[eventName] === 'function';\\n            }\\n            el = null;\\n\\n            return isSupported;\\n        };\\n\\n    $.fn.mask = function(mask, options) {\\n        options = options || {};\\n        var selector = this.selector,\\n            globals = $.jMaskGlobals,\\n            interval = globals.watchInterval,\\n            watchInputs = options.watchInputs || globals.watchInputs,\\n            maskFunction = function() {\\n                if (notSameMaskObject(this, mask, options)) {\\n                    return $(this).data('mask', new Mask(this, mask, options));\\n                }\\n            };\\n\\n        $(this).each(maskFunction);\\n\\n        if (selector && selector !== '' && watchInputs) {\\n            clearInterval($.maskWatchers[selector]);\\n            $.maskWatchers[selector] = setInterval(function(){\\n                $(document).find(selector).each(maskFunction);\\n            }, interval);\\n        }\\n        return this;\\n    };\\n\\n    $.fn.masked = function(val) {\\n        return this.data('mask').getMaskedVal(val);\\n    };\\n\\n    $.fn.unmask = function() {\\n        clearInterval($.maskWatchers[this.selector]);\\n        delete $.maskWatchers[this.selector];\\n        return this.each(function() {\\n            var dataMask = $(this).data('mask');\\n            if (dataMask) {\\n                dataMask.remove().removeData('mask');\\n            }\\n        });\\n    };\\n\\n    $.fn.cleanVal = function() {\\n        return this.data('mask').getCleanVal();\\n    };\\n\\n    $.applyDataMask = function(selector) {\\n        selector = selector || $.jMaskGlobals.maskElements;\\n        var $selector = (selector instanceof $) ? selector : $(selector);\\n        $selector.filter($.jMaskGlobals.dataMaskAttr).each(HTMLAttributes);\\n    };\\n\\n    var globals = {\\n        maskElements: 'input,td,span,div',\\n        dataMaskAttr: '*[data-mask]',\\n        dataMask: true,\\n        watchInterval: 300,\\n        watchInputs: true,\\n        // old versions of chrome dont work great with input event\\n        useInput: !/Chrome\\\\/[2-4][0-9]|SamsungBrowser/.test(window.navigator.userAgent) && eventSupported('input'),\\n        watchDataMask: false,\\n        byPassKeys: [9, 16, 17, 18, 36, 37, 38, 39, 40, 91],\\n        translation: {\\n            '0': {pattern: /\\\\d/},\\n            '9': {pattern: /\\\\d/, optional: true},\\n            '#': {pattern: /\\\\d/, recursive: true},\\n            'A': {pattern: /[a-zA-Z0-9]/},\\n            'S': {pattern: /[a-zA-Z]/}\\n        }\\n    };\\n\\n    $.jMaskGlobals = $.jMaskGlobals || {};\\n    globals = $.jMaskGlobals = $.extend(true, {}, globals, $.jMaskGlobals);\\n\\n    // looking for inputs with data-mask attribute\\n    if (globals.dataMask) {\\n        $.applyDataMask();\\n    }\\n\\n    setInterval(function() {\\n        if ($.jMaskGlobals.watchDataMask) {\\n            $.applyDataMask();\\n        }\\n    }, globals.watchInterval);\\n}, window.jQuery, window.Zepto));\\n\";return a.a};var ON=Eue(r3e,'MaterialInputMaskClientBundle_default_InlineClientBundleGenerator/1',2738);Mqb(924,54,VKe,rsd);_.ze=function ssd(){_he();FEb(this,new bie(PZe,'An inputmask helps the user with the input by ensuring a predefined format. This can be useful for dates, numerics, phone numbers etc...','addins/inputmask/InputMask',''))};var L0=Eue($Te,'InputMaskPresenter',924);Mqb(1308,62,WKe,ysd);var R0=Eue($Te,'InputMaskView',1308);Mqb(1762,1,{},Asd);var Q0=Eue($Te,'InputMaskView_BinderImpl/Widgets',1762);Mqb(1763,1,zLe,Bsd);_.kd=function Csd(a){Had($wnd.$(ho(rD(this.a.e.a.D,205))).cleanVal())};var M0=Eue($Te,'InputMaskView_BinderImpl/Widgets/1',1763);Mqb(1764,1,zLe,Dsd);_.kd=function Esd(a){Had(xD(this.a.e.b.D.Td()))};var N0=Eue($Te,'InputMaskView_BinderImpl/Widgets/2',1764);Mqb(1765,1,zLe,Fsd);_.kd=function Gsd(a){$wnd.$(ho(rD(this.a.e.c.D,205))).unmask()};var O0=Eue($Te,'InputMaskView_BinderImpl/Widgets/3',1765);Mqb(1766,1,zLe,Hsd);_.kd=function Isd(a){g_b(this.a.e.c,v3e)};var P0=Eue($Te,'InputMaskView_BinderImpl/Widgets/4',1766);Mqb(770,1,KSe);_.Vc=function Rsd(){UIb(this.b,Ksd(this.a.a))};PGe(Dq)(10);\n//# sourceURL=gwtmaterialdemo-10.js\n")
