$wnd.gwtmaterialdemo.runAsyncCallback10("function i_b(){}\nfunction ysd(a){this.a=a}\nfunction Asd(a){this.a=a}\nfunction Csd(a){this.a=a}\nfunction Esd(a){this.a=a}\nfunction l_b(){l_b=Jqb;h_b=new i_b}\nfunction c_b(){a_b();_$b.call(this);this.b=new $wnd.Object}\nfunction vsd(){jFb.call(this);hFb(this,wsd(new xsd(this)))}\nfunction osd(a,b,c){uEb();TEb.call(this,a,b,c,(Ehd(),Chd))}\nfunction b_b(a,b){$wnd.$(ho(rD(a.D,204))).mask(b,a.b)}\nfunction Isd(a){var b;if(!a.d){b=new vsd;a.d=b}return a.d}\nfunction a_b(){a_b=Jqb;!RKb&&(RKb=new SKb);Wbc();$bc((l_b(),h_b),true,false)}\nfunction xsd(a){this.a=new ysd(this);this.b=new Asd(this);this.c=new Csd(this);this.d=new Esd(this);this.e=a}\nfunction Hsd(a){var b,c;if(!a.c){c=new osd(HBb(BFb(a.a)),(b=Isd(a),b),Gsd(a));mEb((EFb(a.a),c),zHb(EFb(a.a)));a.c=c}return a.c}\nfunction wsd(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,$,ab,bb,cb,db,eb,fb,gb,hb,ib,jb,kb,lb,mb,nb,ob,pb,qb,rb,sb;b=new jbc;WKb(b,(c=new D_b,WKb(c,(j=new vad,xs(ho(j.a),(asb(),(new Qrb(bsb(Z_e))).a)),bA(j,Z_e),j)),WKb(c,(k=new iie,lRb(k.a,l_e),nRb(k.a),(Isb(),k.rb).style[pPe]=(Sw(),xPe),oRb(k.a,'jQuery-Mask-Plugin 1.14.10'),k)),WKb(c,(l=new D_b,WKb(l,(m=new c_b,rhc((!m.V&&(m.V=new thc(m)),m.V),HNe),ho(m.D).setAttribute(QOe,'eg: 000-00-0000000'),ydd(m.A).length==0||qo(m.A,EHe),zdd(m.A,'Phone Number'),(ho(m.D).getAttribute(QOe)||'').length==0||qo(m.A,EHe),m.a='000-00-0000000',m)),WKb(l,(n=new c_b,rhc((!n.V&&(n.V=new thc(n)),n.V),HNe),ho(n.D).setAttribute(QOe,'eg: (00) 0000-0000'),ydd(n.A).length==0||qo(n.A,EHe),zdd(n.A,'Phone with Odd'),(ho(n.D).getAttribute(QOe)||'').length==0||qo(n.A,EHe),n.a='(00) 0000-0000',n)),WKb(l,(o=new c_b,rhc((!o.V&&(o.V=new thc(o)),o.V),HNe),ho(o.D).setAttribute(QOe,'eg: (000) 000-000'),ydd(o.A).length==0||qo(o.A,EHe),zdd(o.A,'US Phone Number'),(ho(o.D).getAttribute(QOe)||'').length==0||qo(o.A,EHe),o.a='(000) 000-000',o)),l)),WKb(c,(p=new D_b,WKb(p,(q=new c_b,rhc((!q.V&&(q.V=new thc(q)),q.V),HNe),ho(q.D).setAttribute(QOe,'eg: 00000-000'),ydd(q.A).length==0||qo(q.A,EHe),zdd(q.A,'CEP'),(ho(q.D).getAttribute(QOe)||'').length==0||qo(q.A,EHe),q.a='00000-000',q)),WKb(p,(r=new c_b,rhc((!r.V&&(r.V=new thc(r)),r.V),HNe),ho(r.D).setAttribute(QOe,'eg: 000.000.000-00'),ydd(r.A).length==0||qo(r.A,EHe),zdd(r.A,'CPF'),(ho(r.D).getAttribute(QOe)||'').length==0||qo(r.A,EHe),r.a='000.000.000-00',r)),WKb(p,(s=new c_b,rhc((!s.V&&(s.V=new thc(s)),s.V),HNe),ho(s.D).setAttribute(QOe,'eg: 000,000,000,000,000.00'),ydd(s.A).length==0||qo(s.A,EHe),zdd(s.A,'Money'),(ho(s.D).getAttribute(QOe)||'').length==0||qo(s.A,EHe),s.a='000,000,000,000,000.00',s)),p)),WKb(c,(t=new D_b,WKb(t,(u=new c_b,rhc((!u.V&&(u.V=new thc(u)),u.V),HNe),ho(u.D).setAttribute(QOe,$_e),ydd(u.A).length==0||qo(u.A,EHe),zdd(u.A,__e),(ho(u.D).getAttribute(QOe)||'').length==0||qo(u.A,EHe),u.a=a0e,u)),WKb(t,(v=new c_b,rhc((!v.V&&(v.V=new thc(v)),v.V),HNe),ho(v.D).setAttribute(QOe,b0e),ydd(v.A).length==0||qo(v.A,EHe),zdd(v.A,c0e),(ho(v.D).getAttribute(QOe)||'').length==0||qo(v.A,EHe),v.a=d0e,v)),WKb(t,(w=new c_b,rhc((!w.V&&(w.V=new thc(w)),w.V),HNe),ho(w.D).setAttribute(QOe,e0e),ydd(w.A).length==0||qo(w.A,EHe),zdd(w.A,f0e),(ho(w.D).getAttribute(QOe)||'').length==0||qo(w.A,EHe),w.a=g0e,w)),t)),WKb(c,(A=new tie,Kdd(A,(B=new Rse,B.a+='\\u2003&lt;m:MaterialRow&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"Phone Number\" placeholder=\"eg: 000-00-0000000\" mask=\"000-00-0000000\" grid=\"s12 m4 l4\"/&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"Phone with Odd\" placeholder=\"eg: (00) 0000-0000\" mask=\"(00) 0000-0000\" grid=\"s12 m4 l4\"/&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"US Phone Number\" placeholder=\"eg: (000) 000-000\" mask=\"(000) 000-000\" grid=\"s12 m4 l4\"/&gt;<br> &lt;/m:MaterialRow&gt;<br> &lt;m:MaterialRow&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"CEP\" placeholder=\"eg: 00000-000\" mask=\"00000-000\" grid=\"s12 m4 l4\"/&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"CPF\" placeholder=\"eg: 000.000.000-00\" mask=\"000.000.000-00\" grid=\"s12 m4 l4\"/&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"Money\" placeholder=\"eg: 000,000,000,000,000.00\" mask=\"000,000,000,000,000.00\" grid=\"s12 m4 l4\"/&gt;<br> &lt;/m:MaterialRow&gt;<br> &lt;m:MaterialRow&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"Ip Address\" placeholder=\"eg: 000.000.000.000\" mask=\"000.000.000.000\" grid=\"s12 m4 l4\"/&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"Percentage\" placeholder=\"eg: 000000.00%\" mask=\"000000.00%\" grid=\"s12 m4 l4\"/&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"Credit Card\" placeholder=\"eg: 0000 0000 0000 0000\" mask=\"0000 0000 0000 0000\" grid=\"s12 m4 l4\"/&gt;<br> &lt;/m:MaterialRow&gt;<br>',new Krb(B.a)).a),yo(A.rb,OOe,true),A)),yo(c.rb,eLe,true),c));WKb(b,(d=new D_b,WKb(d,(C=new vad,Idd(C.b,'The mask will be placed from the right to the left if reverse is true (Default : false)'),xs(ho(C.a),(new Qrb(bsb('Reverse'))).a),bA(C,'Reverse'),C)),WKb(d,(D=new D_b,WKb(D,(F=new c_b,rhc((!F.V&&(F.V=new thc(F)),F.V),HNe),ho(F.D).setAttribute(QOe,$_e),ydd(F.A).length==0||qo(F.A,EHe),zdd(F.A,__e),(ho(F.D).getAttribute(QOe)||'').length==0||qo(F.A,EHe),F.b.reverse=true,F.a=a0e,F)),WKb(D,(G=new c_b,rhc((!G.V&&(G.V=new thc(G)),G.V),HNe),ho(G.D).setAttribute(QOe,b0e),ydd(G.A).length==0||qo(G.A,EHe),zdd(G.A,c0e),(ho(G.D).getAttribute(QOe)||'').length==0||qo(G.A,EHe),G.b.reverse=true,G.a=d0e,G)),WKb(D,(H=new c_b,rhc((!H.V&&(H.V=new thc(H)),H.V),HNe),ho(H.D).setAttribute(QOe,e0e),ydd(H.A).length==0||qo(H.A,EHe),zdd(H.A,f0e),(ho(H.D).getAttribute(QOe)||'').length==0||qo(H.A,EHe),H.b.reverse=true,H.a=g0e,H)),D)),WKb(d,(I=new tie,Kdd(I,(J=new Rse,J.a+='&lt;ma:inputmask.MaterialInputMask label=\"Ip Address\" placeholder=\"eg: 000.000.000.000\" mask=\"000.000.000.000\" reverse=\"true\" grid=\"s12 m4 l4\"/&gt;<br> &lt;ma:inputmask.MaterialInputMask label=\"Percentage\" placeholder=\"eg: 000000.00%\" mask=\"000000.00%\" reverse=\"true\" grid=\"s12 m4 l4\"/&gt;<br> &lt;ma:inputmask.MaterialInputMask label=\"Credit Card\" placeholder=\"eg: 0000 0000 0000 0000\" mask=\"0000 0000 0000 0000\" reverse=\"true\" grid=\"s12 m4 l4\"/&gt;<br>',new Krb(J.a)).a),yo(I.rb,OOe,true),I)),yo(d.rb,eLe,true),d));WKb(b,(e=new D_b,WKb(e,(K=new vad,Idd(K.b,'The textfield will automatically clears whenever the value is not match with the mask provided. (Default : false)'),xs(ho(K.a),(new Qrb(bsb(h0e))).a),bA(K,h0e),K)),WKb(e,(L=new D_b,WKb(L,(M=new c_b,rhc((!M.V&&(M.V=new thc(M)),M.V),HNe),M.b.clearIfNotMatch=true,ho(M.D).setAttribute(QOe,$_e),ydd(M.A).length==0||qo(M.A,EHe),zdd(M.A,__e),(ho(M.D).getAttribute(QOe)||'').length==0||qo(M.A,EHe),M.a=a0e,M)),WKb(L,(N=new c_b,rhc((!N.V&&(N.V=new thc(N)),N.V),HNe),N.b.clearIfNotMatch=true,ho(N.D).setAttribute(QOe,b0e),ydd(N.A).length==0||qo(N.A,EHe),zdd(N.A,c0e),(ho(N.D).getAttribute(QOe)||'').length==0||qo(N.A,EHe),N.a=d0e,N)),WKb(L,(O=new c_b,rhc((!O.V&&(O.V=new thc(O)),O.V),HNe),O.b.clearIfNotMatch=true,ho(O.D).setAttribute(QOe,e0e),ydd(O.A).length==0||qo(O.A,EHe),zdd(O.A,f0e),(ho(O.D).getAttribute(QOe)||'').length==0||qo(O.A,EHe),O.a=g0e,O)),L)),WKb(e,(P=new tie,Kdd(P,(Q=new Rse,Q.a+='&lt;ma:inputmask.MaterialInputMask label=\"Ip Address\" placeholder=\"eg: 000.000.000.000\" mask=\"000.000.000.000\" clearIfNotMatch=\"true\" grid=\"s12 m4 l4\"/&gt;<br> &lt;ma:inputmask.MaterialInputMask label=\"Percentage\" placeholder=\"eg: 000000.00%\" mask=\"000000.00%\" clearIfNotMatch=\"true\" grid=\"s12 m4 l4\"/&gt;<br> &lt;ma:inputmask.MaterialInputMask label=\"Credit Card\" placeholder=\"eg: 0000 0000 0000 0000\" mask=\"0000 0000 0000 0000\" clearIfNotMatch=\"true\" grid=\"s12 m4 l4\"/&gt;<br>',new Krb(Q.a)).a),yo(P.rb,OOe,true),P)),yo(e.rb,eLe,true),e));WKb(b,(f=new D_b,WKb(f,(R=new vad,Idd(R.b,'Set whether you want to set on focus on your mask for easy selection.'),xs(ho(R.a),(new Qrb(bsb(i0e))).a),bA(R,i0e),R)),WKb(f,(S=new D_b,WKb(S,(T=new c_b,rhc((!T.V&&(T.V=new thc(T)),T.V),HNe),T.b.selectOnFocus=true,ho(T.D).setAttribute(QOe,$_e),ydd(T.A).length==0||qo(T.A,EHe),zdd(T.A,__e),(ho(T.D).getAttribute(QOe)||'').length==0||qo(T.A,EHe),T.a=a0e,T)),WKb(S,(U=new c_b,rhc((!U.V&&(U.V=new thc(U)),U.V),HNe),U.b.selectOnFocus=true,ho(U.D).setAttribute(QOe,b0e),ydd(U.A).length==0||qo(U.A,EHe),zdd(U.A,c0e),(ho(U.D).getAttribute(QOe)||'').length==0||qo(U.A,EHe),U.a=d0e,U)),WKb(S,(V=new c_b,rhc((!V.V&&(V.V=new thc(V)),V.V),HNe),V.b.selectOnFocus=true,ho(V.D).setAttribute(QOe,e0e),ydd(V.A).length==0||qo(V.A,EHe),zdd(V.A,f0e),(ho(V.D).getAttribute(QOe)||'').length==0||qo(V.A,EHe),V.a=g0e,V)),S)),WKb(f,(W=new tie,Kdd(W,(X=new Rse,X.a+='&lt;ma:inputmask.MaterialInputMask label=\"Ip Address\" placeholder=\"eg: 000.000.000.000\" mask=\"000.000.000.000\" selectOnFocus=\"true\" grid=\"s12 m4 l4\"/&gt;<br> &lt;ma:inputmask.MaterialInputMask label=\"Percentage\" placeholder=\"eg: 000000.00%\" mask=\"000000.00%\" selectOnFocus=\"true\" grid=\"s12 m4 l4\"/&gt;<br> &lt;ma:inputmask.MaterialInputMask label=\"Credit Card\" placeholder=\"eg: 0000 0000 0000 0000\" mask=\"0000 0000 0000 0000\" selectOnFocus=\"true\" grid=\"s12 m4 l4\"/&gt;<br>',new Krb(X.a)).a),yo(W.rb,OOe,true),W)),yo(f.rb,eLe,true),f));WKb(b,(g=new D_b,WKb(g,(Y=new vad,Idd(Y.b,'Gets the value of the field with the mask.'),xs(ho(Y.a),(new Qrb(bsb(x$e))).a),bA(Y,x$e),Y)),WKb(g,(Z=new D_b,WKb(Z,($=new c_b,rhc((!$.V&&($.V=new thc($)),$.V),HNe),ho($.D).setAttribute(QOe,$_e),ydd($.A).length==0||qo($.A,EHe),zdd($.A,__e),(ho($.D).getAttribute(QOe)||'').length==0||qo($.A,EHe),$.b.reverse=true,$.a=a0e,a.e.b=$,$)),WKb(Z,(ab=new h2c,WKb(ab,(bb=new FRb,NSb(bb.j,x$e),bb.j.mb||WKb(bb,bb.j),$Kb(bb,a.b),bb)),rhc((!ab.V&&(ab.V=new thc(ab)),ab.V),POe),ab)),Z)),WKb(g,(cb=new tie,Kdd(cb,(db=new Rse,db.a+='inputMask.getValue();',new Krb(db.a)).a),yo(cb.rb,UOe,true),cb)),yo(g.rb,eLe,true),g));WKb(b,(h=new D_b,WKb(h,(eb=new vad,Idd(eb.b,'Gets the value of the field without the mask.'),xs(ho(eb.a),(new Qrb(bsb(j0e))).a),bA(eb,j0e),eb)),WKb(h,(fb=new D_b,WKb(fb,(gb=new c_b,rhc((!gb.V&&(gb.V=new thc(gb)),gb.V),HNe),ho(gb.D).setAttribute(QOe,$_e),ydd(gb.A).length==0||qo(gb.A,EHe),zdd(gb.A,__e),(ho(gb.D).getAttribute(QOe)||'').length==0||qo(gb.A,EHe),gb.b.reverse=true,gb.a=a0e,a.e.a=gb,gb)),WKb(fb,(hb=new h2c,WKb(hb,(ib=new FRb,NSb(ib.j,j0e),ib.j.mb||WKb(ib,ib.j),$Kb(ib,a.a),ib)),rhc((!hb.V&&(hb.V=new thc(hb)),hb.V),POe),hb)),fb)),WKb(h,(jb=new tie,Kdd(jb,(kb=new Rse,kb.a+='inputMask.getCleanValue();',new Krb(kb.a)).a),yo(jb.rb,UOe,true),jb)),yo(h.rb,eLe,true),h));WKb(b,(i=new D_b,WKb(i,(lb=new vad,Idd(lb.b,'Programmatically controls the Input Mask main methods.'),xs(ho(lb.a),(new Qrb(bsb(k0e))).a),bA(lb,k0e),lb)),WKb(i,(mb=new D_b,WKb(mb,(nb=new c_b,rhc((!nb.V&&(nb.V=new thc(nb)),nb.V),HNe),ho(nb.D).setAttribute(QOe,$_e),ydd(nb.A).length==0||qo(nb.A,EHe),zdd(nb.A,__e),(ho(nb.D).getAttribute(QOe)||'').length==0||qo(nb.A,EHe),nb.b.reverse=true,nb.a=a0e,a.e.c=nb,nb)),WKb(mb,(ob=new h2c,WKb(ob,(pb=new FRb,pb.rb.style[IHe]=GQe,QLb(pb,(epc(),Roc)),NSb(pb.j,'Unmask'),pb.j.mb||WKb(pb,pb.j),qMb(pb,Ekc),$Kb(pb,a.c),pb)),WKb(ob,(qb=new FRb,NSb(qb.j,'mask'),qb.j.mb||WKb(qb,qb.j),$Kb(qb,a.d),qb)),rhc((!ob.V&&(ob.V=new thc(ob)),ob.V),POe),ob)),mb)),WKb(i,(rb=new tie,Kdd(rb,(sb=new Rse,sb.a+='\\u2003inputMask.mask(\"00.00\"); <br> inputMask.unmask();',new Krb(sb.a)).a),yo(rb.rb,UOe,true),rb)),yo(i.rb,eLe,true),i));return b}\nvar Y_e='gwt.material.design.addins.client.inputmask',Z_e='Basic Examples',$_e='eg: 000.000.000.000',__e='Ip Address',a0e='000.000.000.000',b0e='eg: 000000.00%',c0e='Percentage',d0e='000000.00%',e0e='eg: 0000 0000 0000 0000',f0e='Credit Card',g0e='0000 0000 0000 0000',h0e='Clear If not Match',i0e='Select on Focus',j0e='Get Clean Value',k0e='Unmask and Mask control';Iqb(144,119,oJe,c_b);_.Ue=function d_b(){this.a==null||this.a.length==0?(fs(),fs()):b_b(this,this.a)};_.Fc=function e_b(){G$b(this);this.a==null||this.a.length==0?(fs(),fs()):b_b(this,this.a)};_.Gc=function f_b(){!this.W&&(this.W=new IUc(this));FUc(this.W);$wnd.$(ho(rD(this.D,204))).unmask()};_.Ve=function g_b(){$wnd.$(ho(rD(this.D,204))).unmask()};var PN=are(Y_e,'MaterialInputMask',144);var h_b;Iqb(2734,1,{},i_b);_.Gd=function j_b(){return 'inputMaskJs'};_.Hd=function k_b(){var a;a=new Rse;a.a+=\"/**\\n * jquery.mask.js\\n * @version: v1.14.10\\n * @author: Igor Escobar\\n *\\n * Created by Igor Escobar on 2012-03-10. Please report any bug at http://blog.igorescobar.com\\n *\\n * Copyright (c) 2012 Igor Escobar http://blog.igorescobar.com\\n *\\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\\n *\\n * Permission is hereby granted, free of charge, to any person\\n * obtaining a copy of this software and associated documentation\\n * files (the \\\"Software\\\"), to deal in the Software without\\n * restriction, including without limitation the rights to use,\\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\\n * copies of the Software, and to permit persons to whom the\\n * Software is furnished to do so, subject to the following\\n * conditions:\\n *\\n * The above copyright notice and this permission notice shall be\\n * included in all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND,\\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\\n * OTHER DEALINGS IN THE SOFTWARE.\\n */\\n\\n/* jshint laxbreak: true */\\n/* jshint maxcomplexity:17 */\\n/* global define */\\n\\n'use strict';\\n\\n// UMD (Universal Module Definition) patterns for JavaScript modules that work everywhere.\\n// https://github.com/umdjs/umd/blob/master/jqueryPluginCommonjs.js\\n(function (factory, jQuery, Zepto) {\\n\\n    if (typeof define === 'function' && define.amd) {\\n        define(['jquery'], factory);\\n    } else if (typeof exports === 'object') {\\n        module.exports = factory(require('jquery'));\\n    } else {\\n        factory(jQuery || Zepto);\\n    }\\n\\n}(function ($) {\\n\\n    var Mask = function (el, mask, options) {\\n\\n        var p = {\\n            invalid: [],\\n            getCaret: function () {\\n                try {\\n                    var sel,\\n                        pos = 0,\\n                        ctrl = el.get(0),\\n                        dSel = document.selection,\\n                        cSelStart = ctrl.selectionStart;\\n\\n                    // IE Support\\n                    if (dSel && navigator.appVersion.indexOf('MSIE 10') === -1) {\\n                        sel = dSel.createRange();\\n                        sel.moveStart('character', -p.val().length);\\n                        pos = sel.text.length;\\n                    }\\n                    // Firefox support\\n                    else if (cSelStart || cSelStart === '0') {\\n                        pos = cSelStart;\\n                    }\\n\\n                    return pos;\\n                } catch (e) {}\\n            },\\n            setCaret: function(pos) {\\n                try {\\n                    if (el.is(':focus')) {\\n                        var range, ctrl = el.get(0);\\n\\n                        // Firefox, WebKit, etc..\\n                        if (ctrl.setSelectionRange) {\\n                            ctrl.setSelectionRange(pos, pos);\\n                        } else { // IE\\n                            range = ctrl.createTextRange();\\n                            range.collapse(true);\\n                            range.moveEnd('character', pos);\\n                            range.moveStart('character', pos);\\n                            range.select();\\n                        }\\n                    }\\n                } catch (e) {}\\n            },\\n            events: function() {\\n                el\\n                    .on('keydown.mask', function(e) {\\n                        el.data('mask-keycode', e.keyCode || e.which);\\n                        el.data('mask-previus-value', el.val());\\n                    })\\n                    .on($.jMaskGlobals.useInput ? 'input.mask' : 'keyup.mask', p.behaviour)\\n                    .on('paste.mask drop.mask', function() {\\n                        setTimeout(function() {\\n                            el.keydown().keyup();\\n                        }, 100);\\n                    })\\n                    .on('change.mask', function(){\\n                        el.data('changed', true);\\n                    })\\n                    .on('blur.mask', function(){\\n                        if (oldValue !== p.val() && !el.data('changed')) {\\n                            el.trigger('change');\\n                        }\\n                        el.data('changed', false);\\n                    })\\n                    // it's very important that this callback remains in this position\\n                    // otherwhise oldValue it's going to work buggy\\n                    .on('blur.mask', function() {\\n                        oldValue = p.val();\\n                    })\\n                    // select all text on focus\\n                    .on('focus.mask', function (e) {\\n                        if (options.selectOnFocus === true) {\\n                            $(e.target).select();\\n                        }\\n                    })\\n                    // clear the value if it not complete the mask\\n                    .on('focusout.mask', function() {\\n                        if (options.clearIfNotMatch && !regexMask.test(p.val())) {\\n                            p.val('');\\n                        }\\n                    });\\n            },\\n            getRegexMask: function() {\\n                var maskChunks = [], translation, pattern, optional, recursive, oRecursive, r;\\n\\n                for (var i = 0; i < mask.length; i++) {\\n                    translation = jMask.translation[mask.charAt(i)];\\n\\n                    if (translation) {\\n\\n                        pattern = translation.pattern.toString().replace(/.{1}$|^.{1}/g, '');\\n                        optional = translation.optional;\\n                        recursive = translation.recursive;\\n\\n                        if (recursive) {\\n                            maskChunks.push(mask.charAt(i));\\n                            oRecursive = {digit: mask.charAt(i), pattern: pattern};\\n                        } else {\\n                            maskChunks.push(!optional && !recursive ? pattern : (pattern + '?'));\\n                        }\\n\\n                    } else {\\n                        maskChunks.push(mask.charAt(i).replace(/[-\\\\/\\\\\\\\^$*+?.()|[\\\\]{}]/g, '\\\\\\\\$&'));\\n                    }\\n                }\\n\\n                r = maskChunks.join('');\\n\\n                if (oRecursive) {\\n                    r = r.replace(new RegExp('(' + oRecursive.digit + '(.*' + oRecursive.digit + ')?)'), '($1)?')\\n                        .replace(new RegExp(oRecursive.digit, 'g'), oRecursive.pattern);\\n                }\\n\\n                return new RegExp(r);\\n            },\\n            destroyEvents: function() {\\n                el.off(['input', 'keydown', 'keyup', 'paste', 'drop', 'blur', 'focusout', ''].join('.mask '));\\n            },\\n            val: function(v) {\\n                var isInput = el.is('input'),\\n                    method = isInput ? 'val' : 'text',\\n                    r;\\n\\n                if (arguments.length > 0) {\\n                    if (el[method]() !== v) {\\n                        el[method](v);\\n                    }\\n                    r = el;\\n                } else {\\n                    r = el[method]();\\n                }\\n\\n                return r;\\n            },\\n            calculateCaretPosition: function(caretPos, newVal) {\\n                var newValL = newVal.length,\\n                    oValue  = el.data('mask-previus-value') || '',\\n                    oValueL = oValue.length;\\n\\n                // edge cases when erasing digits\\n                if (el.data('mask-keycode') === 8 && oValue !== newVal) {\\n                    caretPos = caretPos - (newVal.slice(0, caretPos).length - oValue.slice(0, caretPos).length);\\n\\n                    // edge cases when typing new digits\\n                } else if (oValue !== newVal) {\\n                    // if the cursor is at the end keep it there\\n                    if (caretPos >= oValueL) {\\n                        caretPos = newValL;\\n                    } else {\\n                        caretPos = caretPos + (newVal.slice(0, caretPos).length - oValue.slice(0, caretPos).length);\\n                    }\\n                }\\n\\n                return caretPos;\\n            },\\n            behaviour: function(e) {\\n                e = e || window.event;\\n                p.invalid = [];\\n\\n                var keyCode = el.data('mask-keycode');\\n\\n                if ($.inArray(keyCode, jMask.byPassKeys) === -1) {\\n                    var newVal   = p.getMasked(),\\n                        caretPos = p.getCaret();\\n\\n                    setTimeout(function(caretPos, newVal) {\\n                        p.setCaret(p.calculateCaretPosition(caretPos, newVal));\\n                    }, 10, caretPos, newVal);\\n\\n                    p.val(newVal);\\n                    p.setCaret(caretPos);\\n                    return p.callbacks(e);\\n                }\\n            },\\n            getMasked: function(skipMaskChars, val) {\\n                var buf = [],\\n                    value = val === undefined ? p.val() : val + '',\\n                    m = 0, maskLen = mask.length,\\n                    v = 0, valLen = value.length,\\n                    offset = 1, addMethod = 'push',\\n                    resetPos = -1,\\n                    lastMaskChar,\\n                    check;\\n\\n                if (options.reverse) {\\n                    addMethod = 'unshift';\\n                    offset = -1;\\n                    lastMaskChar = 0;\\n                    m = maskLen - 1;\\n                    v = valLen - 1;\\n                    check = function () {\\n                        return m > -1 && v > -1;\\n                    };\\n                } else {\\n                    lastMaskChar = maskLen - 1;\\n                    check = function () {\\n                        return m < maskLen && v < valLen;\\n                    };\\n                }\\n\\n                var lastUntranslatedMaskChar;\\n                while (check()) {\\n                    var maskDigit = mask.charAt(m),\\n                        valDigit = value.charAt(v),\\n                        translation = jMask.translation[maskDigit];\\n\\n                    if (translation) {\\n                        if (valDigit.match(translation.pattern)) {\\n                            buf[addMethod](valDigit);\\n                            if (translation.recursive) {\\n                                if (resetPos === -1) {\\n                                    resetPos = m;\\n                                } else if (m === lastMaskChar) {\\n                                    m = resetPos - offset;\\n                                }\\n\\n                                if (lastMaskChar === resetPos) {\\n                                    m -= offset;\\n                                }\\n                            }\\n                            m += offset;\\n                        } else if (valDigit === lastUntranslatedMaskChar) {\\n                            // matched the last untranslated (raw) mask character that we encountered\\n                            // likely an insert offset the mask character from the last entry; fall\\n                            // through and only increment v\\n                            lastUntranslatedMaskChar = undefined;\\n                        } else if (translation.optional) {\\n                            m += offset;\\n                            v -= offset;\\n                        } else if (translation.fallback) {\\n                            buf[addMethod](translation.fallback);\\n                            m += offset;\\n                            v -= offset;\\n                        } else {\\n                            p.invalid.push({p: v, v: valDigit, e: translation.pattern});\\n                        }\\n                        v += offset;\\n                    } else {\\n                        if (!skipMaskChars) {\\n                            buf[addMethod](maskDigit);\\n                        }\\n\\n                        if (valDigit === maskDigit) {\\n                            v += offset;\\n                        } else {\\n                            lastUntranslatedMaskChar = maskDigit;\\n                        }\\n\\n                        m += offset;\\n                    }\\n                }\\n\\n                var lastMaskCharDigit = mask.charAt(lastMaskChar);\\n                if (maskLen === valLen + 1 && !jMask.translation[lastMaskCharDigit]) {\\n                    buf.push(lastMaskCharDigit);\\n                }\\n\\n                return buf.join('');\\n            },\\n            callbacks: function (e) {\\n                var val = p.val(),\\n                    changed = val !== oldValue,\\n                    defaultArgs = [val, e, el, options],\\n                    callback = function(name, criteria, args) {\\n                        if (typeof options[name] === 'function' && criteria) {\\n                            options[name].apply(this, args);\\n                        }\\n                    };\\n\\n                callback('onChange', changed === true, defaultArgs);\\n                callback('onKeyPress', changed === true, defaultArgs);\\n                callback('onComplete', val.length === mask.length, defaultArgs);\\n                callback('onInvalid', p.invalid.length > 0, [val, e, el, p.invalid, options]);\\n            }\\n        };\\n\\n        el = $(el);\\n        var jMask = this, oldValue = p.val(), regexMask;\\n\\n        mask = typeof mask === 'function' ? mask(p.val(), undefined, el,  options) : mask;\\n\\n        // public methods\\n        jMask.mask = mask;\\n        jMask.options = options;\\n        jMask.remove = function() {\\n            var caret = p.getCaret();\\n            p.destroyEvents();\\n            p.val(jMask.getCleanVal());\\n            p.setCaret(caret);\\n            return el;\\n        };\\n\\n        // get value without mask\\n        jMask.getCleanVal = function() {\\n            return p.getMasked(true);\\n        };\\n\\n        // get masked value without the value being in the input or element\\n        jMask.getMaskedVal = function(val) {\\n            return p.getMasked(false, val);\\n        };\\n\\n        jMask.init = function(onlyMask) {\\n            onlyMask = onlyMask || false;\\n            options = options || {};\\n\\n            jMask.clearIfNotMatch  = $.jMaskGlobals.clearIfNotMatch;\\n            jMask.byPassKeys       = $.jMaskGlobals.byPassKeys;\\n            jMask.translation      = $.extend({}, $.jMaskGlobals.translation, options.translation);\\n\\n            jMask = $.extend(true, {}, jMask, options);\\n\\n            regexMask = p.getRegexMask();\\n\\n            if (onlyMask) {\\n                p.events();\\n                p.val(p.getMasked());\\n            } else {\\n                if (options.placeholder) {\\n                    el.attr('placeholder' , options.placeholder);\\n                }\\n\\n                // this is necessary, otherwise if the user submit the form\\n                // and then press the \\\"back\\\" button, the autocomplete will erase\\n                // the data. Works fine on IE9+, FF, Opera, Safari.\\n                if (el.data('mask')) {\\n                    el.attr('autocomplete', 'off');\\n                }\\n\\n                // detect if is necessary let the user type freely.\\n                // for is a lot faster than forEach.\\n                for (var i = 0, maxlength = true; i < mask.length; i++) {\\n                    var translation = jMask.translation[mask.charAt(i)];\\n                    if (translation && translation.recursive) {\\n                        maxlength = false;\\n                        break;\\n                    }\\n                }\\n\\n                if (maxlength) {\\n                    el.attr('maxlength', mask.length);\\n                }\\n\\n                p.destroyEvents();\\n                p.events();\\n\\n                var caret = p.getCaret();\\n                p.val(p.getMasked());\\n                p.setCaret(caret);\\n            }\\n        };\\n\\n        jMask.init(!el.is('input'));\\n    };\\n\\n    $.maskWatchers = {};\\n    var HTMLAttributes = function () {\\n            var input = $(this),\\n                options = {},\\n                prefix = 'data-mask-',\\n                mask = input.attr('data-mask');\\n\\n            if (input.attr(prefix + 'reverse')) {\\n                options.reverse = true;\\n            }\\n\\n            if (input.attr(prefix + 'clearifnotmatch')) {\\n              \";a.a+=\"  options.clearIfNotMatch = true;\\n            }\\n\\n            if (input.attr(prefix + 'selectonfocus') === 'true') {\\n                options.selectOnFocus = true;\\n            }\\n\\n            if (notSameMaskObject(input, mask, options)) {\\n                return input.data('mask', new Mask(this, mask, options));\\n            }\\n        },\\n        notSameMaskObject = function(field, mask, options) {\\n            options = options || {};\\n            var maskObject = $(field).data('mask'),\\n                stringify = JSON.stringify,\\n                value = $(field).val() || $(field).text();\\n            try {\\n                if (typeof mask === 'function') {\\n                    mask = mask(value);\\n                }\\n                return typeof maskObject !== 'object' || stringify(maskObject.options) !== stringify(options) || maskObject.mask !== mask;\\n            } catch (e) {}\\n        },\\n        eventSupported = function(eventName) {\\n            var el = document.createElement('div'), isSupported;\\n\\n            eventName = 'on' + eventName;\\n            isSupported = (eventName in el);\\n\\n            if ( !isSupported ) {\\n                el.setAttribute(eventName, 'return;');\\n                isSupported = typeof el[eventName] === 'function';\\n            }\\n            el = null;\\n\\n            return isSupported;\\n        };\\n\\n    $.fn.mask = function(mask, options) {\\n        options = options || {};\\n        var selector = this.selector,\\n            globals = $.jMaskGlobals,\\n            interval = globals.watchInterval,\\n            watchInputs = options.watchInputs || globals.watchInputs,\\n            maskFunction = function() {\\n                if (notSameMaskObject(this, mask, options)) {\\n                    return $(this).data('mask', new Mask(this, mask, options));\\n                }\\n            };\\n\\n        $(this).each(maskFunction);\\n\\n        if (selector && selector !== '' && watchInputs) {\\n            clearInterval($.maskWatchers[selector]);\\n            $.maskWatchers[selector] = setInterval(function(){\\n                $(document).find(selector).each(maskFunction);\\n            }, interval);\\n        }\\n        return this;\\n    };\\n\\n    $.fn.masked = function(val) {\\n        return this.data('mask').getMaskedVal(val);\\n    };\\n\\n    $.fn.unmask = function() {\\n        clearInterval($.maskWatchers[this.selector]);\\n        delete $.maskWatchers[this.selector];\\n        return this.each(function() {\\n            var dataMask = $(this).data('mask');\\n            if (dataMask) {\\n                dataMask.remove().removeData('mask');\\n            }\\n        });\\n    };\\n\\n    $.fn.cleanVal = function() {\\n        return this.data('mask').getCleanVal();\\n    };\\n\\n    $.applyDataMask = function(selector) {\\n        selector = selector || $.jMaskGlobals.maskElements;\\n        var $selector = (selector instanceof $) ? selector : $(selector);\\n        $selector.filter($.jMaskGlobals.dataMaskAttr).each(HTMLAttributes);\\n    };\\n\\n    var globals = {\\n        maskElements: 'input,td,span,div',\\n        dataMaskAttr: '*[data-mask]',\\n        dataMask: true,\\n        watchInterval: 300,\\n        watchInputs: true,\\n        // old versions of chrome dont work great with input event\\n        useInput: !/Chrome\\\\/[2-4][0-9]|SamsungBrowser/.test(window.navigator.userAgent) && eventSupported('input'),\\n        watchDataMask: false,\\n        byPassKeys: [9, 16, 17, 18, 36, 37, 38, 39, 40, 91],\\n        translation: {\\n            '0': {pattern: /\\\\d/},\\n            '9': {pattern: /\\\\d/, optional: true},\\n            '#': {pattern: /\\\\d/, recursive: true},\\n            'A': {pattern: /[a-zA-Z0-9]/},\\n            'S': {pattern: /[a-zA-Z]/}\\n        }\\n    };\\n\\n    $.jMaskGlobals = $.jMaskGlobals || {};\\n    globals = $.jMaskGlobals = $.extend(true, {}, globals, $.jMaskGlobals);\\n\\n    // looking for inputs with data-mask attribute\\n    if (globals.dataMask) {\\n        $.applyDataMask();\\n    }\\n\\n    setInterval(function() {\\n        if ($.jMaskGlobals.watchDataMask) {\\n            $.applyDataMask();\\n        }\\n    }, globals.watchInterval);\\n}, window.jQuery, window.Zepto));\\n\";return a.a};var ON=are(Y_e,'MaterialInputMaskClientBundle_default_InlineClientBundleGenerator/1',2734);Iqb(923,54,qHe,osd);_.ze=function psd(){Uhe();BEb(this,new Whe(uWe,'An inputmask helps the user with the input by ensuring a predefined format. This can be useful for dates, numerics, phone numbers etc...','addins/inputmask/InputMask',''))};var M0=are(BQe,'InputMaskPresenter',923);Iqb(1307,62,rHe,vsd);var S0=are(BQe,'InputMaskView',1307);Iqb(1760,1,{},xsd);var R0=are(BQe,'InputMaskView_BinderImpl/Widgets',1760);Iqb(1761,1,WHe,ysd);_.kd=function zsd(a){Ead($wnd.$(ho(rD(this.a.e.a.D,204))).cleanVal())};var N0=are(BQe,'InputMaskView_BinderImpl/Widgets/1',1761);Iqb(1762,1,WHe,Asd);_.kd=function Bsd(a){Ead(xD(this.a.e.b.D.Td()))};var O0=are(BQe,'InputMaskView_BinderImpl/Widgets/2',1762);Iqb(1763,1,WHe,Csd);_.kd=function Dsd(a){$wnd.$(ho(rD(this.a.e.c.D,204))).unmask()};var P0=are(BQe,'InputMaskView_BinderImpl/Widgets/3',1763);Iqb(1764,1,WHe,Esd);_.kd=function Fsd(a){b_b(this.a.e.c,a0e)};var Q0=are(BQe,'InputMaskView_BinderImpl/Widgets/4',1764);Iqb(769,1,iPe);_.Vc=function Osd(){QIb(this.b,Hsd(this.a.a))};lDe(Dq)(10);\n//# sourceURL=gwtmaterialdemo-10.js\n")
