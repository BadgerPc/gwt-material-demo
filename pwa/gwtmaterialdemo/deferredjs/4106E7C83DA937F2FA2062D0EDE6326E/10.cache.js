$wnd.gwtmaterialdemo.runAsyncCallback10("function I_b(){}\nfunction Wsd(a){this.a=a}\nfunction Ysd(a){this.a=a}\nfunction $sd(a){this.a=a}\nfunction atd(a){this.a=a}\nfunction L_b(){L_b=Vqb;H_b=new I_b}\nfunction C_b(){A_b();z_b.call(this);this.b=new $wnd.Object}\nfunction Tsd(){IFb.call(this);GFb(this,Usd(new Vsd(this)))}\nfunction Msd(a,b,c){TEb();qFb.call(this,a,b,c,(aid(),$hd))}\nfunction B_b(a,b){$wnd.$(ho(zD(a.D,205))).mask(b,a.b)}\nfunction etd(a){var b;if(!a.d){b=new Tsd;a.d=b}return a.d}\nfunction A_b(){A_b=Vqb;!oLb&&(oLb=new pLb);scc();wcc((L_b(),H_b),true,false)}\nfunction Vsd(a){this.a=new Wsd(this);this.b=new Ysd(this);this.c=new $sd(this);this.d=new atd(this);this.e=a}\nfunction dtd(a){var b,c;if(!a.c){c=new Msd(eCb($Fb(a.a)),(b=etd(a),b),ctd(a));LEb((bGb(a.a),c),YHb(bGb(a.a)));a.c=c}return a.c}\nfunction Usd(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,$,ab,bb,cb,db,eb,fb,gb,hb,ib,jb,kb,lb,mb,nb,ob,pb,qb,rb,sb;b=new Hbc;tLb(b,(c=new b0b,tLb(c,(j=new Tad,As(ho(j.a),(msb(),(new asb(nsb(S3e))).a)),jA(j,S3e),j)),tLb(c,(k=new cme,KRb(k.a,e3e),MRb(k.a),(Usb(),k.rb).style[oTe]=($w(),wTe),NRb(k.a,'jQuery-Mask-Plugin 1.14.10'),k)),tLb(c,(l=new b0b,tLb(l,(m=new C_b,Phc((!m.V&&(m.V=new Rhc(m)),m.V),KRe),ho(m.D).setAttribute(PSe,'eg: 000-00-0000000'),Wdd(m.A).length==0||qo(m.A,GLe),Xdd(m.A,'Phone Number'),(ho(m.D).getAttribute(PSe)||'').length==0||qo(m.A,GLe),m.a='000-00-0000000',m)),tLb(l,(n=new C_b,Phc((!n.V&&(n.V=new Rhc(n)),n.V),KRe),ho(n.D).setAttribute(PSe,'eg: (00) 0000-0000'),Wdd(n.A).length==0||qo(n.A,GLe),Xdd(n.A,'Phone with Odd'),(ho(n.D).getAttribute(PSe)||'').length==0||qo(n.A,GLe),n.a='(00) 0000-0000',n)),tLb(l,(o=new C_b,Phc((!o.V&&(o.V=new Rhc(o)),o.V),KRe),ho(o.D).setAttribute(PSe,'eg: (000) 000-000'),Wdd(o.A).length==0||qo(o.A,GLe),Xdd(o.A,'US Phone Number'),(ho(o.D).getAttribute(PSe)||'').length==0||qo(o.A,GLe),o.a='(000) 000-000',o)),l)),tLb(c,(p=new b0b,tLb(p,(q=new C_b,Phc((!q.V&&(q.V=new Rhc(q)),q.V),KRe),ho(q.D).setAttribute(PSe,'eg: 00000-000'),Wdd(q.A).length==0||qo(q.A,GLe),Xdd(q.A,'CEP'),(ho(q.D).getAttribute(PSe)||'').length==0||qo(q.A,GLe),q.a='00000-000',q)),tLb(p,(r=new C_b,Phc((!r.V&&(r.V=new Rhc(r)),r.V),KRe),ho(r.D).setAttribute(PSe,'eg: 000.000.000-00'),Wdd(r.A).length==0||qo(r.A,GLe),Xdd(r.A,'CPF'),(ho(r.D).getAttribute(PSe)||'').length==0||qo(r.A,GLe),r.a='000.000.000-00',r)),tLb(p,(s=new C_b,Phc((!s.V&&(s.V=new Rhc(s)),s.V),KRe),ho(s.D).setAttribute(PSe,'eg: 000,000,000,000,000.00'),Wdd(s.A).length==0||qo(s.A,GLe),Xdd(s.A,'Money'),(ho(s.D).getAttribute(PSe)||'').length==0||qo(s.A,GLe),s.a='000,000,000,000,000.00',s)),p)),tLb(c,(t=new b0b,tLb(t,(u=new C_b,Phc((!u.V&&(u.V=new Rhc(u)),u.V),KRe),ho(u.D).setAttribute(PSe,T3e),Wdd(u.A).length==0||qo(u.A,GLe),Xdd(u.A,U3e),(ho(u.D).getAttribute(PSe)||'').length==0||qo(u.A,GLe),u.a=V3e,u)),tLb(t,(v=new C_b,Phc((!v.V&&(v.V=new Rhc(v)),v.V),KRe),ho(v.D).setAttribute(PSe,W3e),Wdd(v.A).length==0||qo(v.A,GLe),Xdd(v.A,X3e),(ho(v.D).getAttribute(PSe)||'').length==0||qo(v.A,GLe),v.a=Y3e,v)),tLb(t,(w=new C_b,Phc((!w.V&&(w.V=new Rhc(w)),w.V),KRe),ho(w.D).setAttribute(PSe,Z3e),Wdd(w.A).length==0||qo(w.A,GLe),Xdd(w.A,$3e),(ho(w.D).getAttribute(PSe)||'').length==0||qo(w.A,GLe),w.a=_3e,w)),t)),tLb(c,(A=new nme,ged(A,(B=new Owe,B.a+='\\u2003&lt;m:MaterialRow&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"Phone Number\" placeholder=\"eg: 000-00-0000000\" mask=\"000-00-0000000\" grid=\"s12 m4 l4\"/&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"Phone with Odd\" placeholder=\"eg: (00) 0000-0000\" mask=\"(00) 0000-0000\" grid=\"s12 m4 l4\"/&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"US Phone Number\" placeholder=\"eg: (000) 000-000\" mask=\"(000) 000-000\" grid=\"s12 m4 l4\"/&gt;<br> &lt;/m:MaterialRow&gt;<br> &lt;m:MaterialRow&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"CEP\" placeholder=\"eg: 00000-000\" mask=\"00000-000\" grid=\"s12 m4 l4\"/&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"CPF\" placeholder=\"eg: 000.000.000-00\" mask=\"000.000.000-00\" grid=\"s12 m4 l4\"/&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"Money\" placeholder=\"eg: 000,000,000,000,000.00\" mask=\"000,000,000,000,000.00\" grid=\"s12 m4 l4\"/&gt;<br> &lt;/m:MaterialRow&gt;<br> &lt;m:MaterialRow&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"Ip Address\" placeholder=\"eg: 000.000.000.000\" mask=\"000.000.000.000\" grid=\"s12 m4 l4\"/&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"Percentage\" placeholder=\"eg: 000000.00%\" mask=\"000000.00%\" grid=\"s12 m4 l4\"/&gt;<br> \\u2003&lt;ma:inputmask.MaterialInputMask label=\"Credit Card\" placeholder=\"eg: 0000 0000 0000 0000\" mask=\"0000 0000 0000 0000\" grid=\"s12 m4 l4\"/&gt;<br> &lt;/m:MaterialRow&gt;<br>',new Wrb(B.a)).a),yo(A.rb,NSe,true),A)),yo(c.rb,gPe,true),c));tLb(b,(d=new b0b,tLb(d,(C=new Tad,eed(C.b,'The mask will be placed from the right to the left if reverse is true (Default : false)'),As(ho(C.a),(new asb(nsb('Reverse'))).a),jA(C,'Reverse'),C)),tLb(d,(D=new b0b,tLb(D,(F=new C_b,Phc((!F.V&&(F.V=new Rhc(F)),F.V),KRe),ho(F.D).setAttribute(PSe,T3e),Wdd(F.A).length==0||qo(F.A,GLe),Xdd(F.A,U3e),(ho(F.D).getAttribute(PSe)||'').length==0||qo(F.A,GLe),F.b.reverse=true,F.a=V3e,F)),tLb(D,(G=new C_b,Phc((!G.V&&(G.V=new Rhc(G)),G.V),KRe),ho(G.D).setAttribute(PSe,W3e),Wdd(G.A).length==0||qo(G.A,GLe),Xdd(G.A,X3e),(ho(G.D).getAttribute(PSe)||'').length==0||qo(G.A,GLe),G.b.reverse=true,G.a=Y3e,G)),tLb(D,(H=new C_b,Phc((!H.V&&(H.V=new Rhc(H)),H.V),KRe),ho(H.D).setAttribute(PSe,Z3e),Wdd(H.A).length==0||qo(H.A,GLe),Xdd(H.A,$3e),(ho(H.D).getAttribute(PSe)||'').length==0||qo(H.A,GLe),H.b.reverse=true,H.a=_3e,H)),D)),tLb(d,(I=new nme,ged(I,(J=new Owe,J.a+='&lt;ma:inputmask.MaterialInputMask label=\"Ip Address\" placeholder=\"eg: 000.000.000.000\" mask=\"000.000.000.000\" reverse=\"true\" grid=\"s12 m4 l4\"/&gt;<br> &lt;ma:inputmask.MaterialInputMask label=\"Percentage\" placeholder=\"eg: 000000.00%\" mask=\"000000.00%\" reverse=\"true\" grid=\"s12 m4 l4\"/&gt;<br> &lt;ma:inputmask.MaterialInputMask label=\"Credit Card\" placeholder=\"eg: 0000 0000 0000 0000\" mask=\"0000 0000 0000 0000\" reverse=\"true\" grid=\"s12 m4 l4\"/&gt;<br>',new Wrb(J.a)).a),yo(I.rb,NSe,true),I)),yo(d.rb,gPe,true),d));tLb(b,(e=new b0b,tLb(e,(K=new Tad,eed(K.b,'The textfield will automatically clears whenever the value is not match with the mask provided. (Default : false)'),As(ho(K.a),(new asb(nsb(a4e))).a),jA(K,a4e),K)),tLb(e,(L=new b0b,tLb(L,(M=new C_b,Phc((!M.V&&(M.V=new Rhc(M)),M.V),KRe),M.b.clearIfNotMatch=true,ho(M.D).setAttribute(PSe,T3e),Wdd(M.A).length==0||qo(M.A,GLe),Xdd(M.A,U3e),(ho(M.D).getAttribute(PSe)||'').length==0||qo(M.A,GLe),M.a=V3e,M)),tLb(L,(N=new C_b,Phc((!N.V&&(N.V=new Rhc(N)),N.V),KRe),N.b.clearIfNotMatch=true,ho(N.D).setAttribute(PSe,W3e),Wdd(N.A).length==0||qo(N.A,GLe),Xdd(N.A,X3e),(ho(N.D).getAttribute(PSe)||'').length==0||qo(N.A,GLe),N.a=Y3e,N)),tLb(L,(O=new C_b,Phc((!O.V&&(O.V=new Rhc(O)),O.V),KRe),O.b.clearIfNotMatch=true,ho(O.D).setAttribute(PSe,Z3e),Wdd(O.A).length==0||qo(O.A,GLe),Xdd(O.A,$3e),(ho(O.D).getAttribute(PSe)||'').length==0||qo(O.A,GLe),O.a=_3e,O)),L)),tLb(e,(P=new nme,ged(P,(Q=new Owe,Q.a+='&lt;ma:inputmask.MaterialInputMask label=\"Ip Address\" placeholder=\"eg: 000.000.000.000\" mask=\"000.000.000.000\" clearIfNotMatch=\"true\" grid=\"s12 m4 l4\"/&gt;<br> &lt;ma:inputmask.MaterialInputMask label=\"Percentage\" placeholder=\"eg: 000000.00%\" mask=\"000000.00%\" clearIfNotMatch=\"true\" grid=\"s12 m4 l4\"/&gt;<br> &lt;ma:inputmask.MaterialInputMask label=\"Credit Card\" placeholder=\"eg: 0000 0000 0000 0000\" mask=\"0000 0000 0000 0000\" clearIfNotMatch=\"true\" grid=\"s12 m4 l4\"/&gt;<br>',new Wrb(Q.a)).a),yo(P.rb,NSe,true),P)),yo(e.rb,gPe,true),e));tLb(b,(f=new b0b,tLb(f,(R=new Tad,eed(R.b,'Set whether you want to set on focus on your mask for easy selection.'),As(ho(R.a),(new asb(nsb(b4e))).a),jA(R,b4e),R)),tLb(f,(S=new b0b,tLb(S,(T=new C_b,Phc((!T.V&&(T.V=new Rhc(T)),T.V),KRe),T.b.selectOnFocus=true,ho(T.D).setAttribute(PSe,T3e),Wdd(T.A).length==0||qo(T.A,GLe),Xdd(T.A,U3e),(ho(T.D).getAttribute(PSe)||'').length==0||qo(T.A,GLe),T.a=V3e,T)),tLb(S,(U=new C_b,Phc((!U.V&&(U.V=new Rhc(U)),U.V),KRe),U.b.selectOnFocus=true,ho(U.D).setAttribute(PSe,W3e),Wdd(U.A).length==0||qo(U.A,GLe),Xdd(U.A,X3e),(ho(U.D).getAttribute(PSe)||'').length==0||qo(U.A,GLe),U.a=Y3e,U)),tLb(S,(V=new C_b,Phc((!V.V&&(V.V=new Rhc(V)),V.V),KRe),V.b.selectOnFocus=true,ho(V.D).setAttribute(PSe,Z3e),Wdd(V.A).length==0||qo(V.A,GLe),Xdd(V.A,$3e),(ho(V.D).getAttribute(PSe)||'').length==0||qo(V.A,GLe),V.a=_3e,V)),S)),tLb(f,(W=new nme,ged(W,(X=new Owe,X.a+='&lt;ma:inputmask.MaterialInputMask label=\"Ip Address\" placeholder=\"eg: 000.000.000.000\" mask=\"000.000.000.000\" selectOnFocus=\"true\" grid=\"s12 m4 l4\"/&gt;<br> &lt;ma:inputmask.MaterialInputMask label=\"Percentage\" placeholder=\"eg: 000000.00%\" mask=\"000000.00%\" selectOnFocus=\"true\" grid=\"s12 m4 l4\"/&gt;<br> &lt;ma:inputmask.MaterialInputMask label=\"Credit Card\" placeholder=\"eg: 0000 0000 0000 0000\" mask=\"0000 0000 0000 0000\" selectOnFocus=\"true\" grid=\"s12 m4 l4\"/&gt;<br>',new Wrb(X.a)).a),yo(W.rb,NSe,true),W)),yo(f.rb,gPe,true),f));tLb(b,(g=new b0b,tLb(g,(Y=new Tad,eed(Y.b,'Gets the value of the field with the mask.'),As(ho(Y.a),(new asb(nsb(q2e))).a),jA(Y,q2e),Y)),tLb(g,(Z=new b0b,tLb(Z,($=new C_b,Phc((!$.V&&($.V=new Rhc($)),$.V),KRe),ho($.D).setAttribute(PSe,T3e),Wdd($.A).length==0||qo($.A,GLe),Xdd($.A,U3e),(ho($.D).getAttribute(PSe)||'').length==0||qo($.A,GLe),$.b.reverse=true,$.a=V3e,a.e.b=$,$)),tLb(Z,(ab=new F2c,tLb(ab,(bb=new cSb,kTb(bb.j,q2e),bb.j.mb||tLb(bb,bb.j),xLb(bb,a.b),bb)),Phc((!ab.V&&(ab.V=new Rhc(ab)),ab.V),OSe),ab)),Z)),tLb(g,(cb=new nme,ged(cb,(db=new Owe,db.a+='inputMask.getValue();',new Wrb(db.a)).a),yo(cb.rb,TSe,true),cb)),yo(g.rb,gPe,true),g));tLb(b,(h=new b0b,tLb(h,(eb=new Tad,eed(eb.b,'Gets the value of the field without the mask.'),As(ho(eb.a),(new asb(nsb(c4e))).a),jA(eb,c4e),eb)),tLb(h,(fb=new b0b,tLb(fb,(gb=new C_b,Phc((!gb.V&&(gb.V=new Rhc(gb)),gb.V),KRe),ho(gb.D).setAttribute(PSe,T3e),Wdd(gb.A).length==0||qo(gb.A,GLe),Xdd(gb.A,U3e),(ho(gb.D).getAttribute(PSe)||'').length==0||qo(gb.A,GLe),gb.b.reverse=true,gb.a=V3e,a.e.a=gb,gb)),tLb(fb,(hb=new F2c,tLb(hb,(ib=new cSb,kTb(ib.j,c4e),ib.j.mb||tLb(ib,ib.j),xLb(ib,a.a),ib)),Phc((!hb.V&&(hb.V=new Rhc(hb)),hb.V),OSe),hb)),fb)),tLb(h,(jb=new nme,ged(jb,(kb=new Owe,kb.a+='inputMask.getCleanValue();',new Wrb(kb.a)).a),yo(jb.rb,TSe,true),jb)),yo(h.rb,gPe,true),h));tLb(b,(i=new b0b,tLb(i,(lb=new Tad,eed(lb.b,'Programmatically controls the Input Mask main methods.'),As(ho(lb.a),(new asb(nsb(d4e))).a),jA(lb,d4e),lb)),tLb(i,(mb=new b0b,tLb(mb,(nb=new C_b,Phc((!nb.V&&(nb.V=new Rhc(nb)),nb.V),KRe),ho(nb.D).setAttribute(PSe,T3e),Wdd(nb.A).length==0||qo(nb.A,GLe),Xdd(nb.A,U3e),(ho(nb.D).getAttribute(PSe)||'').length==0||qo(nb.A,GLe),nb.b.reverse=true,nb.a=V3e,a.e.c=nb,nb)),tLb(mb,(ob=new F2c,tLb(ob,(pb=new cSb,pb.rb.style[KLe]=CUe,nMb(pb,(Cpc(),npc)),kTb(pb.j,'Unmask'),pb.j.mb||tLb(pb,pb.j),PMb(pb,alc),xLb(pb,a.c),pb)),tLb(ob,(qb=new cSb,kTb(qb.j,'mask'),qb.j.mb||tLb(qb,qb.j),xLb(qb,a.d),qb)),Phc((!ob.V&&(ob.V=new Rhc(ob)),ob.V),OSe),ob)),mb)),tLb(i,(rb=new nme,ged(rb,(sb=new Owe,sb.a+='\\u2003inputMask.mask(\"00.00\"); <br> inputMask.unmask();',new Wrb(sb.a)).a),yo(rb.rb,TSe,true),rb)),yo(i.rb,gPe,true),i));return b}\nvar R3e='gwt.material.design.addins.client.inputmask',S3e='Basic Examples',T3e='eg: 000.000.000.000',U3e='Ip Address',V3e='000.000.000.000',W3e='eg: 000000.00%',X3e='Percentage',Y3e='000000.00%',Z3e='eg: 0000 0000 0000 0000',$3e='Credit Card',_3e='0000 0000 0000 0000',a4e='Clear If not Match',b4e='Select on Focus',c4e='Get Clean Value',d4e='Unmask and Mask control';Uqb(145,120,rNe,C_b);_.Ue=function D_b(){this.a==null||this.a.length==0?(gs(),gs()):B_b(this,this.a)};_.Fc=function E_b(){e_b(this);this.a==null||this.a.length==0?(gs(),gs()):B_b(this,this.a)};_.Gc=function F_b(){!this.W&&(this.W=new eVc(this));bVc(this.W);$wnd.$(ho(zD(this.D,205))).unmask()};_.Ve=function G_b(){$wnd.$(ho(zD(this.D,205))).unmask()};var XN=Zue(R3e,'MaterialInputMask',145);var H_b;Uqb(2738,1,{},I_b);_.Gd=function J_b(){return 'inputMaskJs'};_.Hd=function K_b(){var a;a=new Owe;a.a+=\"/**\\n * jquery.mask.js\\n * @version: v1.14.10\\n * @author: Igor Escobar\\n *\\n * Created by Igor Escobar on 2012-03-10. Please report any bug at http://blog.igorescobar.com\\n *\\n * Copyright (c) 2012 Igor Escobar http://blog.igorescobar.com\\n *\\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\\n *\\n * Permission is hereby granted, free of charge, to any person\\n * obtaining a copy of this software and associated documentation\\n * files (the \\\"Software\\\"), to deal in the Software without\\n * restriction, including without limitation the rights to use,\\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\\n * copies of the Software, and to permit persons to whom the\\n * Software is furnished to do so, subject to the following\\n * conditions:\\n *\\n * The above copyright notice and this permission notice shall be\\n * included in all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND,\\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\\n * OTHER DEALINGS IN THE SOFTWARE.\\n */\\n\\n/* jshint laxbreak: true */\\n/* jshint maxcomplexity:17 */\\n/* global define */\\n\\n'use strict';\\n\\n// UMD (Universal Module Definition) patterns for JavaScript modules that work everywhere.\\n// https://github.com/umdjs/umd/blob/master/jqueryPluginCommonjs.js\\n(function (factory, jQuery, Zepto) {\\n\\n    if (typeof define === 'function' && define.amd) {\\n        define(['jquery'], factory);\\n    } else if (typeof exports === 'object') {\\n        module.exports = factory(require('jquery'));\\n    } else {\\n        factory(jQuery || Zepto);\\n    }\\n\\n}(function ($) {\\n\\n    var Mask = function (el, mask, options) {\\n\\n        var p = {\\n            invalid: [],\\n            getCaret: function () {\\n                try {\\n                    var sel,\\n                        pos = 0,\\n                        ctrl = el.get(0),\\n                        dSel = document.selection,\\n                        cSelStart = ctrl.selectionStart;\\n\\n                    // IE Support\\n                    if (dSel && navigator.appVersion.indexOf('MSIE 10') === -1) {\\n                        sel = dSel.createRange();\\n                        sel.moveStart('character', -p.val().length);\\n                        pos = sel.text.length;\\n                    }\\n                    // Firefox support\\n                    else if (cSelStart || cSelStart === '0') {\\n                        pos = cSelStart;\\n                    }\\n\\n                    return pos;\\n                } catch (e) {}\\n            },\\n            setCaret: function(pos) {\\n                try {\\n                    if (el.is(':focus')) {\\n                        var range, ctrl = el.get(0);\\n\\n                        // Firefox, WebKit, etc..\\n                        if (ctrl.setSelectionRange) {\\n                            ctrl.setSelectionRange(pos, pos);\\n                        } else { // IE\\n                            range = ctrl.createTextRange();\\n                            range.collapse(true);\\n                            range.moveEnd('character', pos);\\n                            range.moveStart('character', pos);\\n                            range.select();\\n                        }\\n                    }\\n                } catch (e) {}\\n            },\\n            events: function() {\\n                el\\n                    .on('keydown.mask', function(e) {\\n                        el.data('mask-keycode', e.keyCode || e.which);\\n                        el.data('mask-previus-value', el.val());\\n                    })\\n                    .on($.jMaskGlobals.useInput ? 'input.mask' : 'keyup.mask', p.behaviour)\\n                    .on('paste.mask drop.mask', function() {\\n                        setTimeout(function() {\\n                            el.keydown().keyup();\\n                        }, 100);\\n                    })\\n                    .on('change.mask', function(){\\n                        el.data('changed', true);\\n                    })\\n                    .on('blur.mask', function(){\\n                        if (oldValue !== p.val() && !el.data('changed')) {\\n                            el.trigger('change');\\n                        }\\n                        el.data('changed', false);\\n                    })\\n                    // it's very important that this callback remains in this position\\n                    // otherwhise oldValue it's going to work buggy\\n                    .on('blur.mask', function() {\\n                        oldValue = p.val();\\n                    })\\n                    // select all text on focus\\n                    .on('focus.mask', function (e) {\\n                        if (options.selectOnFocus === true) {\\n                            $(e.target).select();\\n                        }\\n                    })\\n                    // clear the value if it not complete the mask\\n                    .on('focusout.mask', function() {\\n                        if (options.clearIfNotMatch && !regexMask.test(p.val())) {\\n                            p.val('');\\n                        }\\n                    });\\n            },\\n            getRegexMask: function() {\\n                var maskChunks = [], translation, pattern, optional, recursive, oRecursive, r;\\n\\n                for (var i = 0; i < mask.length; i++) {\\n                    translation = jMask.translation[mask.charAt(i)];\\n\\n                    if (translation) {\\n\\n                        pattern = translation.pattern.toString().replace(/.{1}$|^.{1}/g, '');\\n                        optional = translation.optional;\\n                        recursive = translation.recursive;\\n\\n                        if (recursive) {\\n                            maskChunks.push(mask.charAt(i));\\n                            oRecursive = {digit: mask.charAt(i), pattern: pattern};\\n                        } else {\\n                            maskChunks.push(!optional && !recursive ? pattern : (pattern + '?'));\\n                        }\\n\\n                    } else {\\n                        maskChunks.push(mask.charAt(i).replace(/[-\\\\/\\\\\\\\^$*+?.()|[\\\\]{}]/g, '\\\\\\\\$&'));\\n                    }\\n                }\\n\\n                r = maskChunks.join('');\\n\\n                if (oRecursive) {\\n                    r = r.replace(new RegExp('(' + oRecursive.digit + '(.*' + oRecursive.digit + ')?)'), '($1)?')\\n                        .replace(new RegExp(oRecursive.digit, 'g'), oRecursive.pattern);\\n                }\\n\\n                return new RegExp(r);\\n            },\\n            destroyEvents: function() {\\n                el.off(['input', 'keydown', 'keyup', 'paste', 'drop', 'blur', 'focusout', ''].join('.mask '));\\n            },\\n            val: function(v) {\\n                var isInput = el.is('input'),\\n                    method = isInput ? 'val' : 'text',\\n                    r;\\n\\n                if (arguments.length > 0) {\\n                    if (el[method]() !== v) {\\n                        el[method](v);\\n                    }\\n                    r = el;\\n                } else {\\n                    r = el[method]();\\n                }\\n\\n                return r;\\n            },\\n            calculateCaretPosition: function(caretPos, newVal) {\\n                var newValL = newVal.length,\\n                    oValue  = el.data('mask-previus-value') || '',\\n                    oValueL = oValue.length;\\n\\n                // edge cases when erasing digits\\n                if (el.data('mask-keycode') === 8 && oValue !== newVal) {\\n                    caretPos = caretPos - (newVal.slice(0, caretPos).length - oValue.slice(0, caretPos).length);\\n\\n                    // edge cases when typing new digits\\n                } else if (oValue !== newVal) {\\n                    // if the cursor is at the end keep it there\\n                    if (caretPos >= oValueL) {\\n                        caretPos = newValL;\\n                    } else {\\n                        caretPos = caretPos + (newVal.slice(0, caretPos).length - oValue.slice(0, caretPos).length);\\n                    }\\n                }\\n\\n                return caretPos;\\n            },\\n            behaviour: function(e) {\\n                e = e || window.event;\\n                p.invalid = [];\\n\\n                var keyCode = el.data('mask-keycode');\\n\\n                if ($.inArray(keyCode, jMask.byPassKeys) === -1) {\\n                    var newVal   = p.getMasked(),\\n                        caretPos = p.getCaret();\\n\\n                    setTimeout(function(caretPos, newVal) {\\n                        p.setCaret(p.calculateCaretPosition(caretPos, newVal));\\n                    }, 10, caretPos, newVal);\\n\\n                    p.val(newVal);\\n                    p.setCaret(caretPos);\\n                    return p.callbacks(e);\\n                }\\n            },\\n            getMasked: function(skipMaskChars, val) {\\n                var buf = [],\\n                    value = val === undefined ? p.val() : val + '',\\n                    m = 0, maskLen = mask.length,\\n                    v = 0, valLen = value.length,\\n                    offset = 1, addMethod = 'push',\\n                    resetPos = -1,\\n                    lastMaskChar,\\n                    check;\\n\\n                if (options.reverse) {\\n                    addMethod = 'unshift';\\n                    offset = -1;\\n                    lastMaskChar = 0;\\n                    m = maskLen - 1;\\n                    v = valLen - 1;\\n                    check = function () {\\n                        return m > -1 && v > -1;\\n                    };\\n                } else {\\n                    lastMaskChar = maskLen - 1;\\n                    check = function () {\\n                        return m < maskLen && v < valLen;\\n                    };\\n                }\\n\\n                var lastUntranslatedMaskChar;\\n                while (check()) {\\n                    var maskDigit = mask.charAt(m),\\n                        valDigit = value.charAt(v),\\n                        translation = jMask.translation[maskDigit];\\n\\n                    if (translation) {\\n                        if (valDigit.match(translation.pattern)) {\\n                            buf[addMethod](valDigit);\\n                            if (translation.recursive) {\\n                                if (resetPos === -1) {\\n                                    resetPos = m;\\n                                } else if (m === lastMaskChar) {\\n                                    m = resetPos - offset;\\n                                }\\n\\n                                if (lastMaskChar === resetPos) {\\n                                    m -= offset;\\n                                }\\n                            }\\n                            m += offset;\\n                        } else if (valDigit === lastUntranslatedMaskChar) {\\n                            // matched the last untranslated (raw) mask character that we encountered\\n                            // likely an insert offset the mask character from the last entry; fall\\n                            // through and only increment v\\n                            lastUntranslatedMaskChar = undefined;\\n                        } else if (translation.optional) {\\n                            m += offset;\\n                            v -= offset;\\n                        } else if (translation.fallback) {\\n                            buf[addMethod](translation.fallback);\\n                            m += offset;\\n                            v -= offset;\\n                        } else {\\n                            p.invalid.push({p: v, v: valDigit, e: translation.pattern});\\n                        }\\n                        v += offset;\\n                    } else {\\n                        if (!skipMaskChars) {\\n                            buf[addMethod](maskDigit);\\n                        }\\n\\n                        if (valDigit === maskDigit) {\\n                            v += offset;\\n                        } else {\\n                            lastUntranslatedMaskChar = maskDigit;\\n                        }\\n\\n                        m += offset;\\n                    }\\n                }\\n\\n                var lastMaskCharDigit = mask.charAt(lastMaskChar);\\n                if (maskLen === valLen + 1 && !jMask.translation[lastMaskCharDigit]) {\\n                    buf.push(lastMaskCharDigit);\\n                }\\n\\n                return buf.join('');\\n            },\\n            callbacks: function (e) {\\n                var val = p.val(),\\n                    changed = val !== oldValue,\\n                    defaultArgs = [val, e, el, options],\\n                    callback = function(name, criteria, args) {\\n                        if (typeof options[name] === 'function' && criteria) {\\n                            options[name].apply(this, args);\\n                        }\\n                    };\\n\\n                callback('onChange', changed === true, defaultArgs);\\n                callback('onKeyPress', changed === true, defaultArgs);\\n                callback('onComplete', val.length === mask.length, defaultArgs);\\n                callback('onInvalid', p.invalid.length > 0, [val, e, el, p.invalid, options]);\\n            }\\n        };\\n\\n        el = $(el);\\n        var jMask = this, oldValue = p.val(), regexMask;\\n\\n        mask = typeof mask === 'function' ? mask(p.val(), undefined, el,  options) : mask;\\n\\n        // public methods\\n        jMask.mask = mask;\\n        jMask.options = options;\\n        jMask.remove = function() {\\n            var caret = p.getCaret();\\n            p.destroyEvents();\\n            p.val(jMask.getCleanVal());\\n            p.setCaret(caret);\\n            return el;\\n        };\\n\\n        // get value without mask\\n        jMask.getCleanVal = function() {\\n            return p.getMasked(true);\\n        };\\n\\n        // get masked value without the value being in the input or element\\n        jMask.getMaskedVal = function(val) {\\n            return p.getMasked(false, val);\\n        };\\n\\n        jMask.init = function(onlyMask) {\\n            onlyMask = onlyMask || false;\\n            options = options || {};\\n\\n            jMask.clearIfNotMatch  = $.jMaskGlobals.clearIfNotMatch;\\n            jMask.byPassKeys       = $.jMaskGlobals.byPassKeys;\\n            jMask.translation      = $.extend({}, $.jMaskGlobals.translation, options.translation);\\n\\n            jMask = $.extend(true, {}, jMask, options);\\n\\n            regexMask = p.getRegexMask();\\n\\n            if (onlyMask) {\\n                p.events();\\n                p.val(p.getMasked());\\n            } else {\\n                if (options.placeholder) {\\n                    el.attr('placeholder' , options.placeholder);\\n                }\\n\\n                // this is necessary, otherwise if the user submit the form\\n                // and then press the \\\"back\\\" button, the autocomplete will erase\\n                // the data. Works fine on IE9+, FF, Opera, Safari.\\n                if (el.data('mask')) {\\n                    el.attr('autocomplete', 'off');\\n                }\\n\\n                // detect if is necessary let the user type freely.\\n                // for is a lot faster than forEach.\\n                for (var i = 0, maxlength = true; i < mask.length; i++) {\\n                    var translation = jMask.translation[mask.charAt(i)];\\n                    if (translation && translation.recursive) {\\n                        maxlength = false;\\n                        break;\\n                    }\\n                }\\n\\n                if (maxlength) {\\n                    el.attr('maxlength', mask.length);\\n                }\\n\\n                p.destroyEvents();\\n                p.events();\\n\\n                var caret = p.getCaret();\\n                p.val(p.getMasked());\\n                p.setCaret(caret);\\n            }\\n        };\\n\\n        jMask.init(!el.is('input'));\\n    };\\n\\n    $.maskWatchers = {};\\n    var HTMLAttributes = function () {\\n            var input = $(this),\\n                options = {},\\n                prefix = 'data-mask-',\\n                mask = input.attr('data-mask');\\n\\n            if (input.attr(prefix + 'reverse')) {\\n                options.reverse = true;\\n            }\\n\\n            if (input.attr(prefix + 'clearifnotmatch')) {\\n              \";a.a+=\"  options.clearIfNotMatch = true;\\n            }\\n\\n            if (input.attr(prefix + 'selectonfocus') === 'true') {\\n                options.selectOnFocus = true;\\n            }\\n\\n            if (notSameMaskObject(input, mask, options)) {\\n                return input.data('mask', new Mask(this, mask, options));\\n            }\\n        },\\n        notSameMaskObject = function(field, mask, options) {\\n            options = options || {};\\n            var maskObject = $(field).data('mask'),\\n                stringify = JSON.stringify,\\n                value = $(field).val() || $(field).text();\\n            try {\\n                if (typeof mask === 'function') {\\n                    mask = mask(value);\\n                }\\n                return typeof maskObject !== 'object' || stringify(maskObject.options) !== stringify(options) || maskObject.mask !== mask;\\n            } catch (e) {}\\n        },\\n        eventSupported = function(eventName) {\\n            var el = document.createElement('div'), isSupported;\\n\\n            eventName = 'on' + eventName;\\n            isSupported = (eventName in el);\\n\\n            if ( !isSupported ) {\\n                el.setAttribute(eventName, 'return;');\\n                isSupported = typeof el[eventName] === 'function';\\n            }\\n            el = null;\\n\\n            return isSupported;\\n        };\\n\\n    $.fn.mask = function(mask, options) {\\n        options = options || {};\\n        var selector = this.selector,\\n            globals = $.jMaskGlobals,\\n            interval = globals.watchInterval,\\n            watchInputs = options.watchInputs || globals.watchInputs,\\n            maskFunction = function() {\\n                if (notSameMaskObject(this, mask, options)) {\\n                    return $(this).data('mask', new Mask(this, mask, options));\\n                }\\n            };\\n\\n        $(this).each(maskFunction);\\n\\n        if (selector && selector !== '' && watchInputs) {\\n            clearInterval($.maskWatchers[selector]);\\n            $.maskWatchers[selector] = setInterval(function(){\\n                $(document).find(selector).each(maskFunction);\\n            }, interval);\\n        }\\n        return this;\\n    };\\n\\n    $.fn.masked = function(val) {\\n        return this.data('mask').getMaskedVal(val);\\n    };\\n\\n    $.fn.unmask = function() {\\n        clearInterval($.maskWatchers[this.selector]);\\n        delete $.maskWatchers[this.selector];\\n        return this.each(function() {\\n            var dataMask = $(this).data('mask');\\n            if (dataMask) {\\n                dataMask.remove().removeData('mask');\\n            }\\n        });\\n    };\\n\\n    $.fn.cleanVal = function() {\\n        return this.data('mask').getCleanVal();\\n    };\\n\\n    $.applyDataMask = function(selector) {\\n        selector = selector || $.jMaskGlobals.maskElements;\\n        var $selector = (selector instanceof $) ? selector : $(selector);\\n        $selector.filter($.jMaskGlobals.dataMaskAttr).each(HTMLAttributes);\\n    };\\n\\n    var globals = {\\n        maskElements: 'input,td,span,div',\\n        dataMaskAttr: '*[data-mask]',\\n        dataMask: true,\\n        watchInterval: 300,\\n        watchInputs: true,\\n        // old versions of chrome dont work great with input event\\n        useInput: !/Chrome\\\\/[2-4][0-9]|SamsungBrowser/.test(window.navigator.userAgent) && eventSupported('input'),\\n        watchDataMask: false,\\n        byPassKeys: [9, 16, 17, 18, 36, 37, 38, 39, 40, 91],\\n        translation: {\\n            '0': {pattern: /\\\\d/},\\n            '9': {pattern: /\\\\d/, optional: true},\\n            '#': {pattern: /\\\\d/, recursive: true},\\n            'A': {pattern: /[a-zA-Z0-9]/},\\n            'S': {pattern: /[a-zA-Z]/}\\n        }\\n    };\\n\\n    $.jMaskGlobals = $.jMaskGlobals || {};\\n    globals = $.jMaskGlobals = $.extend(true, {}, globals, $.jMaskGlobals);\\n\\n    // looking for inputs with data-mask attribute\\n    if (globals.dataMask) {\\n        $.applyDataMask();\\n    }\\n\\n    setInterval(function() {\\n        if ($.jMaskGlobals.watchDataMask) {\\n            $.applyDataMask();\\n        }\\n    }, globals.watchInterval);\\n}, window.jQuery, window.Zepto));\\n\";return a.a};var WN=Zue(R3e,'MaterialInputMaskClientBundle_default_InlineClientBundleGenerator/1',2738);Uqb(924,54,sLe,Msd);_.ze=function Nsd(){uie();$Eb(this,new wie(m$e,'An inputmask helps the user with the input by ensuring a predefined format. This can be useful for dates, numerics, phone numbers etc...','addins/inputmask/InputMask',''))};var T0=Zue(xUe,'InputMaskPresenter',924);Uqb(1305,62,tLe,Tsd);var Z0=Zue(xUe,'InputMaskView',1305);Uqb(1759,1,{},Vsd);var Y0=Zue(xUe,'InputMaskView_BinderImpl/Widgets',1759);Uqb(1760,1,YLe,Wsd);_.kd=function Xsd(a){abd($wnd.$(ho(zD(this.a.e.a.D,205))).cleanVal())};var U0=Zue(xUe,'InputMaskView_BinderImpl/Widgets/1',1760);Uqb(1761,1,YLe,Ysd);_.kd=function Zsd(a){abd(FD(this.a.e.b.D.Td()))};var V0=Zue(xUe,'InputMaskView_BinderImpl/Widgets/2',1761);Uqb(1762,1,YLe,$sd);_.kd=function _sd(a){$wnd.$(ho(zD(this.a.e.c.D,205))).unmask()};var W0=Zue(xUe,'InputMaskView_BinderImpl/Widgets/3',1762);Uqb(1763,1,YLe,atd);_.kd=function btd(a){B_b(this.a.e.c,V3e)};var X0=Zue(xUe,'InputMaskView_BinderImpl/Widgets/4',1763);Uqb(770,1,hTe);_.Vc=function ktd(){nJb(this.b,dtd(this.a.a))};iHe(Eq)(10);\n//# sourceURL=gwtmaterialdemo-10.js\n")
