$wnd.gwtmaterialdemo.runAsyncCallback4("function $scrollIntoView(elem){\n  var left = elem.offsetLeft, top_0 = elem.offsetTop;\n  var width_0 = elem.offsetWidth, height = elem.offsetHeight;\n  if (elem.parentNode != elem.offsetParent) {\n    left -= elem.parentNode.offsetLeft;\n    top_0 -= elem.parentNode.offsetTop;\n  }\n  var cur = elem.parentNode;\n  while (cur && cur.nodeType == 1) {\n    left < cur.scrollLeft && (cur.scrollLeft = left);\n    left + width_0 > cur.scrollLeft + cur.clientWidth && (cur.scrollLeft = left + width_0 - cur.clientWidth);\n    top_0 < cur.scrollTop && (cur.scrollTop = top_0);\n    top_0 + height > cur.scrollTop + cur.clientHeight && (cur.scrollTop = top_0 + height - cur.clientHeight);\n    var offsetLeft = cur.offsetLeft, offsetTop = cur.offsetTop;\n    if (cur.parentNode != cur.offsetParent) {\n      offsetLeft -= cur.parentNode.offsetLeft;\n      offsetTop -= cur.parentNode.offsetTop;\n    }\n    left += offsetLeft - cur.scrollLeft;\n    top_0 += offsetTop - cur.scrollTop;\n    cur = cur.parentNode;\n  }\n}\n\nfunction addWindowScrollHandler(handler){\n  maybeInitializeCloseHandlers();\n  maybeInitializeScrollHandlers();\n  return addHandler_0(($clinit_Window$ScrollEvent() , $clinit_Window$ScrollEvent() , TYPE_26), handler);\n}\n\nfunction fireEvent_5(event_0){\n  !!handlers_1 && $fireEvent(handlers_1, event_0);\n}\n\nfunction maybeInitializeScrollHandlers(){\n  if (!scrollHandlersInitialized) {\n    $initWindowScrollHandler();\n    scrollHandlersInitialized = true;\n  }\n}\n\nvar scrollHandlersInitialized = false;\nfunction $clinit_Window$ScrollEvent(){\n  $clinit_Window$ScrollEvent = emptyMethod;\n  TYPE_26 = new GwtEvent$Type;\n}\n\nfunction $dispatch_2(handler){\n  $setupCutOutPosition(handler.this$01.focus_0, handler.this$01.targetElement, handler.this$01.cutOutPadding, handler.this$01.circle);\n}\n\nfunction Window$ScrollEvent(){\n  $clinit_Window$ScrollEvent();\n}\n\ndefineClass(646, $intern_25, {}, Window$ScrollEvent);\n_.dispatch = function dispatch_26(handler){\n  $dispatch_2(castTo(handler, 2225));\n}\n;\n_.getAssociatedType = function getAssociatedType_27(){\n  return TYPE_26;\n}\n;\nvar TYPE_26;\nvar Lcom_google_gwt_user_client_Window$ScrollEvent_2_classLit = createForClass('com.google.gwt.user.client', 'Window/ScrollEvent', 646);\nfunction $initWindowScrollHandler(){\n  var oldOnScroll = $wnd.onscroll;\n  $wnd.onscroll = $entry(function(evt){\n    try {\n      scrollHandlersInitialized && fireEvent_5(($getScrollLeft($doc) , $getScrollTop($doc) , new Window$ScrollEvent));\n    }\n     finally {\n      oldOnScroll && oldOnScroll(evt);\n    }\n  }\n  );\n}\n\nfunction $closeCutOut(this$static){\n  $doc.documentElement.style['overflow'] = this$static.viewportOverflow;\n  ($clinit_DOM() , this$static.element_0).style['display'] = ($clinit_Style$Display() , 'none');\n  if (this$static.resizeHandler) {\n    $removeHandler(this$static.resizeHandler.real);\n    this$static.resizeHandler = null;\n  }\n  if (this$static.scrollHandler_0) {\n    $removeHandler(this$static.scrollHandler_0.real);\n    this$static.scrollHandler_0 = null;\n  }\n  if (this$static.autoAddedToDocument) {\n    $removeFromParent_0(this$static);\n    this$static.autoAddedToDocument = false;\n  }\n  fire_1(this$static, this$static);\n}\n\nfunction $openCutOut(this$static){\n  var docStyle, temp, style, computed;\n  if (!this$static.targetElement) {\n    throw new IllegalStateException_0('The target element should be set before calling openCutOut().');\n  }\n  $scrollIntoView(this$static.targetElement);\n  this$static.computedBackgroundColor == null && (temp = new MaterialWidget_0($doc.createElement('div')) , $setBackgroundColor(temp, this$static.backgroundColor) , style = ($clinit_DOM() , temp.element_0).style , style['position'] = ($clinit_Style$Position() , 'fixed') , undefined , style['width'] = ($clinit_Style$Unit() , '1.0px') , undefined , style['height'] = '1.0px' , undefined , style['left'] = '-10.0px' , undefined , style['top'] = '-10.0px' , undefined , style['zIndex'] = '-10000' , undefined , computed = setupComputedBackgroundColor(this$static.backgroundColor) , this$static.opacity_0 < 1 && $equals_2(($clinit_String() , computed.substr(0, 4)), 'rgb(') && (computed = $replace_0($replace_0(computed, 'rgb(', 'rgba('), ')', ', ' + this$static.opacity_0 + ')')) , this$static.computedBackgroundColor = computed , undefined);\n  docStyle = $doc.documentElement.style;\n  this$static.viewportOverflow = docStyle['overflow'];\n  docStyle['overflow'] = 'hidden';\n  $setupTransition(this$static);\n  if (this$static.animated) {\n    this$static.focus_0.style['boxShadow'] = '0px 0px 0px 0rem ' + this$static.computedBackgroundColor;\n    $scheduleDeferred(($clinit_SchedulerImpl() , INSTANCE), new MaterialCutOut$1(this$static));\n  }\n   else {\n    this$static.focus_0.style['boxShadow'] = '0px 0px 0px ' + this$static.backgroundSize + ' ' + this$static.computedBackgroundColor;\n  }\n  if (this$static.circle) {\n    this$static.focus_0.style['WebkitBorderRadius'] = '50%';\n    this$static.focus_0.style['borderRadius'] = '50%';\n  }\n   else {\n    this$static.focus_0.style['WebkitBorderRadius'] = '';\n    this$static.focus_0.style['borderRadius'] = '';\n  }\n  $setupCutOutPosition(this$static.focus_0, this$static.targetElement, this$static.cutOutPadding, this$static.circle);\n  !!this$static.resizeHandler && $removeHandler(this$static.resizeHandler.real);\n  !!this$static.scrollHandler_0 && $removeHandler(this$static.scrollHandler_0.real);\n  this$static.resizeHandler = addResizeHandler(new MaterialCutOut$2(this$static));\n  this$static.scrollHandler_0 = addWindowScrollHandler(new MaterialCutOut$3(this$static));\n  ($clinit_DOM() , this$static.element_0).style['display'] = '';\n  if (!this$static.parent_1) {\n    this$static.autoAddedToDocument = true;\n    $add_4(($clinit_RootPanel() , get_1(null)), this$static);\n  }\n}\n\nfunction $setTarget(this$static, targetElement){\n  this$static.targetElement = targetElement;\n}\n\nfunction $setupCutOutPosition(cutOut, relativeTo, padding, circle){\n  var rect = relativeTo.getBoundingClientRect();\n  var top_0 = rect.top;\n  var left = rect.left;\n  var width_0 = rect.right - rect.left;\n  var height = rect.bottom - rect.top;\n  if (circle) {\n    if (width_0 != height) {\n      var dif = width_0 - height;\n      if (width_0 > height) {\n        height += dif;\n        top_0 -= dif / 2;\n      }\n       else {\n        dif = -dif;\n        width_0 += dif;\n        left -= dif / 2;\n      }\n    }\n  }\n  top_0 -= padding;\n  left -= padding;\n  width_0 += padding * 2;\n  height += padding * 2;\n  cutOut.style.top = top_0 + 'px';\n  cutOut.style.left = left + 'px';\n  cutOut.style.width = width_0 + 'px';\n  cutOut.style.height = height + 'px';\n}\n\nfunction $setupTransition(this$static){\n  if (this$static.animated) {\n    this$static.focus_0.style['WebkitTransition'] = 'box-shadow ' + this$static.animationDuration + ' ' + this$static.animationTimingFunction;\n    this$static.focus_0.style['transition'] = 'box-shadow ' + this$static.animationDuration + ' ' + this$static.animationTimingFunction;\n  }\n   else {\n    this$static.focus_0.style['WebkitTransition'] = '';\n    this$static.focus_0.style['transition'] = '';\n  }\n}\n\nfunction MaterialCutOut(){\n  $clinit_MaterialWidget();\n  var style;\n  MaterialWidget_1.call(this, $doc.createElement('div'), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_0, 2, 5, ['material-cutout']));\n  this.backgroundColor = 'blue';\n  this.opacity_0 = 0.8;\n  this.animated = true;\n  this.animationDuration = '0.5s';\n  this.animationTimingFunction = 'ease';\n  this.backgroundSize = '100rem';\n  this.cutOutPadding = 10;\n  this.circle = false;\n  this.autoAddedToDocument = false;\n  this.focus_0 = $doc.createElement('div');\n  $appendChild(($clinit_DOM() , this.element_0), this.focus_0);\n  style = this.element_0.style;\n  style['width'] = ($clinit_Style$Unit() , '100.0%');\n  style['height'] = '100.0%';\n  style['position'] = ($clinit_Style$Position() , 'fixed');\n  style['top'] = '0.0px';\n  style['left'] = '0.0px';\n  style['overflow'] = ($clinit_Style$Overflow() , 'hidden');\n  style['zIndex'] = '10000';\n  style['display'] = ($clinit_Style$Display() , 'none');\n  this.focus_0.className = 'material-cutout-focus';\n  style = this.focus_0.style;\n  style['content'] = \"''\";\n  style['position'] = 'absolute';\n  style['zIndex'] = '-1';\n}\n\ndefineClass(1749, 22, $intern_71, MaterialCutOut);\n_.setBackgroundColor = function setBackgroundColor_0(bgColor){\n  this.backgroundColor = bgColor;\n  this.computedBackgroundColor = null;\n}\n;\n_.animated = false;\n_.autoAddedToDocument = false;\n_.circle = false;\n_.cutOutPadding = 0;\n_.opacity_0 = 0;\nvar Lgwt_material_design_addins_client_cutout_MaterialCutOut_2_classLit = createForClass('gwt.material.design.addins.client.cutout', 'MaterialCutOut', 1749);\nfunction MaterialCutOut$1(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1750, 1, {}, MaterialCutOut$1);\n_.execute_1 = function execute_32(){\n  this.this$01.focus_0.style['boxShadow'] = '0px 0px 0px ' + this.this$01.backgroundSize + ' ' + this.this$01.computedBackgroundColor;\n}\n;\nvar Lgwt_material_design_addins_client_cutout_MaterialCutOut$1_2_classLit = createForClass('gwt.material.design.addins.client.cutout', 'MaterialCutOut/1', 1750);\nfunction MaterialCutOut$2(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1751, 1, $intern_51, MaterialCutOut$2);\n_.onResize = function onResize_11(event_0){\n  $setupCutOutPosition(this.this$01.focus_0, this.this$01.targetElement, this.this$01.cutOutPadding, this.this$01.circle);\n}\n;\nvar Lgwt_material_design_addins_client_cutout_MaterialCutOut$2_2_classLit = createForClass('gwt.material.design.addins.client.cutout', 'MaterialCutOut/2', 1751);\nfunction MaterialCutOut$3(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1752, 1, {16:1, 2225:1}, MaterialCutOut$3);\nvar Lgwt_material_design_addins_client_cutout_MaterialCutOut$3_2_classLit = createForClass('gwt.material.design.addins.client.cutout', 'MaterialCutOut/3', 1752);\nfunction CutOutsPresenter(eventBus, view, proxy){\n  $clinit_PresenterWidget();\n  Presenter.call(this, eventBus, view, proxy, ($clinit_ApplicationPresenter() , SLOT_MAIN));\n}\n\ndefineClass(787, 55, $intern_64, CutOutsPresenter);\n_.onReveal = function onReveal_7(){\n  $clinit_SetPageTitleEvent();\n  $fireEvent_1(this, new SetPageTitleEvent('CutOuts', 'The MaterialCutOut is an excellent component to show users about new features and important components (buttons, labels and so) on the UI.'));\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_cutouts_CutOutsPresenter_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cutouts', 'CutOutsPresenter', 787);\nfunction $onCutOut(this$static){\n  $setTarget(this$static.cutout, $getElement(this$static.btnCutOut));\n  $openCutOut(this$static.cutout);\n}\n\nfunction CutOutsView(){\n  ViewImpl.call(this);\n  $initWidget_0(this, $build_f_MaterialPanel1_0(new CutOutsView_BinderImpl$Widgets(this)));\n}\n\ndefineClass(1008, 58, $intern_65, CutOutsView);\nvar Lgwt_material_design_demo_client_application_addins_cutouts_CutOutsView_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cutouts', 'CutOutsView', 1008);\nfunction $build_f_MaterialPanel1_0(this$static){\n  var f_MaterialPanel1, f_MaterialTitle2, f_PrettyPre3, f_MaterialTitle4, btnCutOut, cutout, f_MaterialTitle5, btnCutOutClose, f_PrettyPre6, f_PrettyPre7, sb, sb_0, sb_1;\n  f_MaterialPanel1 = new MaterialPanel;\n  $add_15(f_MaterialPanel1, (f_MaterialTitle2 = new MaterialTitle , $getElement(f_MaterialTitle2.header).innerHTML = 'Usage' , undefined , f_MaterialTitle2));\n  $add_15(f_MaterialPanel1, (f_PrettyPre3 = new PrettyPre , $setHTML_0(f_PrettyPre3, (sb = new StringBuilder , sb.string += '\\u2003&lt;!-- Addin Import --&gt;<br> xmlns:ma=\"urn:import:gwt.material.design.addins.client\"<br><br> &lt;!-- Addin Usage --&gt;<br> &lt;ma:cutout.MaterialCutOut ui:field=\"cutout\" backgroundColor=\"blue\" circle=\"true\" opacity=\"0.8\" textAlign=\"CENTER\"&gt;<br> \\u2003&lt;m:MaterialTitle title=\"New Feature\" description=\"Description of your new Feature\" textColor=\"white\"/&gt;<br> \\u2003&lt;m:MaterialButton text=\"Close\" ui:field=\"btnCutOutClose\" textColor=\"blue\" backgroundColor=\"white\"/&gt;<br> &lt;/ma:cutout.MaterialCutOut&gt;' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb.string)).html_0) , setStyleName(($clinit_DOM() , f_PrettyPre3.element_0), 'lang-xml', true) , setStyleName(f_PrettyPre3.element_0, 'z-depth-1', true) , f_PrettyPre3));\n  $add_15(f_MaterialPanel1, (f_MaterialTitle4 = new MaterialTitle , $setText_12(f_MaterialTitle4.paragraph, 'Click the icon below to show a material cutout.') , $getElement(f_MaterialTitle4.header).innerHTML = 'Material Cut Out' , undefined , f_MaterialTitle4));\n  $add_15(f_MaterialPanel1, (btnCutOut = new MaterialIcon , $setIconType_3(btnCutOut, ($clinit_IconType() , POLYMER)) , $addClickHandler(btnCutOut, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1) , this$static.owner.btnCutOut = btnCutOut , btnCutOut));\n  $add_15(f_MaterialPanel1, (cutout = new MaterialCutOut , $add_15(cutout, (f_MaterialTitle5 = new MaterialTitle , $setText_12(f_MaterialTitle5.paragraph, 'Description of your new Feature') , $getElement(f_MaterialTitle5.header).innerHTML = 'New Feature' , $setTextColor_0((!f_MaterialTitle5.colorsMixin_0 && (f_MaterialTitle5.colorsMixin_0 = new ColorsMixin(f_MaterialTitle5)) , f_MaterialTitle5.colorsMixin_0), 'white') , f_MaterialTitle5)) , $add_15(cutout, (btnCutOutClose = new MaterialButton , $setBackgroundColor_0((!btnCutOutClose.colorsMixin_0 && (btnCutOutClose.colorsMixin_0 = new ColorsMixin(btnCutOutClose)) , btnCutOutClose.colorsMixin_0), 'white') , $setText_6(btnCutOutClose.span_1, 'Close') , $add_15(btnCutOutClose, btnCutOutClose.span_1) , $setTextColor_0((!btnCutOutClose.colorsMixin_0 && (btnCutOutClose.colorsMixin_0 = new ColorsMixin(btnCutOutClose)) , btnCutOutClose.colorsMixin_0), 'blue') , $addClickHandler(btnCutOutClose, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames2) , btnCutOutClose)) , cutout.backgroundColor = 'blue' , cutout.computedBackgroundColor = null , $setTextAlign(cutout, ($clinit_TextAlign() , CENTER_5)) , cutout.opacity_0 = 0.8 , cutout.computedBackgroundColor = null , cutout.circle = true , this$static.owner.cutout = cutout , cutout));\n  $add_15(f_MaterialPanel1, (f_PrettyPre6 = new PrettyPre , $setHTML_0(f_PrettyPre6, (sb_0 = new StringBuilder , sb_0.string += '\\u2003&lt; -- Target Element --&gt;<br> &lt;m:MaterialIcon iconType=\"POLYMER\" ui:field=\"btnCutOut\"/&gt;<br> &lt;ma:cutout.MaterialCutOut ui:field=\"cutout\" backgroundColor=\"blue\" circle=\"true\" opacity=\"0.8\" textAlign=\"CENTER\"&gt;<br> \\u2003&lt;m:MaterialTitle title=\"New Feature\" description=\"Description of your new Feature\" textColor=\"white\"/&gt;<br> \\u2003&lt;m:MaterialButton text=\"Close\" ui:field=\"btnCutOutClose\" textColor=\"blue\" backgroundColor=\"white\"/&gt;<br> &lt;/ma:cutout.MaterialCutOut&gt;<br>' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_0.string)).html_0) , setStyleName(f_PrettyPre6.element_0, 'lang-xml', true) , setStyleName(f_PrettyPre6.element_0, 'z-depth-1', true) , f_PrettyPre6));\n  $add_15(f_MaterialPanel1, (f_PrettyPre7 = new PrettyPre , $setHTML_0(f_PrettyPre7, (sb_1 = new StringBuilder , sb_1.string += '\\u2003@UiField MaterialCutOut cutout;<br><br> &lt;-- Target Element --&gt;<br> @UiField MaterialIcon btnCutOut; <br><br> @UiHandler(\"btnCutOut\")<br> void onCutOut(ClickEvent e){<br> \\u2003cutout.setTarget(btnCutOut);<br> \\u2003cutout.openCutOut();<br> }' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_1.string)).html_0) , setStyleName(f_PrettyPre7.element_0, 'lang-java', true) , setStyleName(f_PrettyPre7.element_0, 'z-depth-1', true) , f_PrettyPre7));\n  return f_MaterialPanel1;\n}\n\nfunction CutOutsView_BinderImpl$Widgets(owner){\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1 = new CutOutsView_BinderImpl$Widgets$1(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames2 = new CutOutsView_BinderImpl$Widgets$2(this);\n  this.owner = owner;\n}\n\ndefineClass(1287, 1, {}, CutOutsView_BinderImpl$Widgets);\nvar Lgwt_material_design_demo_client_application_addins_cutouts_CutOutsView_1BinderImpl$Widgets_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cutouts', 'CutOutsView_BinderImpl/Widgets', 1287);\nfunction CutOutsView_BinderImpl$Widgets$1(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1288, 1, $intern_73, CutOutsView_BinderImpl$Widgets$1);\n_.onClick = function onClick_45(event_0){\n  $onCutOut(this.this$11.owner);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_cutouts_CutOutsView_1BinderImpl$Widgets$1_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cutouts', 'CutOutsView_BinderImpl/Widgets/1', 1288);\nfunction CutOutsView_BinderImpl$Widgets$2(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1289, 1, $intern_73, CutOutsView_BinderImpl$Widgets$2);\n_.onClick = function onClick_46(event_0){\n  $closeCutOut(this.this$11.owner.cutout);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_cutouts_CutOutsView_1BinderImpl$Widgets$2_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.cutouts', 'CutOutsView_BinderImpl/Widgets/2', 1289);\nfunction $get_Key$type$gwt$material$design$demo$client$application$addins$cutouts$CutOutsPresenter$_annotation$$none$$(this$static){\n  var result, result0;\n  if (!this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$cutouts$CutOutsPresenter$_annotation$$none$$) {\n    result0 = new CutOutsPresenter($get_Key$type$com$google$web$bindery$event$shared$EventBus$_annotation$$none$$($getFragment_com_google_web_bindery_event_shared(this$static.injector)), (result = $get_Key$type$gwt$material$design$demo$client$application$addins$cutouts$CutOutsView$_annotation$$none$$(this$static) , result), $get_Key$type$gwt$material$design$demo$client$application$addins$cutouts$CutOutsPresenter$MyProxy$_annotation$$none$$(this$static));\n    $automaticBind(($getFragment_com_gwtplatform_mvp_client(this$static.injector) , result0), $get_Key$type$com$gwtplatform$mvp$client$AutobindDisable$_annotation$$none$$($getFragment_com_gwtplatform_mvp_client(this$static.injector)));\n    this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$cutouts$CutOutsPresenter$_annotation$$none$$ = result0;\n  }\n  return this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$cutouts$CutOutsPresenter$_annotation$$none$$;\n}\n\nfunction $get_Key$type$gwt$material$design$demo$client$application$addins$cutouts$CutOutsView$_annotation$$none$$(this$static){\n  var result;\n  if (!this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$cutouts$CutOutsView$_annotation$$none$$) {\n    result = new CutOutsView;\n    this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$cutouts$CutOutsView$_annotation$$none$$ = result;\n  }\n  return this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$cutouts$CutOutsView$_annotation$$none$$;\n}\n\ndefineClass(680, 1, $intern_111);\n_.onSuccess_0 = function onSuccess_4(){\n  $onSuccess(this.val$callback2, $get_Key$type$gwt$material$design$demo$client$application$addins$cutouts$CutOutsPresenter$_annotation$$none$$(this.this$11.this$01));\n}\n;\n$entry(onLoad_0)(4);\n\n//# sourceURL=gwtmaterialdemo-4.js\n")
