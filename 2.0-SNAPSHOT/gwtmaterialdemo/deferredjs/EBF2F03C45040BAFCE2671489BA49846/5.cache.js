$wnd.gwtmaterialdemo.runAsyncCallback5("var $intern_120 = {275:1, 5:1, 30:1, 23:1}, $intern_121 = {117:1, 153:1}, $intern_123 = {113:1, 134:1}, $intern_124 = {113:1, 134:1, 169:1};\nfunction $setData(this$static, data_0){\n  this$static.data = data_0;\n}\n\nfunction nextInt(upperBound){\n  return Math.floor(Math.random() * upperBound) | 0;\n}\n\nfunction alert_0(msg){\n  $wnd.alert(msg);\n}\n\nfunction $getWidgetIndex(this$static, child){\n  return $indexOf(this$static.children_1, child);\n}\n\nfunction $remove_0(this$static){\n  return $remove_1(this$static, $get_3(this$static.children_1, 0));\n}\n\nfunction $$this(this$static){\n  !this$static.$this && (this$static.$this = $wnd.$(($clinit_DOM() , this$static.element_0)));\n  return this$static.$this;\n}\n\nfunction $setTop(this$static){\n  ($clinit_DOM() , this$static.element_0).style['top'] = ($clinit_Style$Unit() , '0.0px');\n}\n\nfunction $delay(this$static, delay){\n  $cancel_0(this$static.timer);\n  delay > 0?$schedule(this$static.timer, delay):$doLoad(this$static.timer.this$01.this$01);\n}\n\ndefineClass(1665, 1, {});\nvar Lgwt_material_design_client_base_InterruptibleTask_2_classLit = createForClass('gwt.material.design.client.base', 'InterruptibleTask', 1665);\nfunction InterruptibleTask$1(this$0){\n  this.this$01 = this$0;\n  Timer.call(this);\n}\n\ndefineClass(1691, 129, {}, InterruptibleTask$1);\n_.run = function run_3(){\n  $doLoad(this.this$01.this$01);\n}\n;\nvar Lgwt_material_design_client_base_InterruptibleTask$1_2_classLit = createForClass('gwt.material.design.client.base', 'InterruptibleTask/1', 1691);\nfunction $getPixelSize(this$static){\n  switch (this$static.ordinal) {\n    case 0:\n      return 15;\n    case 1:\n      return 30;\n    case 2:\n      return 60;\n    case 3:\n      return 90;\n    default:return 0;\n  }\n}\n\nfunction $clinit_AbstractDataView(){\n  $clinit_AbstractDataView = emptyMethod;\n  logger_1 = getLogger(($ensureNamesAreInitialized(Lgwt_material_design_client_data_AbstractDataView_2_classLit) , Lgwt_material_design_client_data_AbstractDataView_2_classLit.typeName));\n}\n\nfunction $addCategory(this$static, category){\n  if (!$hasCategory(this$static, category.category)) {\n    $add_27(this$static.categories, category);\n    if (this$static.useCategories) {\n      $renderComponent(this$static, category);\n      if (this$static.subheaderLib) {\n        this$static.subheaderLib.detect();\n        this$static.subheaderLib.recalculate(true);\n      }\n    }\n  }\n}\n\nfunction $bindCategoryEvents(this$static, category){\n  if (category) {\n    (!category.$this && (category.$this = $wnd.$(($clinit_DOM() , category.element_0))) , category.$this).off('opened');\n    (!category.$this && (category.$this = $wnd.$(($clinit_DOM() , category.element_0))) , category.$this).on('opened', makeLambdaFunction(AbstractDataView$lambda$16$Type.prototype.call_1, new AbstractDataView$lambda$16$Type(this$static, category)));\n    (!category.$this && (category.$this = $wnd.$(($clinit_DOM() , category.element_0))) , category.$this).off('closed');\n    (!category.$this && (category.$this = $wnd.$(($clinit_DOM() , category.element_0))) , category.$this).on('closed', makeLambdaFunction(AbstractDataView$lambda$17$Type.prototype.call_1, new AbstractDataView$lambda$17$Type(this$static, category)));\n  }\n  return category;\n}\n\nfunction $buildCategoryComponent(this$static, row){\n  var categoryName;\n  if (row) {\n    categoryName = row.category;\n    if (this$static.categoryFactory) {\n      return $hasCategory(this$static, categoryName)?$getCategory(this$static, categoryName):this$static.categoryFactory.generate(categoryName);\n    }\n  }\n  return null;\n}\n\nfunction $buildRowComponent(this$static, data_0){\n  if (data_0 != null) {\n    return this$static.rowFactory.generate_0(data_0);\n  }\n  return null;\n}\n\nfunction $checkColumnBounds_0(this$static, col){\n  if (col < 0 || col >= this$static.columns.array.length) {\n    throw new IndexOutOfBoundsException_0('Column index is out of bounds: ' + col);\n  }\n}\n\nfunction $getCategory(this$static, name_0){\n  var category, category$iterator;\n  if (name_0 != null) {\n    for (category$iterator = new ArrayList$1(this$static.categories); category$iterator.i < category$iterator.this$01.array.length;) {\n      category = castTo($next_7(category$iterator), 117);\n      if ($equals_2(category.category, name_0)) {\n        return category;\n      }\n    }\n  }\n   else {\n    return $getOrphansCategory(this$static);\n  }\n  return null;\n}\n\nfunction $getModelByRowElement(this$static, rowElement){\n  var row, row$iterator;\n  for (row$iterator = new ArrayList$1(this$static.rows_0); row$iterator.i < row$iterator.this$01.array.length;) {\n    row = castTo($next_7(row$iterator), 101);\n    if (!!row.element && !!row.element.parent_1 && $getElement(row.element) == rowElement) {\n      return row.data_0;\n    }\n  }\n  return null;\n}\n\nfunction $getModelsByRowElements(this$static, rowElements){\n  var element, element$iterator, models;\n  models = new ArrayList;\n  for (element$iterator = new ArrayList$1(rowElements); element$iterator.i < element$iterator.this$01.array.length;) {\n    element = castToJso($next_7(element$iterator));\n    $add_26(models, $getModelByRowElement(this$static, element));\n  }\n  return models;\n}\n\nfunction $getOpenCategories(this$static){\n  var category, category$iterator, element, openCategories;\n  openCategories = new ArrayList;\n  if (this$static.useCategories) {\n    for (category$iterator = new ArrayList$1(this$static.categories); category$iterator.i < category$iterator.this$01.array.length;) {\n      category = castTo($next_7(category$iterator), 117);\n      element = castTo(category.element, 155);\n      !!element && (!element.$this && (element.$this = $wnd.$(($clinit_DOM() , element.element_0))) , element.$this).hasClass('expanded') && (openCategories.array[openCategories.array.length] = category , true);\n    }\n  }\n  return openCategories;\n}\n\nfunction $getOrphansCategory(this$static){\n  var category, category$iterator;\n  for (category$iterator = new ArrayList$1(this$static.categories); category$iterator.i < category$iterator.this$01.array.length;) {\n    category = castTo($next_7(category$iterator), 117);\n    if (instanceOf(category, 255)) {\n      return castTo(category, 255);\n    }\n  }\n  return null;\n}\n\nfunction $getRowElementByModel(this$static, model){\n  var row, row$iterator;\n  for (row$iterator = new ArrayList$1(this$static.rows_0); row$iterator.i < row$iterator.this$01.array.length;) {\n    row = castTo($next_7(row$iterator), 101);\n    if (equals_Ljava_lang_Object__Z__devirtual$(row.data_0, model)) {\n      return $getElement(row.element);\n    }\n  }\n  return null;\n}\n\nfunction $getRowIndexByElement(this$static, rowElement){\n  var index_0, row, row$iterator;\n  index_0 = 0;\n  for (row$iterator = new ArrayList$1(this$static.rows_0); row$iterator.i < row$iterator.this$01.array.length;) {\n    row = castTo($next_7(row$iterator), 101);\n    ++index_0;\n    if (!!row.element && !!row.element.parent_1 && $getElement(row.element) == rowElement) {\n      break;\n    }\n  }\n  return index_0;\n}\n\nfunction $getSelectedRowModels(this$static, visibleOnly){\n  var models;\n  models = new ArrayList;\n  this$static.$table.find('tr:not([disabled]):not(.disabled) td#col0 input:checked' + (visibleOnly?':visible':'')).each(makeLambdaFunction(AbstractDataView$lambda$15$Type.prototype.call_3, new AbstractDataView$lambda$15$Type(this$static, models)));\n  return models;\n}\n\nfunction $hasCategory(this$static, categoryName){\n  var category, category$iterator;\n  if (categoryName != null) {\n    for (category$iterator = new ArrayList$1(this$static.categories); category$iterator.i < category$iterator.this$01.array.length;) {\n      category = castTo($next_7(category$iterator), 117);\n      if ($equals_2(category.category, categoryName)) {\n        return true;\n      }\n    }\n  }\n  return !!$getOrphansCategory(this$static);\n}\n\nfunction $insertColumn_0(this$static, beforeIndex, column, header){\n  var context, index_0, row, row$iterator, th;\n  beforeIndex != this$static.columns.array.length && $checkColumnBounds_0(this$static, beforeIndex);\n  column.name_0 = header;\n  index_0 = beforeIndex + (this$static.selectionType == 0?0:1);\n  th = $drawColumnHeader(this$static.renderer, column, header, index_0);\n  if (column.isSortable_0()) {\n    (!th.$this && (th.$this = $wnd.$(($clinit_DOM() , th.element_0))) , th.$this).on('click', makeLambdaFunction(AbstractDataView$lambda$10$Type.prototype.call_0, new AbstractDataView$lambda$10$Type(this$static, th, column, index_0)));\n    setStyleName(($clinit_DOM() , th.element_0), 'sortable', true);\n  }\n  this$static.headers.array.length < 1?$add_26(this$static.headers, th):$add_25(this$static.headers, index_0, th);\n  $insert_6(this$static.headerRow, th, index_0);\n  this$static.columns.array.length < beforeIndex?$add_26(this$static.columns, column):$add_25(this$static.columns, beforeIndex, column);\n  for (row$iterator = new ArrayList$1(this$static.rows_0); row$iterator.i < row$iterator.this$01.array.length;) {\n    row = castTo($next_7(row$iterator), 101);\n    context = new Cell$Context(row.index_0, index_0, row.data_0);\n    $drawColumn(row.element, context, row.data_0, column, index_0, true);\n  }\n  $refreshStickyHeaders(this$static);\n}\n\nfunction $isCategoryEmpty(this$static, category){\n  var row, row$iterator;\n  for (row$iterator = new ArrayList$1(this$static.rows_0); row$iterator.i < row$iterator.this$01.array.length;) {\n    row = castTo($next_7(row$iterator), 101);\n    if ($equals_2(row.category, category.category)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction $lambda$0_4(this$static, components_1){\n  var component, componentWidget;\n  component = castTo($get_6(components_1, components_1.array.length - 1), 153);\n  componentWidget = component.element;\n  componentWidget.attached?(this$static.rendering = false):(this$static.attachHandler = $addHandler_0(componentWidget, new AbstractDataView$lambda$18$Type(this$static), (!TYPE_15 && (TYPE_15 = new GwtEvent$Type) , TYPE_15)));\n}\n\nfunction $lambda$11(this$static, th_1){\n  var input_0, marked;\n  input_0 = $wnd.$('input', ($clinit_DOM() , th_1.element_0));\n  marked = input_0.prop('checked') || input_0.prop('indeterminate');\n  $selectAllRows(this$static, !marked || this$static.$table.find('tr:not([disabled]):not(.disabled) td#col0 input:not(:checked):visible').length > 0);\n  return $clinit_Boolean() , $clinit_Boolean() , FALSE;\n}\n\nfunction $lambda$12(this$static, e_0){\n  this$static.shiftDown = e_0.shiftKey;\n  return $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n\nfunction $lambda$13(this$static, e_0){\n  this$static.shiftDown = e_0.shiftKey;\n  return $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n\nfunction $lambda$15(this$static, models_1, e_2){\n  var model;\n  model = $getModelByRowElement(this$static, $wnd.$(e_2).parent().parent().get(0));\n  model != null && (models_1.array[models_1.array.length] = model , true);\n}\n\nfunction $lambda$16(this$static, category_1){\n  return this$static.container.trigger('category-opened', category_1.nameLbl.text_0.data);\n}\n\nfunction $lambda$17(this$static, category_1){\n  return this$static.container.trigger('category-closed', category_1.nameLbl.text_0.data);\n}\n\nfunction $lambda$19(this$static, recalculated_1, expandRow_2, expanding_3){\n  var overlay;\n  if (!recalculated_1[0]) {\n    this$static.subheaderLib.recalculate(true);\n    recalculated_1[0] = true;\n    overlay = expandRow_2.find('section.overlay');\n    overlay.height(expandRow_2.outerHeight(false));\n    this$static.container.trigger('row-expanded', new RowExpand(expandRow_2, expanding_3));\n  }\n  return $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n\nfunction $lambda$3_1(this$static, e_0){\n  var i, row, rowComponent, rowIndex;\n  if (this$static.selectionType != 0) {\n    row = $wnd.$(e_0.currentTarget).get(0);\n    rowIndex = $getRowIndexByElement(this$static, row);\n    if (this$static.selectionType == 2 && this$static.shiftDown) {\n      if (this$static.lastSelected < rowIndex) {\n        for (i = this$static.lastSelected; i < rowIndex; i++) {\n          if (i < this$static.rows_0.array.length) {\n            rowComponent = castTo($get_6(this$static.rows_0, i), 101);\n            !!rowComponent && !!rowComponent.element && !!rowComponent.element.parent_1 && $selectRow(this$static, $getElement(rowComponent.element), true);\n          }\n        }\n      }\n       else {\n        for (i = this$static.lastSelected - 1; i >= rowIndex - 1; i--) {\n          if (i >= 0) {\n            rowComponent = castTo($get_6(this$static.rows_0, i), 101);\n            !!rowComponent && !!rowComponent.element && !!rowComponent.element.parent_1 && $selectRow(this$static, $getElement(rowComponent.element), true);\n          }\n        }\n      }\n    }\n     else {\n      $toggleRowSelect(this$static, row);\n    }\n  }\n  return $clinit_Boolean() , $clinit_Boolean() , FALSE;\n}\n\nfunction $lambda$4_1(this$static, e_0){\n  var row;\n  row = $wnd.$(e_0.currentTarget).get(0);\n  this$static.container.trigger('row-contextmenu', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 4, [e_0, $getModelByRowElement(this$static, row), row]));\n  return $clinit_Boolean() , $clinit_Boolean() , FALSE;\n}\n\nfunction $lambda$5(this$static, e_0){\n  var row;\n  row = $wnd.$(e_0.currentTarget).get(0);\n  this$static.container.trigger('row-dblclick', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 4, [e_0, $getModelByRowElement(this$static, row), row]));\n  return $clinit_Boolean() , $clinit_Boolean() , FALSE;\n}\n\nfunction $lambda$6(this$static, e_0){\n  var row;\n  row = $wnd.$(e_0.currentTarget).get(0);\n  this$static.container.trigger('row-longpress', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 4, [e_0, $getModelByRowElement(this$static, row), row]));\n  return $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n\nfunction $lambda$7_0(this$static, e_0){\n  var row;\n  row = $wnd.$(e_0.currentTarget).get(0);\n  this$static.container.trigger('row-shortpress', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 4, [e_0, $getModelByRowElement(this$static, row), row]));\n  return $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n\nfunction $lambda$8(this$static, e_0){\n  var expandRow, expanding, expansion, recalculated, tr;\n  recalculated = stampJavaTypeInfo(getClassLiteralForArray(Z_classLit, 1), $intern_11, 96, 13, [false]);\n  tr = $wnd.$(e_0.currentTarget).parent().parent();\n  if (!tr.hasClass('disabled') && !tr.is('[disabled]')) {\n    expansion = [tr.next().find('td.expansion div')];\n    if (expansion[0].length < 1) {\n      expansion[0] = $wnd.$(\"<tr class='expansion'><td class='expansion' colspan='100%'><div><section class='overlay'><div class='progress' style='height:4px;top:-1px;'><div class='indeterminate'><\\/div><\\/div><\\/section><div class='content'><br/><br/><br/><\\/div><\\/div><\\/td><\\/tr>\");\n      expansion[0].insertAfter(tr);\n      expansion[0] = expansion[0].find('td.expansion div');\n    }\n    expanding = !expansion[0].hasClass('expanded');\n    expandRow = tr.next();\n    expansion[0].one('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', makeLambdaFunction(AbstractDataView$lambda$19$Type.prototype.call_1, new AbstractDataView$lambda$19$Type(this$static, recalculated, expandRow, expanding)));\n    this$static.container.trigger('row-expand', new RowExpand(expandRow, expanding));\n    $scheduleDeferred(($clinit_SchedulerImpl() , INSTANCE), new AbstractDataView$lambda$20$Type(expansion));\n  }\n  e_0.stopPropagation();\n  return $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n\nfunction $lambda$9(this$static, header_1){\n  var updateMargin;\n  updateMargin = header_1.is(':visible') && this$static.useStickyHeader;\n  this$static.subheaderLib.setMarginTop(updateMargin?header_1.outerHeight():0);\n  return $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n\nfunction $refreshStickyHeaders(this$static){\n  if (this$static.$table) {\n    this$static.$table.stickyTableHeaders('destroy');\n    !!this$static.$table && !!this$static.display_0 && this$static.$table.stickyTableHeaders(create_5($_0('.table-body', this$static.display_0)));\n  }\n}\n\nfunction $reindexColumns(this$static){\n  var colMod, i, i0, row, row$iterator, tableRow, td;\n  colMod = this$static.selectionType == 0?0:1;\n  for (row$iterator = new ArrayList$1(this$static.rows_0); row$iterator.i < row$iterator.this$01.array.length;) {\n    row = castTo($next_7(row$iterator), 101);\n    tableRow = row.element;\n    for (i0 = colMod; i0 < tableRow.children_1.size_0; i0++) {\n      td = $getColumn_2(tableRow, i0);\n      indexOf_2(($clinit_DOM() , td.element_0).className || '', 'colex') != -1 || $setId_1((!td.idMixin && (td.idMixin = new IdMixin(td)) , td.idMixin), 'col' + i0);\n    }\n  }\n  for (i = colMod; i < this$static.headerRow.children_1.size_0; i++) {\n    td = $getColumn_2(this$static.headerRow, i);\n    indexOf_2(($clinit_DOM() , td.element_0).className || '', 'colex') != -1 || $setId_1((!td.idMixin && (td.idMixin = new IdMixin(td)) , td.idMixin), 'col' + i);\n  }\n}\n\nfunction $removeHeader(this$static){\n  if (0 < this$static.headers.array.length) {\n    $remove_13(this$static.headers, 0);\n    $remove_0(this$static.headerRow);\n  }\n  $refreshStickyHeaders(this$static);\n}\n\nfunction $render_4(this$static, components){\n  var category, category$iterator, component, component$iterator, rows_0, expands;\n  this$static.rows_0.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 4, 1);\n  for (component$iterator = new ArrayList$1(components); component$iterator.i < component$iterator.this$01.array.length;) {\n    component = castTo($next_7(component$iterator), 153);\n    $renderComponent(this$static, component);\n  }\n  this$static.redraw = false;\n  rows_0 = this$static.$table.find('tr.data-row');\n  rows_0.off('.' + this$static.name_0);\n  this$static.selectionType == 0 || rows_0.on('tap.' + this$static.name_0 + ' click.' + this$static.name_0, makeLambdaFunction(AbstractDataView$lambda$3$Type.prototype.call_1, new AbstractDataView$lambda$3$Type(this$static)));\n  rows_0.on('contextmenu.' + this$static.name_0, makeLambdaFunction(AbstractDataView$lambda$4$Type.prototype.call_1, new AbstractDataView$lambda$4$Type(this$static)));\n  rows_0.on('dblclick.' + this$static.name_0, makeLambdaFunction(AbstractDataView$lambda$5$Type.prototype.call_1, new AbstractDataView$lambda$5$Type(this$static)));\n  $wnd.$(rows_0).longpress(makeLambdaFunction(AbstractDataView$lambda$6$Type.prototype.call_4, new AbstractDataView$lambda$6$Type(this$static)), makeLambdaFunction(AbstractDataView$lambda$7$Type.prototype.call_4, new AbstractDataView$lambda$7$Type(this$static)), this$static.longPressDuration);\n  expands = this$static.$table.find('i#expand');\n  expands.off('.' + this$static.name_0);\n  this$static.useRowExpansion && expands.on('tap.' + this$static.name_0 + ' click.' + this$static.name_0, makeLambdaFunction(AbstractDataView$lambda$8$Type.prototype.call_0, new AbstractDataView$lambda$8$Type(this$static)));\n  this$static.subheaderLib.detect();\n  this$static.subheaderLib.recalculate(true);\n  if (this$static.useCategories) {\n    for (category$iterator = new ArrayList$1(this$static.categories); category$iterator.i < category$iterator.this$01.array.length;) {\n      category = castTo($next_7(category$iterator), 117);\n      category.currentIndex = -1;\n      category.rowCount = -1;\n    }\n  }\n  if (components.array.length == 0) {\n    this$static.rendering = false;\n  }\n   else {\n    !!this$static.attachHandler && $removeHandler(this$static.attachHandler.real);\n    $scheduleDeferred(($clinit_SchedulerImpl() , INSTANCE), new AbstractDataView$lambda$0$Type(this$static, components));\n  }\n}\n\nfunction $renderComponent(this$static, component){\n  var category, categoryCount, categoryIndex, data_0, element, index_0, row, rowCategory, rowComponent;\n  if (component) {\n    index_0 = -1;\n    if (instanceOf(component, 101)) {\n      rowComponent = castTo(component, 101);\n      category = null;\n      rowCategory = rowComponent.category;\n      if (this$static.useCategories) {\n        category = $getCategory(this$static, rowCategory);\n        !!category && !(!!category.element && !!category.element.parent_1) && $renderComponent(this$static, category);\n      }\n      data_0 = rowComponent.data_0;\n      row = $drawRow(this$static.renderer, this$static, rowComponent, data_0, this$static.columns, this$static.redraw);\n      if (row) {\n        if (category) {\n          if (this$static.categories.array.length > 1) {\n            categoryIndex = category.currentIndex;\n            if (categoryIndex == -1) {\n              categoryIndex = $getWidgetIndex(this$static.tbody, category.element);\n              category.currentIndex = categoryIndex;\n            }\n            categoryCount = category.rowCount + 1;\n            category.rowCount = categoryCount;\n            index_0 = categoryIndex + categoryCount;\n          }\n          element = castTo(category.element, 155);\n          !!element && (!element.$this && (element.$this = $wnd.$(($clinit_DOM() , element.element_0))) , element.$this).hasClass('expanded') && (($clinit_DOM() , row.element_0).style['display'] = '' , undefined);\n        }\n         else {\n          ($clinit_DOM() , row.element_0).style['display'] = '';\n        }\n        $add_27(this$static.rows_0, rowComponent);\n      }\n    }\n     else \n      instanceOf(component, 117)?(row = $bindCategoryEvents(this$static, $drawCategory(castTo(component, 117)))):(row = new TableRow_0);\n    row?!row.parent_1 && (index_0 < 0?$add_15(this$static.tbody, row):$insert_4(this$static.tbody, row, index_0 + 1)):undefined;\n  }\n}\n\nfunction $renderRows(this$static, rows_0){\n  var category, category$iterator, components, existingRow, index_0, openCategories, row, row$iterator, visibleRange;\n  this$static.rendering = true;\n  visibleRange = this$static.range;\n  if (this$static.redrawCategories) {\n    this$static.redrawCategories = false;\n    $clearElements(this$static.rows_0);\n    if (this$static.useCategories) {\n      openCategories = $getOpenCategories(this$static);\n      $clearElements(this$static.categories);\n      for (category$iterator = new ArrayList$1(this$static.categories); category$iterator.i < category$iterator.this$01.array.length;) {\n        category = castTo($next_7(category$iterator), 117);\n        $renderComponent(this$static, category);\n        $indexOf_0(openCategories, category, 0) != -1 && !!category.element && !!category.element.parent_1 && this$static.subheaderLib.open($$this(castTo(category.element, 155)));\n      }\n    }\n     else {\n      $clearElements(this$static.categories);\n    }\n  }\n  components = new Components_1(visibleRange.length_0);\n  index_0 = 0;\n  for (row$iterator = new ArrayList$1(rows_0); row$iterator.i < row$iterator.this$01.array.length;) {\n    row = castTo($next_7(row$iterator), 101);\n    if (components.maxSize != -1 && components.array.length == components.maxSize) {\n      break;\n    }\n    if (this$static.useCategories) {\n      category = $getCategory(this$static, row.category);\n      !category && !$hasCategory(this$static, row.category) && (category = $buildCategoryComponent(this$static, row));\n      if (category) {\n        $indexOf_0(this$static.categories, category, 0) != -1 || $add_27(this$static.categories, category);\n        $indexOf_0(components, category, 0) != -1 || !!category.element && !!category.element.parent_1 && $setVisible_1(castTo(category.element, 155), true);\n      }\n    }\n    if (index_0 < this$static.rows_0.array.length) {\n      existingRow = castTo($get_6(this$static.rows_0, index_0), 101);\n      if (existingRow) {\n        $setElement_1(row, existingRow.element);\n        row.redraw = true;\n      }\n    }\n    $setIndex(row, index_0++);\n    !(components.maxSize != -1 && components.array.length == components.maxSize) && (components.array[components.array.length] = row , true);\n  }\n  this$static.render_2(components);\n}\n\nfunction $selectAllRows(this$static, select){\n  var rows_0;\n  rows_0 = new ArrayList;\n  this$static.$table.find('tr.data-row').each(makeLambdaFunction(AbstractDataView$lambda$14$Type.prototype.call_3, new AbstractDataView$lambda$14$Type(select, rows_0)));\n  $updateCheckAllInputState(this$static, null);\n  this$static.container.trigger('select-all', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 4, [$getModelsByRowElements(this$static, rows_0), rows_0, ($clinit_Boolean() , select?TRUE:FALSE)]));\n}\n\nfunction $selectRow(this$static, row, fireEvent){\n  var $row;\n  $row = $wnd.$(row);\n  if (!$row.hasClass('disabled') && !$row.is('[disabled]')) {\n    if (!($clinit_Boolean() , $row.hasClass('selected')?TRUE:FALSE)) {\n      this$static.selectionType == 1 && $selectAllRows(this$static, false);\n      $wnd.$('td#col0 input', row).prop('checked', (null , TRUE));\n      $row.addClass('selected');\n      this$static.lastSelected = $getRowIndexByElement(this$static, row);\n    }\n    $updateCheckAllInputState(this$static, null);\n    fireEvent && this$static.container.trigger('row-select', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 4, [$getModelByRowElement(this$static, row), row, (null , TRUE)]));\n  }\n}\n\nfunction $setCategoryFactory(this$static, categoryFactory){\n  this$static.categoryFactory = categoryFactory;\n}\n\nfunction $setLoadMask(this$static, loadMask){\n  if (!this$static.setup) {\n    return;\n  }\n  if (!this$static.loadMask && loadMask) {\n    if (this$static.useLoadOverlay) {\n      !this$static.maskElement && (this$static.maskElement = $wnd.$(\"<div style='position:absolute;width:100%;height:100%;top:0;opacity:0.2;background-color:black;z-index:9999;'><!--i style='left:50%;top:20%;z-index:9999;position:absolute;color:white' class='fa fa-3x fa-spinner fa-spin'><\\/i--><\\/div>\"));\n      this$static.$table.prepend(this$static.maskElement);\n    }\n  }\n   else \n    !loadMask && !!this$static.maskElement && this$static.maskElement.detach();\n  $setVisible_0(this$static.progressWidget, loadMask);\n  this$static.loadMask = loadMask;\n}\n\nfunction $setRedraw(this$static){\n  this$static.redrawCategories = true;\n  this$static.redraw = true;\n}\n\nfunction $setRenderer(this$static, renderer){\n  this$static.renderer = renderer;\n}\n\nfunction $setRowCount_1(this$static, count, isExact){\n  if (count == this$static.rowCount && isExact == this$static.isExact) {\n    return;\n  }\n  this$static.rowCount = count;\n  this$static.isExact = isExact;\n  $updateCachedData_0(this$static);\n  this$static.container.trigger('row-count-change', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 4, [valueOf_2(count), ($clinit_Boolean() , isExact?TRUE:FALSE)]));\n}\n\nfunction $setRowData_0(this$static, start_0, values){\n  var boundedEnd, boundedStart, end, i, length_0, newRow, rangeEnd, rangeStart, rows_0;\n  length_0 = values.array.length;\n  end = start_0 + length_0;\n  rangeStart = this$static.range.start_0;\n  rangeEnd = rangeStart + this$static.range.length_0;\n  boundedStart = start_0 > rangeStart?start_0:rangeStart;\n  boundedEnd = end < rangeEnd?end:rangeEnd;\n  if (start_0 != rangeStart && boundedStart >= boundedEnd) {\n    return;\n  }\n  rows_0 = new Components_2(this$static.rows_0);\n  for (i = boundedStart; i < boundedEnd; i++) {\n    newRow = $buildRowComponent(this$static, (checkCriticalElementIndex(i - boundedStart, values.array.length) , values.array[i - boundedStart]));\n    i < rows_0.array.length?$set_1(rows_0, i, newRow):!(rows_0.maxSize != -1 && rows_0.array.length == rows_0.maxSize) && (rows_0.array[rows_0.array.length] = newRow , true);\n  }\n  this$static.doSort(this$static.sortContext, rows_0);\n  this$static.renderRows(rows_0);\n}\n\nfunction $setRowFactory(this$static, rowFactory){\n  this$static.rowFactory = rowFactory;\n}\n\nfunction $setSelectionType(this$static, selectionType){\n  var hadSelection, row, row$iterator;\n  hadSelection = this$static.selectionType != 0;\n  this$static.selectionType = selectionType;\n  if (this$static.setup) {\n    if (selectionType != 0 && !hadSelection) {\n      $setupHeaderSelectionBox(this$static);\n      selectionType == 2 && $setupShiftDetection(this$static);\n      for (row$iterator = new ArrayList$1(this$static.rows_0); row$iterator.i < row$iterator.this$01.array.length;) {\n        row = castTo($next_7(row$iterator), 101);\n        $insert_6(row.element, this$static.renderer.drawSelectionCell(), 0);\n      }\n      $reindexColumns(this$static);\n    }\n     else if (selectionType == 0 && hadSelection) {\n      $removeHeader(this$static);\n      $wnd.$('td#col0').remove();\n      $reindexColumns(this$static);\n    }\n  }\n}\n\nfunction $setUseCategories(this$static, useCategories){\n  this$static.useCategories = useCategories;\n}\n\nfunction $setUseRowExpansion(this$static, useRowExpansion){\n  this$static.useRowExpansion = useRowExpansion;\n}\n\nfunction $setUseStickyHeader(this$static, stickyHeader){\n  this$static.useStickyHeader && !stickyHeader?this$static.$table.stickyTableHeaders('destroy'):stickyHeader && !!this$static.$table && !!this$static.display_0 && this$static.$table.stickyTableHeaders(create_5($_0('.table-body', this$static.display_0)));\n  this$static.useStickyHeader = stickyHeader;\n}\n\nfunction $setVisibleRange_1(this$static, range, clearData){\n  var decrease, i, increase, length_0, pageSize, pageSizeChanged, pageStart, pageStartChanged, start_0;\n  start_0 = range.start_0;\n  length_0 = range.length_0;\n  if (start_0 < 0) {\n    throw new IllegalArgumentException_0('Range start cannot be less than 0');\n  }\n  if (length_0 < 0) {\n    throw new IllegalArgumentException_0('Range length cannot be less than 0');\n  }\n  pageStart = this$static.range.start_0;\n  pageSize = this$static.range.length_0;\n  pageStartChanged = pageStart != start_0;\n  if (pageStartChanged) {\n    if (!clearData) {\n      if (start_0 > pageStart) {\n        increase = start_0 - pageStart;\n        if (this$static.rows_0.array.length > increase) {\n          for (i = 0; i < increase; i++) {\n            $remove_15(this$static.rows_0, this$static.rows_0.array.length - 1);\n          }\n        }\n      }\n       else {\n        decrease = pageStart - start_0;\n        if (this$static.rows_0.array.length > 0 && decrease < pageSize) {\n          for (i = 0; i < decrease; i++) {\n            $add_27(this$static.rows_0, null);\n          }\n        }\n      }\n    }\n    this$static.range = new Range_0(start_0, this$static.range.length_0);\n  }\n  pageSizeChanged = pageSize != length_0;\n  pageSizeChanged && (this$static.range = new Range_0(this$static.range.start_0, length_0));\n  clearData && $clear_7(this$static.rows_0);\n  $updateCachedData_0(this$static);\n  fire_9(this$static.display_0);\n}\n\nfunction $setup(this$static, scaffolding){\n  var ex, expandHeader, progressRow, progressTd;\n  try {\n    this$static.container = $(this$static.display_0);\n    this$static.table = scaffolding.table;\n    this$static.tableBody = $(scaffolding.tableBody);\n    this$static.topPanel = $(scaffolding.topPanel);\n    this$static.tbody = this$static.table.tbody;\n    this$static.thead = this$static.table.thead;\n    this$static.$table = this$static.table.element;\n    this$static.headerRow = new TableRow_0;\n    $add_15(this$static.thead, this$static.headerRow);\n    this$static.progressWidget = new MaterialProgress;\n    $setTop(this$static.progressWidget);\n    $setGwtDisplay(this$static.progressWidget, ($clinit_Style$Display() , NONE));\n    progressRow = new TableRow_0;\n    setStyleName(($clinit_DOM() , progressRow.element_0), 'stickyExclude', true);\n    progressRow.element_0.style['height'] = '3px';\n    progressTd = new TableData;\n    progressTd.element_0.setAttribute('colspan', '999');\n    progressTd.element_0.style['padding'] = ($clinit_Style$Unit() , '0.0px');\n    progressTd.element_0.style['height'] = '0px';\n    $add_15(progressTd, this$static.progressWidget);\n    $add_1(progressRow, progressTd, progressRow.element_0);\n    $add_15(this$static.thead, progressRow);\n    if (this$static.useRowExpansion) {\n      expandHeader = new TableHeader;\n      expandHeader.element_0.className = 'colex';\n      this$static.headers.array.length < 1?$add_26(this$static.headers, expandHeader):$add_25(this$static.headers, 0, expandHeader);\n      $insert_6(this$static.headerRow, expandHeader, 0);\n    }\n    if (this$static.selectionType != 0) {\n      $setupHeaderSelectionBox(this$static);\n      this$static.selectionType == 2 && $setupShiftDetection(this$static);\n    }\n    this$static.useStickyHeader && !!this$static.$table && !!this$static.display_0 && this$static.$table.stickyTableHeaders(create_5($_0('.table-body', this$static.display_0)));\n    $setupSubHeaders(this$static);\n    this$static.tableBody.on('resize.' + this$static.name_0, makeLambdaFunction(AbstractDataView$lambda$1$Type.prototype.call_0, new AbstractDataView$lambda$1$Type(this$static)));\n    $wnd.$(($clinit_ScriptInjector() , TOP_WINDOW)).on('resize.' + this$static.name_0, makeLambdaFunction(AbstractDataView$lambda$2$Type.prototype.call_0, new AbstractDataView$lambda$2$Type(this$static)));\n    this$static.setup = true;\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, 77)) {\n      ex = $e0;\n      $actuallyLog(logger_1, ($clinit_Level() , 'Problem setting up the DataView.'), ex);\n      throw unwrap(ex);\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n\nfunction $setupHeaderSelectionBox(this$static){\n  var selectAll, th;\n  th = new TableHeader;\n  $setId_1((!th.idMixin && (th.idMixin = new IdMixin(th)) , th.idMixin), 'col0');\n  ($clinit_DOM() , th.element_0).className = 'selection';\n  if (this$static.selectionType == 2) {\n    new MaterialCheckBox_0(th.element_0);\n    selectAll = $wnd.$(th.element_0).find('label');\n    selectAll.off('.' + this$static.name_0);\n    selectAll.on('tap.' + this$static.name_0 + ' click.' + this$static.name_0, makeLambdaFunction(AbstractDataView$lambda$11$Type.prototype.call_0, new AbstractDataView$lambda$11$Type(this$static, th)));\n  }\n  this$static.headers.array.length < 1?$add_26(this$static.headers, th):$add_25(this$static.headers, 0, th);\n  $insert_6(this$static.headerRow, th, 0);\n}\n\nfunction $setupShiftDetection(this$static){\n  this$static.tableBody.attr('tabindex', '0');\n  this$static.tableBody.off('keydown');\n  this$static.tableBody.keydown(makeLambdaFunction(AbstractDataView$lambda$12$Type.prototype.call_2, new AbstractDataView$lambda$12$Type(this$static)));\n  this$static.tableBody.off('keyup');\n  this$static.tableBody.keyup(makeLambdaFunction(AbstractDataView$lambda$13$Type.prototype.call_2, new AbstractDataView$lambda$13$Type(this$static)));\n}\n\nfunction $setupSubHeaders(this$static){\n  var header;\n  if (!!this$static.$table && !!this$static.display_0) {\n    this$static.subheaderLib = $wnd.TableSubHeaders.newInstance($_0('.table-body', this$static.display_0), 'tr.subheader');\n    header = this$static.$table.find('thead');\n    $wnd.$(this$static.subheaderLib).on('before-recalculate', makeLambdaFunction(AbstractDataView$lambda$9$Type.prototype.call_0, new AbstractDataView$lambda$9$Type(this$static, header)));\n    this$static.subheaderLib.load();\n  }\n}\n\nfunction $sort(this$static, th, column, index_0){\n  var oldSortContext, rows_0;\n  oldSortContext = this$static.sortContext;\n  $updateSortContext(this$static, th, column);\n  rows_0 = new Components_3(this$static.rows_0, new gwt_material_design_client_data_AbstractDataView$$__$$gwt_material_design_client_data_component_Components$Clone$$__$$static$$gwt_material_design_client_data_component_RowComponent$$RowComponent__Lgwt_material_design_client_data_component_RowComponent_2V$Type);\n  if (this$static.doSort(this$static.sortContext, rows_0)) {\n    setStyleName(($clinit_DOM() , th.element_0), 'selected', true);\n    $drawSortIcon(this$static.renderer, th, this$static.sortContext);\n    this$static.renderRows(rows_0);\n    this$static.container.trigger('sort-column', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 4, [this$static.sortContext, valueOf_2(index_0)]));\n  }\n   else {\n    this$static.sortContext = oldSortContext;\n  }\n}\n\nfunction $toggleRowSelect(this$static, row){\n  var $row, selected;\n  $row = $wnd.$(row);\n  if (!$row.hasClass('disabled') && !$row.is('[disabled]')) {\n    selected = ($clinit_Boolean() , $row.hasClass('selected')?TRUE:FALSE);\n    if (selected) {\n      $wnd.$('td#col0 input', row).prop('checked', (null , FALSE));\n      $row.removeClass('selected');\n    }\n     else {\n      this$static.selectionType == 1 && $selectAllRows(this$static, false);\n      $wnd.$('td#col0 input', row).prop('checked', (null , TRUE));\n      $row.addClass('selected');\n      this$static.lastSelected = $getRowIndexByElement(this$static, row);\n    }\n    $updateCheckAllInputState(this$static, null);\n    this$static.container.trigger('row-select', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 4, [$getModelByRowElement(this$static, row), row, selected?FALSE:TRUE]));\n  }\n}\n\nfunction $updateCachedData_0(this$static){\n  var expectedLastIndex, lastIndex, rangeStart;\n  rangeStart = this$static.range.start_0;\n  expectedLastIndex = max_1(0, min_1(this$static.range.length_0, this$static.rowCount - rangeStart));\n  lastIndex = this$static.rows_0.array.length - 1;\n  while (lastIndex >= expectedLastIndex) {\n    $remove_15(this$static.rows_0, lastIndex);\n    --lastIndex;\n  }\n}\n\nfunction $updateCheckAllInputState(this$static, input_0){\n  var fullSelection;\n  (input_0 === undefined || input_0 === null) && (input_0 = this$static.$table.find('th#col0 input'));\n  input_0.prop('indeterminate', ($clinit_Boolean() , $clinit_Boolean() , FALSE));\n  input_0.prop('checked', (null , FALSE));\n  if ($wnd.$('tr.data-row:visible').length > 0) {\n    fullSelection = this$static.$table.find('tr:not([disabled]):not(.disabled) td#col0 input:not(:checked)').length <= 0;\n    !fullSelection && this$static.$table.find('tr:not([disabled]):not(.disabled) td#col0 input:checked:visible').length > 0?input_0.prop('indeterminate', (null , TRUE)):fullSelection && input_0.prop('checked', (null , TRUE));\n  }\n}\n\nfunction $updateSortContext(this$static, th, column){\n  var sortColumn;\n  if (!this$static.sortContext) {\n    this$static.sortContext = new SortContext(column, th);\n  }\n   else {\n    sortColumn = this$static.sortContext.sortColumn;\n    if (sortColumn != column) {\n      $setSortColumn(this$static.sortContext, column);\n      $setTableHeader(this$static.sortContext, th);\n    }\n     else {\n      $reverse(this$static.sortContext);\n    }\n  }\n}\n\nfunction AbstractDataView(){\n  $clinit_AbstractDataView();\n  this.range = new Range_0(0, 20);\n  this.rows_0 = new Components_0;\n  this.categories = new Components_0;\n  this.columns = new ArrayList;\n  this.headers = new ArrayList;\n  this.name_0 = 'DataView';\n  this.categoryFactory = new CategoryComponentFactory;\n  this.rowFactory = new RowComponentFactory;\n  $setRenderer(this, new BaseRenderer);\n  this.onLoaded();\n}\n\nfunction lambda$14(select_0, rows_1, e_3){\n  $clinit_AbstractDataView();\n  var input_0, isSelected, row;\n  row = $wnd.$(e_3);\n  if (row.is(':visible') && !row.hasClass('disabled') && !row.is('[disabled]')) {\n    input_0 = $wnd.$('td#col0 input', row);\n    input_0.prop('checked', ($clinit_Boolean() , select_0?TRUE:FALSE));\n    isSelected = row.hasClass('selected');\n    row.removeClass('selected');\n    if (select_0) {\n      row.addClass('selected');\n      isSelected || $add_26(rows_1, row.get(0));\n    }\n     else \n      isSelected && $add_26(rows_1, row.get(0));\n  }\n}\n\ndefineClass(330, 1, $intern_26);\n_.addCategory = function addCategory(category){\n  $addCategory(this, category);\n}\n;\n_.doSort = function doSort(sortContext, rows_0){\n  var category, comparator, data_0, entry, entry$iterator, list, orphanRows, row, row$iterator, splitMap;\n  comparator = sortContext?sortContext.sortColumn.getSortComparator():null;\n  if (this.useCategories && this.categories.array.length != 0) {\n    splitMap = new HashMap;\n    orphanRows = new ArrayList;\n    for (row$iterator = new ArrayList$1(rows_0); row$iterator.i < row$iterator.this$01.array.length;) {\n      row = castTo($next_7(row$iterator), 101);\n      if (row) {\n        category = row.category;\n        if (category != null) {\n          data_0 = castTo(category == null?getEntryValueOrNull($getEntry(splitMap.hashCodeMap, null)):$get_11(splitMap.stringMap, category), 94);\n          if (!data_0) {\n            data_0 = new ArrayList;\n            category == null?$put_2(splitMap.hashCodeMap, null, data_0):$put_3(splitMap.stringMap, category, data_0);\n          }\n          data_0.add_1(row);\n        }\n         else {\n          orphanRows.array[orphanRows.array.length] = row;\n        }\n      }\n    }\n    orphanRows.array.length == 0 || $put_3(splitMap.stringMap, '<@orphans@>', orphanRows);\n    rows_0.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 4, 1);\n    for (entry$iterator = new AbstractHashMap$EntrySetIterator((new AbstractHashMap$EntrySet(splitMap)).this$01); entry$iterator.hasNext;) {\n      entry = $next_5(entry$iterator);\n      list = castTo(entry.getValue_0(), 94);\n      !!comparator && sort_0(list, new DataSort(comparator, sortContext.sortDir));\n      !(rows_0.maxSize != -1 && rows_0.array.length == rows_0.maxSize) && (rows_0.maxSize == -1 || list.size_1() + rows_0.array.length <= rows_0.maxSize) && $addAll_0(rows_0, list);\n    }\n  }\n   else {\n    if (comparator) {\n      sort_0(rows_0, new DataSort(comparator, sortContext.sortDir));\n    }\n     else {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.fireEvent = function fireEvent_12(event_0){\n  $fireEvent_0(this.table, event_0);\n}\n;\n_.getSelectedRowModels = function getSelectedRowModels(visibleOnly){\n  return $getSelectedRowModels(this, visibleOnly);\n}\n;\n_.getVisibleRange = function getVisibleRange_1(){\n  return this.range;\n}\n;\n_.onLoaded = function onLoaded(){\n}\n;\n_.refreshView = function refreshView(){\n  this.redraw && this.renderRows(this.rows_0);\n}\n;\n_.render_2 = function render_7(components){\n  $render_4(this, components);\n}\n;\n_.renderRows = function renderRows(rows_0){\n  $renderRows(this, rows_0);\n}\n;\n_.setLoadMask = function setLoadMask(loadMask){\n  $setLoadMask(this, loadMask);\n}\n;\n_.setRowCount = function setRowCount_1(count, isExact){\n  $setRowCount_1(this, count, isExact);\n}\n;\n_.setup_0 = function setup(scaffolding){\n  $setup(this, scaffolding);\n}\n;\n_.isExact = false;\n_.lastSelected = 0;\n_.loadMask = false;\n_.longPressDuration = 500;\n_.redraw = false;\n_.redrawCategories = false;\n_.rendering = false;\n_.rowCount = 0;\n_.selectionType = 0;\n_.setup = false;\n_.shiftDown = false;\n_.totalRows = 20;\n_.useCategories = true;\n_.useLoadOverlay = false;\n_.useRowExpansion = false;\n_.useStickyHeader = false;\nvar logger_1;\nvar Lgwt_material_design_client_data_AbstractDataView_2_classLit = createForClass('gwt.material.design.client.data', 'AbstractDataView', 330);\nfunction AbstractDataView$lambda$0$Type($$outer_0, components_1){\n  this.$$outer_0 = $$outer_0;\n  this.components_1 = components_1;\n}\n\ndefineClass(1670, 1, {}, AbstractDataView$lambda$0$Type);\n_.execute_1 = function execute_33(){\n  $lambda$0_4(this.$$outer_0, this.components_1);\n}\n;\nvar Lgwt_material_design_client_data_AbstractDataView$lambda$0$Type_2_classLit = createForClass('gwt.material.design.client.data', 'AbstractDataView/lambda$0$Type', 1670);\nfunction AbstractDataView$lambda$1$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1671, $wnd.Function, {}, AbstractDataView$lambda$1$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_0 = function call_6(arg0){\n  return this.$$outer_0.refreshView() , $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n;\nvar Lgwt_material_design_client_data_AbstractDataView$lambda$1$Type_2_classLit = createForClass('gwt.material.design.client.data', 'AbstractDataView/lambda$1$Type', 1671);\nfunction AbstractDataView$lambda$10$Type($$outer_0, th_1, column_2, index_3){\n  this.$$outer_0 = $$outer_0;\n  this.th_1 = th_1;\n  this.column_2 = column_2;\n  this.index_3 = index_3;\n}\n\ndefineClass(1682, $wnd.Function, {}, AbstractDataView$lambda$10$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_0 = function call_7(arg0){\n  return $sort(this.$$outer_0, this.th_1, this.column_2, this.index_3) , $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n;\n_.index_3 = 0;\nvar Lgwt_material_design_client_data_AbstractDataView$lambda$10$Type_2_classLit = createForClass('gwt.material.design.client.data', 'AbstractDataView/lambda$10$Type', 1682);\nfunction AbstractDataView$lambda$11$Type($$outer_0, th_1){\n  this.$$outer_0 = $$outer_0;\n  this.th_1 = th_1;\n}\n\ndefineClass(1684, $wnd.Function, {}, AbstractDataView$lambda$11$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_0 = function call_8(arg0){\n  return $lambda$11(this.$$outer_0, this.th_1);\n}\n;\nvar Lgwt_material_design_client_data_AbstractDataView$lambda$11$Type_2_classLit = createForClass('gwt.material.design.client.data', 'AbstractDataView/lambda$11$Type', 1684);\nfunction AbstractDataView$lambda$12$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1685, $wnd.Function, {}, AbstractDataView$lambda$12$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_2 = function call_9(arg0){\n  return $lambda$12(this.$$outer_0, arg0);\n}\n;\nvar Lgwt_material_design_client_data_AbstractDataView$lambda$12$Type_2_classLit = createForClass('gwt.material.design.client.data', 'AbstractDataView/lambda$12$Type', 1685);\nfunction AbstractDataView$lambda$13$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1686, $wnd.Function, {}, AbstractDataView$lambda$13$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_2 = function call_10(arg0){\n  return $lambda$13(this.$$outer_0, arg0);\n}\n;\nvar Lgwt_material_design_client_data_AbstractDataView$lambda$13$Type_2_classLit = createForClass('gwt.material.design.client.data', 'AbstractDataView/lambda$13$Type', 1686);\nfunction AbstractDataView$lambda$14$Type(select_0, rows_1){\n  this.select_0 = select_0;\n  this.rows_1 = rows_1;\n}\n\ndefineClass(1687, $wnd.Function, {}, AbstractDataView$lambda$14$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_3 = function call_11(arg0, arg1){\n  lambda$14(this.select_0, this.rows_1, arg1);\n}\n;\n_.select_0 = false;\nvar Lgwt_material_design_client_data_AbstractDataView$lambda$14$Type_2_classLit = createForClass('gwt.material.design.client.data', 'AbstractDataView/lambda$14$Type', 1687);\nfunction AbstractDataView$lambda$15$Type($$outer_0, models_1){\n  this.$$outer_0 = $$outer_0;\n  this.models_1 = models_1;\n}\n\ndefineClass(1688, $wnd.Function, {}, AbstractDataView$lambda$15$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_3 = function call_12(arg0, arg1){\n  $lambda$15(this.$$outer_0, this.models_1, arg1);\n}\n;\nvar Lgwt_material_design_client_data_AbstractDataView$lambda$15$Type_2_classLit = createForClass('gwt.material.design.client.data', 'AbstractDataView/lambda$15$Type', 1688);\nfunction AbstractDataView$lambda$16$Type($$outer_0, category_1){\n  this.$$outer_0 = $$outer_0;\n  this.category_1 = category_1;\n}\n\ndefineClass(1689, $wnd.Function, {}, AbstractDataView$lambda$16$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_1 = function call_13(arg0, arg1){\n  return $lambda$16(this.$$outer_0, this.category_1);\n}\n;\nvar Lgwt_material_design_client_data_AbstractDataView$lambda$16$Type_2_classLit = createForClass('gwt.material.design.client.data', 'AbstractDataView/lambda$16$Type', 1689);\nfunction AbstractDataView$lambda$17$Type($$outer_0, category_1){\n  this.$$outer_0 = $$outer_0;\n  this.category_1 = category_1;\n}\n\ndefineClass(1690, $wnd.Function, {}, AbstractDataView$lambda$17$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_1 = function call_14(arg0, arg1){\n  return $lambda$17(this.$$outer_0, this.category_1);\n}\n;\nvar Lgwt_material_design_client_data_AbstractDataView$lambda$17$Type_2_classLit = createForClass('gwt.material.design.client.data', 'AbstractDataView/lambda$17$Type', 1690);\nfunction AbstractDataView$lambda$18$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1669, 1, $intern_66, AbstractDataView$lambda$18$Type);\n_.onAttachOrDetach = function onAttachOrDetach_7(arg0){\n  this.$$outer_0.rendering = false;\n}\n;\nvar Lgwt_material_design_client_data_AbstractDataView$lambda$18$Type_2_classLit = createForClass('gwt.material.design.client.data', 'AbstractDataView/lambda$18$Type', 1669);\nfunction AbstractDataView$lambda$19$Type($$outer_0, recalculated_1, expandRow_2, expanding_3){\n  this.$$outer_0 = $$outer_0;\n  this.recalculated_1 = recalculated_1;\n  this.expandRow_2 = expandRow_2;\n  this.expanding_3 = expanding_3;\n}\n\ndefineClass(1678, $wnd.Function, {}, AbstractDataView$lambda$19$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_1 = function call_15(arg0, arg1){\n  return $lambda$19(this.$$outer_0, this.recalculated_1, this.expandRow_2, this.expanding_3);\n}\n;\n_.expanding_3 = false;\nvar Lgwt_material_design_client_data_AbstractDataView$lambda$19$Type_2_classLit = createForClass('gwt.material.design.client.data', 'AbstractDataView/lambda$19$Type', 1678);\nfunction AbstractDataView$lambda$2$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1672, $wnd.Function, {}, AbstractDataView$lambda$2$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_0 = function call_16(arg0){\n  return this.$$outer_0.refreshView() , $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n;\nvar Lgwt_material_design_client_data_AbstractDataView$lambda$2$Type_2_classLit = createForClass('gwt.material.design.client.data', 'AbstractDataView/lambda$2$Type', 1672);\nfunction AbstractDataView$lambda$20$Type(expansion_0){\n  this.expansion_0 = expansion_0;\n}\n\ndefineClass(1679, 1, {}, AbstractDataView$lambda$20$Type);\n_.execute_1 = function execute_34(){\n  $clinit_AbstractDataView();\n  this.expansion_0[0].toggleClass('expanded');\n}\n;\nvar Lgwt_material_design_client_data_AbstractDataView$lambda$20$Type_2_classLit = createForClass('gwt.material.design.client.data', 'AbstractDataView/lambda$20$Type', 1679);\nfunction AbstractDataView$lambda$3$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1673, $wnd.Function, {}, AbstractDataView$lambda$3$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_1 = function call_17(arg0, arg1){\n  return $lambda$3_1(this.$$outer_0, arg0);\n}\n;\nvar Lgwt_material_design_client_data_AbstractDataView$lambda$3$Type_2_classLit = createForClass('gwt.material.design.client.data', 'AbstractDataView/lambda$3$Type', 1673);\nfunction AbstractDataView$lambda$4$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1674, $wnd.Function, {}, AbstractDataView$lambda$4$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_1 = function call_18(arg0, arg1){\n  return $lambda$4_1(this.$$outer_0, arg0);\n}\n;\nvar Lgwt_material_design_client_data_AbstractDataView$lambda$4$Type_2_classLit = createForClass('gwt.material.design.client.data', 'AbstractDataView/lambda$4$Type', 1674);\nfunction AbstractDataView$lambda$5$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1675, $wnd.Function, {}, AbstractDataView$lambda$5$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_1 = function call_19(arg0, arg1){\n  return $lambda$5(this.$$outer_0, arg0);\n}\n;\nvar Lgwt_material_design_client_data_AbstractDataView$lambda$5$Type_2_classLit = createForClass('gwt.material.design.client.data', 'AbstractDataView/lambda$5$Type', 1675);\nfunction AbstractDataView$lambda$6$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1676, $wnd.Function, {}, AbstractDataView$lambda$6$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_4 = function call_20(arg0){\n  return $lambda$6(this.$$outer_0, arg0);\n}\n;\nvar Lgwt_material_design_client_data_AbstractDataView$lambda$6$Type_2_classLit = createForClass('gwt.material.design.client.data', 'AbstractDataView/lambda$6$Type', 1676);\nfunction AbstractDataView$lambda$7$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1677, $wnd.Function, {}, AbstractDataView$lambda$7$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_4 = function call_21(arg0){\n  return $lambda$7_0(this.$$outer_0, arg0);\n}\n;\nvar Lgwt_material_design_client_data_AbstractDataView$lambda$7$Type_2_classLit = createForClass('gwt.material.design.client.data', 'AbstractDataView/lambda$7$Type', 1677);\nfunction AbstractDataView$lambda$8$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1680, $wnd.Function, {}, AbstractDataView$lambda$8$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_0 = function call_22(arg0){\n  return $lambda$8(this.$$outer_0, arg0);\n}\n;\nvar Lgwt_material_design_client_data_AbstractDataView$lambda$8$Type_2_classLit = createForClass('gwt.material.design.client.data', 'AbstractDataView/lambda$8$Type', 1680);\nfunction AbstractDataView$lambda$9$Type($$outer_0, header_1){\n  this.$$outer_0 = $$outer_0;\n  this.header_1 = header_1;\n}\n\ndefineClass(1681, $wnd.Function, {}, AbstractDataView$lambda$9$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_0 = function call_23(arg0){\n  return $lambda$9(this.$$outer_0, this.header_1);\n}\n;\nvar Lgwt_material_design_client_data_AbstractDataView$lambda$9$Type_2_classLit = createForClass('gwt.material.design.client.data', 'AbstractDataView/lambda$9$Type', 1681);\nfunction $calculateRowHeight(this$static, row){\n  var element, rowHeight;\n  element = row.element;\n  if (element) {\n    rowHeight = (!element.$this && (element.$this = $wnd.$(($clinit_DOM() , element.element_0))) , element.$this).outerHeight(true);\n    rowHeight > 0 && rowHeight != this$static.calculatedRowHeight && (this$static.calculatedRowHeight = rowHeight);\n  }\n}\n\nfunction $drawCategory(category){\n  var subHeader;\n  if (category) {\n    subHeader = castTo(category.element, 155);\n    !subHeader && (subHeader = $render_5(category));\n    return subHeader;\n  }\n  return null;\n}\n\nfunction $drawColumn(row, context, rowValue, column, beforeIndex, visible){\n  var data_0, hideOn, sb, textAlign, wrapper;\n  data_0 = null;\n  if (!!row && rowValue != null) {\n    data_0 = $getColumn_2(row, beforeIndex);\n    if (!data_0) {\n      data_0 = new TableData;\n      $insert_0(row, data_0, ($clinit_DOM() , row.element_0), beforeIndex);\n    }\n     else {\n      $clear_1(data_0);\n    }\n    wrapper = new Div;\n    if (instanceOf(column, 169)) {\n      ($clinit_DOM() , wrapper.element_0).className = 'widget-cell';\n      $add_15(wrapper, $render_7(castTo(column, 169), rowValue));\n    }\n     else {\n      sb = new SafeHtmlBuilder;\n      column.render(context, rowValue, sb);\n      $setInnerHTML(($clinit_DOM() , wrapper.element_0), (new SafeHtmlString(sb.sb.string)).html_0);\n      wrapper.element_0.className = 'cell';\n    }\n    $add_1(data_0, wrapper, ($clinit_DOM() , data_0.element_0));\n    $setId_1((!data_0.idMixin && (data_0.idMixin = new IdMixin(data_0)) , data_0.idMixin), 'col' + beforeIndex);\n    $setDataAttribute(data_0, 'data-title', column.name_0);\n    hideOn = column.getHideOn();\n    !!hideOn && $setCssName((!data_0.hideOnMixin && (data_0.hideOnMixin = new CssNameMixin(data_0)) , data_0.hideOnMixin), hideOn);\n    textAlign = column.getTextAlign();\n    !!textAlign && $setCssName((!data_0.textAlignMixin && (data_0.textAlignMixin = new CssNameMixin(data_0)) , data_0.textAlignMixin), textAlign);\n    column.isNumeric() && setStyleName(data_0.element_0, 'numeric', true);\n    visible || (!data_0.$this && (data_0.$this = $wnd.$(data_0.element_0)) , data_0.$this).hide();\n  }\n  return data_0;\n}\n\nfunction $drawColumnHeader(this$static, column, header, index_0){\n  var hideOn, sortIcon, textAlign, th;\n  sortIcon = new MaterialIcon;\n  $setIconSize_1(sortIcon, this$static.sortIconSize);\n  th = new TableHeader_0(sortIcon);\n  $setId_1((!th.idMixin && (th.idMixin = new IdMixin(th)) , th.idMixin), 'col' + index_0);\n  $setHeader_0(th, header);\n  hideOn = column.getHideOn();\n  !!hideOn && $setCssName((!th.hideOnMixin && (th.hideOnMixin = new CssNameMixin(th)) , th.hideOnMixin), hideOn);\n  textAlign = column.getTextAlign();\n  !!textAlign && $setCssName((!th.textAlignMixin && (th.textAlignMixin = new CssNameMixin(th)) , th.textAlignMixin), textAlign);\n  column.isNumeric() && setStyleName(($clinit_DOM() , th.element_0), 'numeric', true);\n  return th;\n}\n\nfunction $drawRow(this$static, dataView, rowComponent, valueKey, columns, redraw){\n  var c, colIndex, colOffset, context, data_0, expand, expandIcon, row;\n  data_0 = rowComponent.data_0;\n  row = rowComponent.element;\n  if (!row) {\n    row = new TableRow_0;\n    ($clinit_DOM() , row.element_0).style['display'] = ($clinit_Style$Display() , 'none');\n    row.element_0.style['height'] = this$static.expectedRowHeight + 'px';\n    row.element_0.style['maxHeight'] = this$static.expectedRowHeight + 'px';\n    row.element_0.style['minHeight'] = this$static.expectedRowHeight + 'px';\n    row.element_0.className = 'data-row';\n    rowComponent.element = row;\n    dataView.selectionType == 0 || $add_44(row, this$static.drawSelectionCell());\n    colOffset = dataView.selectionType == 0?0:1;\n    for (c = 0; c < columns.array.length; c++) {\n      colIndex = c + colOffset;\n      context = new Cell$Context(rowComponent.index_0, colIndex, valueKey);\n      $drawColumn(row, context, data_0, (checkCriticalElementIndex(c, columns.array.length) , castTo(columns.array[c], 134)), colIndex, colIndex < dataView.headers.array.length && $$this(castTo($get_6(dataView.headers, colIndex), 201)).is(':visible'));\n    }\n    if (dataView.useRowExpansion) {\n      expand = new TableData;\n      $setId_1((!expand.idMixin && (expand.idMixin = new IdMixin(expand)) , expand.idMixin), 'colex');\n      expandIcon = new MaterialIcon;\n      $setId_1((!expandIcon.idMixin && (expandIcon.idMixin = new IdMixin(expandIcon)) , expandIcon.idMixin), 'expand');\n      expandIcon.element_0.style['width'] = '100%';\n      $setIconType_3(expandIcon, ($clinit_IconType() , KEYBOARD_ARROW_DOWN));\n      $setWaves(expandIcon, ($clinit_WavesType() , LIGHT));\n      expandIcon.element_0.style['cursor'] = ($clinit_Style$Cursor() , 'pointer');\n      $add_1(expand, expandIcon, expand.element_0);\n      $add_1(row, expand, row.element_0);\n    }\n  }\n   else {\n    if (redraw || rowComponent.redraw) {\n      colOffset = dataView.selectionType == 0?0:1;\n      for (c = 0; c < columns.array.length; c++) {\n        colIndex = c + colOffset;\n        context = new Cell$Context(rowComponent.index_0, colIndex, valueKey);\n        $drawColumn(row, context, rowComponent.data_0, (checkCriticalElementIndex(c, columns.array.length) , castTo(columns.array[c], 134)), colIndex, colIndex < dataView.headers.array.length && $$this(castTo($get_6(dataView.headers, colIndex), 201)).is(':visible'));\n      }\n      rowComponent.redraw = false;\n    }\n  }\n  $scheduleDeferred(($clinit_SchedulerImpl() , INSTANCE), new BaseRenderer$lambda$0$Type(this$static, rowComponent));\n  return row;\n}\n\nfunction $drawSortIcon(this$static, th, sortContext){\n  sortContext.sortDir == ($clinit_SortDir() , ASC)?$setIconType_3(th.sortIcon, this$static.sortAscIcon):$setIconType_3(th.sortIcon, this$static.sortDescIcon);\n}\n\nfunction BaseRenderer(){\n  getLogger(($ensureNamesAreInitialized(Lgwt_material_design_client_data_BaseRenderer_2_classLit) , Lgwt_material_design_client_data_BaseRenderer_2_classLit.typeName));\n  this.expectedRowHeight = this.calculatedRowHeight;\n  this.sortAscIcon = ($clinit_IconType() , ARROW_UPWARD);\n  this.sortDescIcon = ARROW_DOWNWARD;\n  this.sortIconSize = ($clinit_IconSize() , TINY);\n}\n\ndefineClass(409, 1, {}, BaseRenderer);\n_.drawSelectionCell = function drawSelectionCell(){\n  var checkBox;\n  checkBox = new TableData;\n  $setId_1((!checkBox.idMixin && (checkBox.idMixin = new IdMixin(checkBox)) , checkBox.idMixin), 'col0');\n  ($clinit_DOM() , checkBox.element_0).className = 'selection';\n  new MaterialCheckBox_0(checkBox.element_0);\n  return checkBox;\n}\n;\n_.calculatedRowHeight = 55;\n_.expectedRowHeight = 0;\nvar Lgwt_material_design_client_data_BaseRenderer_2_classLit = createForClass('gwt.material.design.client.data', 'BaseRenderer', 409);\nfunction BaseRenderer$lambda$0$Type($$outer_0, rowComponent_1){\n  this.$$outer_0 = $$outer_0;\n  this.rowComponent_1 = rowComponent_1;\n}\n\ndefineClass(1825, 1, {}, BaseRenderer$lambda$0$Type);\n_.execute_1 = function execute_35(){\n  $calculateRowHeight(this.$$outer_0, this.rowComponent_1);\n}\n;\nvar Lgwt_material_design_client_data_BaseRenderer$lambda$0$Type_2_classLit = createForClass('gwt.material.design.client.data', 'BaseRenderer/lambda$0$Type', 1825);\nfunction DataSort(itemComparator, direction){\n  this.comparator = itemComparator;\n  this.direction_0 = direction;\n}\n\ndefineClass(569, 1, $intern_9, DataSort);\n_.compare = function compare_3(o1, o2){\n  var val;\n  val = this.comparator.compare(o1, o2);\n  return this.direction_0 == ($clinit_SortDir() , ASC)?val:-val;\n}\n;\nvar Lgwt_material_design_client_data_DataSort_2_classLit = createForClass('gwt.material.design.client.data', 'DataSort', 569);\nfunction $reverse(this$static){\n  this$static.sortDir = this$static.sortDir == ($clinit_SortDir() , ASC)?DESC:ASC;\n}\n\nfunction $setSortColumn(this$static, sortColumn){\n  $removeSortIcon(this$static.tableHeader);\n  $removeStyleName(this$static.tableHeader, 'selected');\n  this$static.sortDir = ($clinit_SortDir() , ASC);\n  this$static.sortColumn = null;\n  this$static.sortColumn = sortColumn;\n}\n\nfunction $setTableHeader(this$static, tableHeader){\n  !tableHeader.sortIcon && $setSortIcon(tableHeader, new MaterialIcon);\n  this$static.tableHeader = tableHeader;\n}\n\nfunction SortContext(sortColumn, tableHeader){\n  this.sortDir = ($clinit_SortDir() , ASC);\n  this.sortColumn = sortColumn;\n  this.sortColumn.isDefaultSortAscending || (this.sortDir = DESC);\n  !tableHeader.sortIcon && $setSortIcon(tableHeader, new MaterialIcon);\n  this.tableHeader = tableHeader;\n}\n\ndefineClass(1879, 1, {}, SortContext);\nvar Lgwt_material_design_client_data_SortContext_2_classLit = createForClass('gwt.material.design.client.data', 'SortContext', 1879);\nfunction $clinit_SortDir(){\n  $clinit_SortDir = emptyMethod;\n  ASC = new SortDir$1;\n  DESC = new SortDir$2;\n}\n\nfunction SortDir(enum$name, enum$ordinal){\n  Enum.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_60(){\n  $clinit_SortDir();\n  return stampJavaTypeInfo(getClassLiteralForArray(Lgwt_material_design_client_data_SortDir_2_classLit, 1), $intern_16, 275, 0, [ASC, DESC]);\n}\n\ndefineClass(275, 23, $intern_120);\nvar ASC, DESC;\nvar Lgwt_material_design_client_data_SortDir_2_classLit = createForEnum('gwt.material.design.client.data', 'SortDir', 275, values_60);\nfunction SortDir$1(){\n  SortDir.call(this, 'ASC', 0);\n}\n\ndefineClass(1974, 275, $intern_120, SortDir$1);\nvar Lgwt_material_design_client_data_SortDir$1_2_classLit = createForEnum('gwt.material.design.client.data', 'SortDir/1', 1974, null);\nfunction SortDir$2(){\n  SortDir.call(this, 'DESC', 1);\n}\n\ndefineClass(1975, 275, $intern_120, SortDir$2);\nvar Lgwt_material_design_client_data_SortDir$2_2_classLit = createForEnum('gwt.material.design.client.data', 'SortDir/2', 1975, null);\nfunction StandardDataView(){\n  $clinit_AbstractDataView();\n  AbstractDataView.call(this);\n}\n\ndefineClass(2091, 330, $intern_26, StandardDataView);\nvar Lgwt_material_design_client_data_StandardDataView_2_classLit = createForClass('gwt.material.design.client.data', 'StandardDataView', 2091);\nfunction $clearElement(this$static){\n  if (this$static.element) {\n    this$static.element.removeFromParent();\n    this$static.element = null;\n  }\n}\n\nfunction $setElement_1(this$static, element){\n  this$static.element = element;\n}\n\nfunction Component(element, redraw){\n  this.element = element;\n  this.redraw = redraw;\n}\n\ndefineClass(153, 1, {153:1});\n_.clearElement = function clearElement(){\n  $clearElement(this);\n}\n;\n_.redraw = false;\nvar Lgwt_material_design_client_data_component_Component_2_classLit = createForClass('gwt.material.design.client.data.component', 'Component', 153);\nfunction $render_5(this$static){\n  var element;\n  element = castTo(this$static.element, 155);\n  if (!element) {\n    element = new TableSubHeader(this$static);\n    $copy(element, castTo(this$static.element, 155));\n    this$static.element = element;\n  }\n  this$static.render_3(element);\n  return element;\n}\n\nfunction CategoryComponent(category){\n  this.category = category;\n}\n\ndefineClass(117, 153, $intern_121, CategoryComponent);\n_.equals = function equals_18(o){\n  var that;\n  if (this === o)\n    return true;\n  if (o == null || this.___clazz != getClass__Ljava_lang_Class___devirtual$(o))\n    return false;\n  that = castTo(o, 117);\n  return $equals_2(this.category, that.category);\n}\n;\n_.hashCode = function hashCode_20(){\n  return getHashCode_0(this.category);\n}\n;\n_.render_3 = function render_8(subheader){\n}\n;\n_.currentIndex = -1;\n_.rowCount = -1;\nvar Lgwt_material_design_client_data_component_CategoryComponent_2_classLit = createForClass('gwt.material.design.client.data.component', 'CategoryComponent', 117);\nfunction CategoryComponent$OrphanCategoryComponent(){\n  CategoryComponent.call(this, null);\n}\n\ndefineClass(255, 117, {117:1, 255:1, 153:1}, CategoryComponent$OrphanCategoryComponent);\n_.render_3 = function render_9(subheader){\n  $setText_13(subheader.nameLbl, 'No Category');\n}\n;\nvar Lgwt_material_design_client_data_component_CategoryComponent$OrphanCategoryComponent_2_classLit = createForClass('gwt.material.design.client.data.component', 'CategoryComponent/OrphanCategoryComponent', 255);\nfunction $$init_4(this$static){\n}\n\nfunction $add_27(this$static, t){\n  return !(this$static.maxSize != -1 && this$static.array.length == this$static.maxSize) && (this$static.array[this$static.array.length] = t , true);\n}\n\nfunction $clear_7(this$static){\n  $clearElements(this$static);\n  this$static.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 4, 1);\n}\n\nfunction $clearElements(this$static){\n  var component, component$iterator;\n  for (component$iterator = new ArrayList$1(this$static); component$iterator.i < component$iterator.this$01.array.length;) {\n    component = castTo($next_7(component$iterator), 153);\n    component.clearElement();\n  }\n}\n\nfunction $remove_15(this$static, index_0){\n  var component;\n  component = (checkCriticalElementIndex(index_0, this$static.array.length) , castTo(this$static.array[index_0], 153));\n  !!component && component.clearElement();\n  return castTo($remove_13(this$static, index_0), 153);\n}\n\nfunction Components_0(){\n  ArrayList.call(this);\n  $$init_4(this);\n}\n\nfunction Components_1(maxSize){\n  ArrayList.call(this);\n  $$init_4(this);\n  this.maxSize = maxSize;\n}\n\nfunction Components_2(components){\n  Components_3.call(this, components, null);\n}\n\nfunction Components_3(components, clone){\n  var cloned, component, component$iterator;\n  ArrayList_1.call(this, components);\n  if (clone) {\n    cloned = new Components_0;\n    for (component$iterator = new ArrayList$1(this); component$iterator.i < component$iterator.this$01.array.length;) {\n      component = castTo($next_7(component$iterator), 153);\n      $add_27(cloned, new RowComponent(component));\n    }\n    this.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 4, 1);\n    !(this.maxSize != -1 && this.array.length == this.maxSize) && (this.maxSize == -1 || cloned.array.length + this.array.length <= this.maxSize) && $addAll_0(this, cloned);\n  }\n}\n\ndefineClass(237, 43, $intern_97, Components_0, Components_1, Components_2, Components_3);\n_.add_1 = function add_30(t){\n  return $add_27(this, castTo(t, 153));\n}\n;\n_.remove_2 = function remove_22(index_0){\n  return $remove_15(this, index_0);\n}\n;\n_.clear_0 = function clear_12(){\n  $clear_7(this);\n}\n;\n_.maxSize = -1;\nvar Lgwt_material_design_client_data_component_Components_2_classLit = createForClass('gwt.material.design.client.data.component', 'Components', 237);\nfunction $setIndex(this$static, index_0){\n  this$static.index_0 = index_0;\n}\n\nfunction RowComponent(clone){\n  Component.call(this, clone.element, clone.redraw);\n  this.data_0 = clone.data_0;\n  this.category = clone.category;\n}\n\nfunction RowComponent_0(data_0, category){\n  this.data_0 = data_0;\n  this.category = category;\n}\n\ndefineClass(101, 153, {153:1, 101:1}, RowComponent, RowComponent_0);\n_.clearElement = function clearElement_0(){\n  var next, row;\n  row = this.element;\n  !!row && (next = $(this.element).next() , next.is('tr.expansion') && next.remove());\n  $clearElement(this);\n}\n;\n_.index_0 = 0;\nvar Lgwt_material_design_client_data_component_RowComponent_2_classLit = createForClass('gwt.material.design.client.data.component', 'RowComponent', 101);\nfunction CategoryComponentFactory(){\n}\n\ndefineClass(1822, 1, {}, CategoryComponentFactory);\n_.generate = function generate(categoryName){\n  return categoryName != null?new CategoryComponent(categoryName):new CategoryComponent$OrphanCategoryComponent;\n}\n;\nvar Lgwt_material_design_client_data_factory_CategoryComponentFactory_2_classLit = createForClass('gwt.material.design.client.data.factory', 'CategoryComponentFactory', 1822);\nfunction RowComponentFactory(){\n}\n\ndefineClass(1820, 1, {}, RowComponentFactory);\n_.generate_0 = function generate_0(model){\n  return new RowComponent_0(model, this.getCategory(model));\n}\n;\n_.getCategory = function getCategory(model){\n  return model != null && instanceOf(model, 98)?castTo(castTo(model, 2241), 98).category:null;\n}\n;\nvar Lgwt_material_design_client_data_factory_RowComponentFactory_2_classLit = createForClass('gwt.material.design.client.data.factory', 'RowComponentFactory', 1820);\nfunction gwt_material_design_client_data_AbstractDataView$$__$$gwt_material_design_client_data_component_Components$Clone$$__$$static$$gwt_material_design_client_data_component_RowComponent$$RowComponent__Lgwt_material_design_client_data_component_RowComponent_2V$Type(){\n}\n\ndefineClass(1683, 1, {}, gwt_material_design_client_data_AbstractDataView$$__$$gwt_material_design_client_data_component_Components$Clone$$__$$static$$gwt_material_design_client_data_component_RowComponent$$RowComponent__Lgwt_material_design_client_data_component_RowComponent_2V$Type);\nvar Lgwt_material_design_client_data_gwt_1material_1design_1client_1data_1AbstractDataView$$_1_1$$gwt_1material_1design_1client_1data_1component_1Components$Clone$$_1_1$$static$$gwt_1material_1design_1client_1data_1component_1RowComponent$$RowComponent_1_1Lgwt_1material_1design_1client_1data_1component_1RowComponent_12V$Type_2_classLit = createForClass('gwt.material.design.client.data', 'RowComponent/design_client_data_AbstractDataView$$__$$gwt_material_design_client_data_component_Components$Clone$$__$$static$$gwt_material_design_client_data_component_RowComponent$$RowComponent__Lgwt_material_design_client_data_component_RowComponent_2V$Type', 1683);\nfunction $addCache(this$static, startIndex, data_0){\n  var cacheOffset, i, i0, value_0;\n  cacheOffset = max_1(0, startIndex - this$static.array.length);\n  for (i0 = 0; i0 < cacheOffset; i0++) {\n    this$static.array[this$static.array.length] = null;\n  }\n  for (i = startIndex; i < startIndex + data_0.array.length; i++) {\n    value_0 = (checkCriticalElementIndex(i - startIndex, data_0.array.length) , data_0.array[i - startIndex]);\n    i < this$static.array.length?$set_1(this$static, i, value_0):(this$static.array[this$static.array.length] = value_0 , true);\n  }\n}\n\nfunction $getCache(this$static, startIndex, viewSize){\n  var cache, data_0, end, i, size_0;\n  size_0 = this$static.array.length;\n  end = startIndex + viewSize;\n  cache = new ArrayList;\n  if (startIndex < size_0 && end <= size_0) {\n    for (i = startIndex; i < end; i++) {\n      data_0 = (checkCriticalElementIndex(i, this$static.array.length) , this$static.array[i]);\n      if (data_0 != null) {\n        cache.array[cache.array.length] = data_0;\n      }\n       else {\n        cache.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 4, 1);\n        break;\n      }\n    }\n  }\n  return cache;\n}\n\nfunction InfiniteDataCache(){\n  ArrayList.call(this);\n}\n\ndefineClass(1753, 43, $intern_97, InfiniteDataCache);\nvar Lgwt_material_design_client_data_infinite_InfiniteDataCache_2_classLit = createForClass('gwt.material.design.client.data.infinite', 'InfiniteDataCache', 1753);\nfunction $load_0(dataView, startIndex, viewSize){\n  $load_1(dataView, startIndex, viewSize, $getOpenCategories(dataView));\n}\n\nfunction $clinit_InfiniteDataView(){\n  $clinit_InfiniteDataView = emptyMethod;\n  $clinit_AbstractDataView();\n  getLogger(($ensureNamesAreInitialized(Lgwt_material_design_client_data_infinite_InfiniteDataView_2_classLit) , Lgwt_material_design_client_data_infinite_InfiniteDataView_2_classLit.typeName));\n}\n\nfunction $doLoad(this$static){\n  this$static.loading = true;\n  if (!!this$static.loaderCache && this$static.loaderCache.array.length != 0) {\n    $loaded_0(this$static, this$static.loaderIndex, this$static.loaderCache);\n    this$static.loaderCache.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 4, 1);\n    this$static.loaderCache = null;\n  }\n   else {\n    $scheduleFinally(($clinit_SchedulerImpl() , INSTANCE), new InfiniteDataView$lambda$3$Type(this$static));\n    $load_0(this$static, this$static.loaderIndex, this$static.loaderSize);\n  }\n}\n\nfunction $getPassedCategories(this$static){\n  var category, category$iterator, passed, scrollTop;\n  passed = new ArrayList;\n  scrollTop = this$static.tableBody.scrollTop();\n  for (category$iterator = new ArrayList$1(this$static.categories); category$iterator.i < category$iterator.this$01.array.length;) {\n    category = castTo($next_7(category$iterator), 117);\n    if ($isCategoryEmpty(this$static, category) && scrollTop > this$static.renderer.expectedRowHeight + $$this(this$static.thead).height()) {\n      passed.array[passed.array.length] = category;\n    }\n     else {\n      return passed;\n    }\n  }\n  return new ArrayList;\n}\n\nfunction $getVisibleRowCapacity(this$static){\n  var calcHeight, rh, rows_0, visibleHeight;\n  rh = (this$static.rows_0.array.length == 0 || $calculateRowHeight(this$static.renderer, castTo($get_6(this$static.rows_0, 0), 101)) , this$static.renderer.calculatedRowHeight);\n  visibleHeight = this$static.tableBody.height() - this$static.topPanel.height() - $$this(this$static.headerRow).height();\n  rows_0 = round_int(visibleHeight < 1?0:Math.floor(visibleHeight / rh));\n  calcHeight = rh * rows_0;\n  while (calcHeight < visibleHeight) {\n    ++rows_0;\n    calcHeight = rh * rows_0;\n  }\n  return rows_0 + (this$static.useCategories?this$static.categories.array.length:1);\n}\n\nfunction $lambda$0_5(this$static){\n  this$static.dataCache.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 4, 1);\n  $updateRows(this$static, this$static.viewIndex, true);\n  this$static.forceScroll = true;\n  return $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n\nfunction $lambda$1_1(this$static){\n  this$static.dataCache.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 4, 1);\n  $updateRows(this$static, this$static.viewIndex, true);\n  this$static.forceScroll = true;\n  return $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n\nfunction $lambda$4_2(this$static, loadMask_1){\n  loadMask_1 && !!this$static.maskElement && this$static.maskElement.height(this$static.bufferBottom.outerHeight(true) + this$static.bufferTop.outerHeight(true) + this$static.tableBody.outerHeight(true) + $intern_13 + 'px');\n}\n\nfunction $loaded(this$static, startIndex, data_0, totalRows, cacheData){\n  var model, model$iterator, row;\n  this$static.totalRows = totalRows;\n  $setVisibleRange_1(this$static, new Range_0(startIndex, this$static.loaderSize), false);\n  cacheData && $addCache(this$static.dataCache, startIndex, data_0);\n  $setRowData_0(this$static, startIndex, data_0);\n  this$static.display_0.dataView.setLoadMask(false);\n  this$static.loading = false;\n  if (this$static.forceScroll) {\n    this$static.forceScroll = false;\n    $updateRows(this$static, round_int(ceil_0(this$static.tableBody.scrollTop() / (this$static.rows_0.array.length == 0 || $calculateRowHeight(this$static.renderer, castTo($get_6(this$static.rows_0, 0), 101)) , this$static.renderer.calculatedRowHeight) | 0)), false);\n  }\n  for (model$iterator = new ArrayList$1(this$static.selectedModels); model$iterator.i < model$iterator.this$01.array.length;) {\n    model = $next_7(model$iterator);\n    row = $getRowElementByModel(this$static, model);\n    !!row && $selectRow(this$static, row, false);\n  }\n}\n\nfunction $loaded_0(this$static, startIndex, data_0){\n  $loaded(this$static, startIndex, data_0, this$static.totalRows, false);\n}\n\nfunction $onScrollY(this$static){\n  var index_0;\n  if (!this$static.rendering) {\n    index_0 = round_int(ceil_0(this$static.tableBody.scrollTop() / (this$static.rows_0.array.length == 0 || $calculateRowHeight(this$static.renderer, castTo($get_6(this$static.rows_0, 0), 101)) , this$static.renderer.calculatedRowHeight) | 0));\n    (index_0 == 0 || index_0 != this$static.viewIndex) && (this$static.viewIndex = min_1(index_0, max_1(0, this$static.totalRows - this$static.viewSize)) , $requestData(this$static, this$static.viewIndex, true));\n  }\n  return $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n\nfunction $renderRows_0(this$static, rows_0){\n  var category, category$iterator, category$iterator0, hidden, hiddenCategory, hiddenCategory$iterator, lastHidden, newCatCount, prevCategories, range, reach;\n  prevCategories = this$static.categories.array.length;\n  $renderRows(this$static, rows_0);\n  if (this$static.useCategories) {\n    newCatCount = this$static.categories.array.length - prevCategories;\n    if (newCatCount != 0) {\n      $setVisibleRange_1(this$static, new Range_0(this$static.viewIndex, this$static.viewSize - newCatCount), false);\n      $setViewSize(this$static, this$static.range.length_0);\n    }\n    lastHidden = new ArrayList;\n    for (category$iterator0 = new ArrayList$1(this$static.categories); category$iterator0.i < category$iterator0.this$01.array.length;) {\n      category = castTo($next_7(category$iterator0), 117);\n      !!category.element && !!category.element.parent_1 && $setVisible_1(castTo(category.element, 155), true);\n      hidden = false;\n      if ($isCategoryEmpty(this$static, category)) {\n        range = this$static.range;\n        reach = range.start_0 + range.length_0;\n        if (reach < this$static.totalRows) {\n          !!category.element && !!category.element.parent_1 && $setVisible_1(castTo(category.element, 155), false);\n          lastHidden.array[lastHidden.array.length] = category;\n          hidden = true;\n        }\n      }\n      if (!hidden) {\n        for (hiddenCategory$iterator = new ArrayList$1(lastHidden); hiddenCategory$iterator.i < hiddenCategory$iterator.this$01.array.length;) {\n          hiddenCategory = castTo($next_7(hiddenCategory$iterator), 117);\n          !!hiddenCategory.element && !!hiddenCategory.element.parent_1 && $setVisible_1(castTo(hiddenCategory.element, 155), true);\n        }\n      }\n    }\n    for (category$iterator = new ArrayList$1($getPassedCategories(this$static)); category$iterator.i < category$iterator.this$01.array.length;) {\n      category = castTo($next_7(category$iterator), 117);\n      !!category.element && !!category.element.parent_1 && $setVisible_1(castTo(category.element, 155), false);\n    }\n    this$static.subheaderLib.recalculate(true);\n  }\n}\n\nfunction $requestData(this$static, index_0, checkCache){\n  var cachedData;\n  if (this$static.loading) {\n    return false;\n  }\n  this$static.loaderIndex = max_1(0, index_0 - this$static.indexOffset);\n  this$static.loaderSize = this$static.viewSize + this$static.indexOffset;\n  !this$static.loaderTask && (this$static.loaderTask = new InfiniteDataView$3(this$static));\n  if (checkCache) {\n    cachedData = $getCache(this$static.dataCache, this$static.loaderIndex, this$static.loaderSize);\n    cachedData.array.length == 0 || (this$static.loaderCache = cachedData);\n  }\n  $delay(this$static.loaderTask, this$static.loaderDelay);\n  return true;\n}\n\nfunction $setViewSize(this$static, viewSize){\n  this$static.viewSize = viewSize;\n}\n\nfunction $updateRows(this$static, newIndex, reload){\n  this$static.viewIndex = min_1(newIndex, max_1(0, this$static.totalRows - this$static.viewSize));\n  $requestData(this$static, this$static.viewIndex, !reload);\n}\n\nfunction InfiniteDataView(){\n  $clinit_InfiniteDataView();\n  AbstractDataView.call(this);\n  this.viewSize = -1;\n  this.dynamicView = true;\n  this.indexOffset = 10;\n  this.loaderDelay = 200;\n  this.selectedModels = new ArrayList;\n  this.dataCache = new InfiniteDataCache;\n  this.viewSize = -1;\n  this.totalRows = 20;\n}\n\ndefineClass(398, 330, {13:1, 398:1}, InfiniteDataView);\n_.addCategory = function addCategory_0(category){\n  $addCategory(this, category);\n  $setVisibleRange_1(this, new Range_0(this.viewIndex, this.viewSize + 1), false);\n  $setViewSize(this, this.range.length_0);\n}\n;\n_.doSort = function doSort_0(sortContext, rows_0){\n  return true;\n}\n;\n_.getSelectedRowModels = function getSelectedRowModels_0(visibleOnly){\n  return visibleOnly?$getSelectedRowModels(this, true):this.selectedModels;\n}\n;\n_.onLoaded = function onLoaded_0(){\n  $setRenderer(this, new InfiniteRenderer);\n}\n;\n_.refreshView = function refreshView_0(){\n  var rangeStart;\n  this.redraw && $renderRows_0(this, this.rows_0);\n  rangeStart = this.range.start_0;\n  $setVisibleRange_1(this, new Range_0(rangeStart, this.dynamicView?$getVisibleRowCapacity(this):this.viewSize), false);\n  $setViewSize(this, this.range.length_0);\n  $updateRows(this, this.viewIndex, true);\n  this.forceScroll = true;\n}\n;\n_.render_2 = function render_10(components){\n  var bottomHeight, calcRowHeight, categoryMod, topHeight;\n  calcRowHeight = (this.rows_0.array.length == 0 || $calculateRowHeight(this.renderer, castTo($get_6(this.rows_0, 0), 101)) , this.renderer.calculatedRowHeight);\n  topHeight = this.loaderIndex * calcRowHeight;\n  this.bufferTop.height(topHeight);\n  categoryMod = this.useCategories?this.categories.array.length:0;\n  bottomHeight = (this.totalRows + categoryMod) * calcRowHeight - (topHeight - calcRowHeight);\n  this.bufferBottom.height(bottomHeight);\n  $render_4(this, components);\n}\n;\n_.renderRows = function renderRows_0(rows_0){\n  $renderRows_0(this, rows_0);\n}\n;\n_.setLoadMask = function setLoadMask_0(loadMask){\n  if (loadMask || !this.forceScroll) {\n    $setLoadMask(this, loadMask);\n    $scheduleDeferred(($clinit_SchedulerImpl() , INSTANCE), new InfiniteDataView$lambda$4$Type(this, loadMask));\n  }\n}\n;\n_.setup_0 = function setup_0(scaffolding){\n  var topWrapper;\n  $setup(this, scaffolding);\n  this.dynamicView = this.viewSize == -1;\n  if (this.dynamicView) {\n    $setVisibleRange_1(this, new Range_0(0, $getVisibleRowCapacity(this)), false);\n    $setViewSize(this, this.range.length_0);\n  }\n  topWrapper = $wnd.$('<div>');\n  this.bufferTop = $wnd.$(\"<div class='bufferTop'>\");\n  topWrapper.append(this.bufferTop);\n  $insert_4(this.tbody, new MaterialWidget_0(topWrapper.get(0)), 0);\n  this.bufferBottom = $wnd.$(\"<div class='bufferBottom'>\");\n  this.tableBody.append(this.bufferBottom);\n  this.container.off('category-opened');\n  this.container.on('category-opened', makeLambdaFunction(InfiniteDataView$lambda$0$Type.prototype.call_1, new InfiniteDataView$lambda$0$Type(this)));\n  this.container.off('category-closed');\n  this.container.on('category-closed', makeLambdaFunction(InfiniteDataView$lambda$1$Type.prototype.call_1, new InfiniteDataView$lambda$1$Type(this)));\n  this.container.off('row-select');\n  this.container.on('row-select', makeLambdaFunction(InfiniteDataView$1.prototype.call_5, new InfiniteDataView$1(this)));\n  this.container.off('select-all');\n  this.container.on('select-all', makeLambdaFunction(InfiniteDataView$2.prototype.call_5, new InfiniteDataView$2(this)));\n  $wnd.$(this.tableBody).scrollY(this.name_0, makeLambdaFunction(InfiniteDataView$lambda$2$Type.prototype.call_6, new InfiniteDataView$lambda$2$Type(this)));\n}\n;\n_.dynamicView = false;\n_.forceScroll = false;\n_.indexOffset = 0;\n_.loaderDelay = 0;\n_.loaderIndex = 0;\n_.loaderSize = 0;\n_.loading = false;\n_.viewIndex = 0;\n_.viewSize = 0;\nvar Lgwt_material_design_client_data_infinite_InfiniteDataView_2_classLit = createForClass('gwt.material.design.client.data.infinite', 'InfiniteDataView', 398);\nfunction $call(this$static, model, selected){\n  unsafeCast((checkCriticalNotNull(selected) , selected))?$indexOf_0(this$static.this$01.selectedModels, model, 0) != -1 || $add_26(this$static.this$01.selectedModels, model):$remove_14(this$static.this$01.selectedModels, model);\n  return $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n\nfunction InfiniteDataView$1(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1662, $wnd.Function, {}, InfiniteDataView$1);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_5 = function call_24(e, model, element, selected){\n  return $call(this, model, (castToJso(element) , castToBoolean(selected)));\n}\n;\nvar Lgwt_material_design_client_data_infinite_InfiniteDataView$1_2_classLit = createForClass('gwt.material.design.client.data.infinite', 'InfiniteDataView/1', 1662);\nfunction $call_0(this$static, models, selected){\n  var model, model$iterator;\n  for (model$iterator = models.iterator(); model$iterator.hasNext_0();) {\n    model = model$iterator.next_1();\n    unsafeCast((checkCriticalNotNull(selected) , selected))?$indexOf_0(this$static.this$01.selectedModels, model, 0) != -1 || $add_26(this$static.this$01.selectedModels, model):$remove_14(this$static.this$01.selectedModels, model);\n  }\n  return $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n\nfunction InfiniteDataView$2(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1663, $wnd.Function, {}, InfiniteDataView$2);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_5 = function call_25(e, models, elements, selected){\n  return $call_0(this, castTo(models, 94), (castTo(elements, 94) , castToBoolean(selected)));\n}\n;\nvar Lgwt_material_design_client_data_infinite_InfiniteDataView$2_2_classLit = createForClass('gwt.material.design.client.data.infinite', 'InfiniteDataView/2', 1663);\nfunction InfiniteDataView$3(this$0){\n  this.this$01 = this$0;\n  this.timer = new InterruptibleTask$1(this);\n}\n\ndefineClass(1666, 1665, {}, InfiniteDataView$3);\nvar Lgwt_material_design_client_data_infinite_InfiniteDataView$3_2_classLit = createForClass('gwt.material.design.client.data.infinite', 'InfiniteDataView/3', 1666);\nfunction InfiniteDataView$lambda$0$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1660, $wnd.Function, {}, InfiniteDataView$lambda$0$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_1 = function call_26(arg0, arg1){\n  return $lambda$0_5(this.$$outer_0);\n}\n;\nvar Lgwt_material_design_client_data_infinite_InfiniteDataView$lambda$0$Type_2_classLit = createForClass('gwt.material.design.client.data.infinite', 'InfiniteDataView/lambda$0$Type', 1660);\nfunction InfiniteDataView$lambda$1$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1661, $wnd.Function, {}, InfiniteDataView$lambda$1$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_1 = function call_27(arg0, arg1){\n  return $lambda$1_1(this.$$outer_0);\n}\n;\nvar Lgwt_material_design_client_data_infinite_InfiniteDataView$lambda$1$Type_2_classLit = createForClass('gwt.material.design.client.data.infinite', 'InfiniteDataView/lambda$1$Type', 1661);\nfunction InfiniteDataView$lambda$2$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1664, $wnd.Function, {}, InfiniteDataView$lambda$2$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_6 = function call_28(arg0, arg1){\n  return $onScrollY(this.$$outer_0);\n}\n;\nvar Lgwt_material_design_client_data_infinite_InfiniteDataView$lambda$2$Type_2_classLit = createForClass('gwt.material.design.client.data.infinite', 'InfiniteDataView/lambda$2$Type', 1664);\nfunction InfiniteDataView$lambda$3$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1667, 1, {}, InfiniteDataView$lambda$3$Type);\n_.execute_1 = function execute_36(){\n  this.$$outer_0.display_0.dataView.setLoadMask(true);\n}\n;\nvar Lgwt_material_design_client_data_infinite_InfiniteDataView$lambda$3$Type_2_classLit = createForClass('gwt.material.design.client.data.infinite', 'InfiniteDataView/lambda$3$Type', 1667);\nfunction InfiniteDataView$lambda$4$Type($$outer_0, loadMask_1){\n  this.$$outer_0 = $$outer_0;\n  this.loadMask_1 = loadMask_1;\n}\n\ndefineClass(1668, 1, {}, InfiniteDataView$lambda$4$Type);\n_.execute_1 = function execute_37(){\n  $lambda$4_2(this.$$outer_0, this.loadMask_1);\n}\n;\n_.loadMask_1 = false;\nvar Lgwt_material_design_client_data_infinite_InfiniteDataView$lambda$4$Type_2_classLit = createForClass('gwt.material.design.client.data.infinite', 'InfiniteDataView/lambda$4$Type', 1668);\nfunction InfiniteRenderer(){\n  BaseRenderer.call(this);\n}\n\ndefineClass(1976, 409, {}, InfiniteRenderer);\nvar Lgwt_material_design_client_data_infinite_InfiniteRenderer_2_classLit = createForClass('gwt.material.design.client.data.infinite', 'InfiniteRenderer', 1976);\nfunction create_5(scrollableArea){\n  var obj;\n  obj = {};\n  obj.scrollableArea = scrollableArea;\n  return obj;\n}\n\nfunction Span_1(string){\n  $clinit_MaterialWidget();\n  Span.call(this);\n  $setInnerHTML(($clinit_DOM() , this.element_0), string);\n}\n\ndefineClass(67, 22, $intern_71, Span_1);\nfunction $setText_7(this$static, text_0){\n  $setInnerHTML(($clinit_DOM() , this$static.element_0), text_0);\n}\n\nfunction MaterialBadge_0(){\n  $clinit_MaterialWidget();\n  MaterialBadge.call(this);\n  ($clinit_DOM() , this.element_0).innerHTML = 'This content';\n  $setTextColor_0((!this.colorsMixin_0 && (this.colorsMixin_0 = new ColorsMixin(this)) , this.colorsMixin_0), 'white');\n  $setBackgroundColor_0((!this.colorsMixin_0 && (this.colorsMixin_0 = new ColorsMixin(this)) , this.colorsMixin_0), 'blue');\n}\n\ndefineClass(187, 67, $intern_71, MaterialBadge_0);\nfunction MaterialButton_1(type_0, icon){\n  $clinit_MaterialWidget();\n  AbstractButton_1.call(this, type_0, 'was made');\n  $$init_1(this);\n  this.icon_0 = icon;\n  !!this.icon_0 && !this.icon_0.attached && $insert_4(this, this.icon_0, 0);\n}\n\ndefineClass(28, 184, $intern_98, MaterialButton_1);\nfunction MaterialCheckBox_0(elem){\n  $clinit_FocusWidget();\n  BaseCheckBox.call(this, elem);\n  new GridMixin(this);\n}\n\ndefineClass(75, 418, $intern_122, MaterialCheckBox_0);\nfunction $setAlignment_0(this$static, alignment){\n  this$static.alignment_0 = alignment.cssClass;\n}\n\nfunction MaterialDropDown_0(activatorElem){\n  MaterialDropDown.call(this);\n  $setAttribute(activatorElem, 'data-activates', $getElement((!this.idMixin && (this.idMixin = new IdMixin(this)) , this.idMixin).uiObject).id);\n  this.activatorElem = activatorElem;\n}\n\nfunction MaterialDropDown_1(activator){\n  $clinit_MaterialWidget();\n  MaterialDropDown_0.call(this, ($clinit_DOM() , activator.element_0));\n}\n\ndefineClass(136, 114, $intern_102, MaterialDropDown_1);\nfunction $getIconType(this$static){\n  return $clinit_IconType() , castTo(fromStyleName(($clinit_DOM() , this$static.element_0).textContent, Lgwt_material_design_client_constants_IconType_2_classLit, DEFAULT_2), 4);\n}\n\nfunction $setInnerText_0(this$static){\n  ($clinit_DOM() , this$static.element_0).textContent = '';\n}\n\nfunction $setText_13(this$static, txt){\n  $setData(this$static.text_0, txt);\n}\n\nfunction Text_0(){\n  $clinit_UIObject();\n  this.text_0 = $doc.createTextNode('Subheader');\n  $setElement(this, this.text_0);\n}\n\ndefineClass(2104, 21, $intern_37, Text_0);\n_.isAttached_0 = function isAttached_1(){\n  return this.isAttached;\n}\n;\n_.onAttach = function onAttach_9(){\n  if (this.isAttached) {\n    throw new IllegalStateException_0('Text is already attached!');\n  }\n  this.isAttached = true;\n  fire_0(this, this.isAttached);\n}\n;\n_.onDetach = function onDetach_8(){\n  if (!this.isAttached) {\n    throw new IllegalStateException_0('Text is not attached!');\n  }\n  this.isAttached = false;\n  fire_0(this, false);\n}\n;\n_.isAttached = false;\nvar Lgwt_material_design_client_ui_html_Text_2_classLit = createForClass('gwt.material.design.client.ui.html', 'Text', 2104);\nfunction $clinit_AbstractDataTable(){\n  $clinit_AbstractDataTable = emptyMethod;\n  $clinit_MaterialWidget();\n  logger_2 = getLogger(($ensureNamesAreInitialized(Lgwt_material_design_client_ui_table_AbstractDataTable_2_classLit) , Lgwt_material_design_client_ui_table_AbstractDataTable_2_classLit.typeName));\n}\n\nfunction $addCategory_0(this$static, category){\n  this$static.dataView.addCategory(category);\n}\n\nfunction $addCategoryClosedHandler(this$static, handler){\n  (!this$static.$this && (this$static.$this = $wnd.$(($clinit_DOM() , this$static.element_0))) , this$static.$this).on('category-closed', handler);\n}\n\nfunction $addCategoryOpenedHandler(this$static, handler){\n  (!this$static.$this && (this$static.$this = $wnd.$(($clinit_DOM() , this$static.element_0))) , this$static.$this).on('category-opened', handler);\n}\n\nfunction $addColumn_2(this$static, column){\n  $insertColumn_1(this$static, this$static.dataView.columns.array.length, column, '');\n}\n\nfunction $addColumn_3(this$static, column, header){\n  $insertColumn_1(this$static, this$static.dataView.columns.array.length, column, header);\n}\n\nfunction $addRowCountChangeHandler_1(this$static, handler){\n  (!this$static.$this && (this$static.$this = $wnd.$(($clinit_DOM() , this$static.element_0))) , this$static.$this).on('row-count-change', handler);\n}\n\nfunction $addRowDoubleClickHandler(this$static, handler){\n  (!this$static.$this && (this$static.$this = $wnd.$(($clinit_DOM() , this$static.element_0))) , this$static.$this).on('row-dblclick', handler);\n}\n\nfunction $addRowExpandHandler(this$static, handler){\n  (!this$static.$this && (this$static.$this = $wnd.$(($clinit_DOM() , this$static.element_0))) , this$static.$this).on('row-expand', handler);\n}\n\nfunction $addRowLongPressHandler(this$static, handler){\n  (!this$static.$this && (this$static.$this = $wnd.$(($clinit_DOM() , this$static.element_0))) , this$static.$this).on('row-longpress', handler);\n}\n\nfunction $addRowSelectHandler(this$static, handler){\n  (!this$static.$this && (this$static.$this = $wnd.$(($clinit_DOM() , this$static.element_0))) , this$static.$this).on('row-select', handler);\n}\n\nfunction $addRowShortPressHandler(this$static, handler){\n  (!this$static.$this && (this$static.$this = $wnd.$(($clinit_DOM() , this$static.element_0))) , this$static.$this).on('row-shortpress', handler);\n}\n\nfunction $addSelectAllHandler(this$static, handler){\n  (!this$static.$this && (this$static.$this = $wnd.$(($clinit_DOM() , this$static.element_0))) , this$static.$this).on('select-all', handler);\n}\n\nfunction $addSortColumnHandler(this$static, handler){\n  (!this$static.$this && (this$static.$this = $wnd.$(($clinit_DOM() , this$static.element_0))) , this$static.$this).on('sort-column', handler);\n}\n\nfunction $setCategoryFactory_0(this$static, categoryFactory){\n  $setCategoryFactory(this$static.dataView, categoryFactory);\n}\n\nfunction $setHeight_3(this$static, height){\n  this$static.height_0 = height;\n  this$static.setup && $(this$static.scaffolding.tableBody).height(height);\n}\n\nfunction $setRenderer_0(this$static, renderer){\n  $setRenderer(this$static.dataView, renderer);\n}\n\nfunction $setRowData_1(this$static, values){\n  $setRowData_0(this$static.dataView, 0, values);\n}\n\nfunction $setRowFactory_0(this$static, rowFactory){\n  $setRowFactory(this$static.dataView, rowFactory);\n}\n\nfunction $setSelectionType_1(this$static, selectionType){\n  $setSelectionType(this$static.dataView, selectionType);\n}\n\nfunction $setUseCategories_0(this$static, useCategories){\n  $setUseCategories(this$static.dataView, useCategories);\n}\n\nfunction $setUseRowExpansion_0(this$static, useRowExpansion){\n  $setUseRowExpansion(this$static.dataView, useRowExpansion);\n}\n\nfunction $setUseStickyHeader_0(this$static, stickyHeader){\n  $setUseStickyHeader(this$static.dataView, stickyHeader);\n}\n\nfunction AbstractDataTable(dataView){\n  AbstractDataTable_0.call(this, dataView, new AbstractDataTable$DefaultTableScaffolding);\n}\n\nfunction AbstractDataTable_0(dataView, scaffolding){\n  MaterialWidget_0.call(this, ($clinit_DOM() , $doc.createElement('section')));\n  this.dataView = dataView;\n  this.scaffolding = scaffolding;\n  dataView.display_0 = this;\n  this.element_0.className = 'table-container';\n}\n\ndefineClass(324, 22, $intern_71);\n_.getVisibleRange = function getVisibleRange_2(){\n  return this.dataView.range;\n}\n;\n_.onBrowserEvent_0 = function onBrowserEvent_12(event_0){\n  var eventTarget, eventType, target;\n  !impl_5 && (impl_5 = new CellBasedWidgetImpl);\n  if (this.refreshing) {\n    return;\n  }\n  eventTarget = $eventGetTarget(event_0);\n  if (!is_0(eventTarget)) {\n    return;\n  }\n  target = eventTarget;\n  if (!$isOrHasChild(($clinit_DOM() , this.element_0), eventTarget)) {\n    return;\n  }\n  $onBrowserEvent(this, event_0);\n  eventType = event_0.type;\n  if ($equals_2('focus', eventType))\n  ;\n  else if ($equals_2('blur', eventType))\n  ;\n  else if ($equals_2('keydown', eventType))\n  ;\n  else \n    $equals_2('mousedown', eventType) && $isFocusable_0((!impl_5 && (impl_5 = new CellBasedWidgetImpl) , impl_5), target);\n}\n;\n_.onLoad = function onLoad_44(){\n  var ex;\n  $onLoad_0(this);\n  $build_0(this.scaffolding);\n  $apply(this.scaffolding, this);\n  try {\n    this.setup = true;\n    this.setup_0(this.scaffolding);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, 77)) {\n      ex = $e0;\n      $actuallyLog(logger_2, ($clinit_Level() , 'Could not setup AbstractDataTable due to previous errors.'), ex);\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n;\n_.setHeight_0 = function setHeight_6(height){\n  $setHeight_3(this, height);\n}\n;\n_.setRowCount = function setRowCount_2(count, isExact){\n  $setRowCount_1(this.dataView, count, isExact);\n}\n;\n_.setup_0 = function setup_1(scaffolding){\n  this.dataView.setup_0(scaffolding);\n  this.height_0 != null && $setHeight_3(this, this.height_0);\n}\n;\n_.refreshing = false;\n_.setup = false;\nvar logger_2;\nvar Lgwt_material_design_client_ui_table_AbstractDataTable_2_classLit = createForClass('gwt.material.design.client.ui.table', 'AbstractDataTable', 324);\nfunction $apply(this$static, container){\n  $add_15(container, this$static.topPanel);\n  $add_15(container, this$static.tableBody);\n  $add_15(this$static.topPanel, this$static.infoPanel);\n  $add_15(this$static.topPanel, this$static.toolPanel);\n  $add_15(this$static.tableBody, this$static.table);\n  $addHead(this$static.table, new MaterialWidget_0(($clinit_DOM() , $doc.createElement('thead'))));\n  $addBody(this$static.table, new MaterialWidget_0($doc.createElement('tbody')));\n}\n\nfunction $build_0(this$static){\n  var tableBody, topPanel, infoPanel, toolPanel, table;\n  this$static.tableBody = (tableBody = new MaterialWidget_0(($clinit_DOM() , $doc.createElement('div'))) , setStyleName(tableBody.element_0, 'table-body', true) , tableBody);\n  this$static.topPanel = (topPanel = new MaterialWidget_0($doc.createElement('div')) , setStyleName(topPanel.element_0, 'top-panel', true) , topPanel);\n  this$static.infoPanel = (infoPanel = new MaterialWidget_0($doc.createElement('div')) , setStyleName(infoPanel.element_0, 'info-panel', true) , infoPanel);\n  this$static.toolPanel = (toolPanel = new MaterialWidget_0($doc.createElement('div')) , setStyleName(toolPanel.element_0, 'tool-panel', true) , toolPanel);\n  this$static.table = (table = new Table_0 , setStyleName(table.element_0, 'table', true) , table);\n}\n\ndefineClass(2204, 1, {});\nvar Lgwt_material_design_client_ui_table_TableScaffolding_2_classLit = createForClass('gwt.material.design.client.ui.table', 'TableScaffolding', 2204);\nfunction AbstractDataTable$DefaultTableScaffolding(){\n}\n\ndefineClass(1593, 2204, {}, AbstractDataTable$DefaultTableScaffolding);\nvar Lgwt_material_design_client_ui_table_AbstractDataTable$DefaultTableScaffolding_2_classLit = createForClass('gwt.material.design.client.ui.table', 'AbstractDataTable/DefaultTableScaffolding', 1593);\nfunction $isFocusable_0(this$static, elem){\n  return $contains_1(this$static.focusableTypes, $toLowerCase(elem.tagName, ($clinit_Locale() , ROOT))) || $getTabIndex(elem) >= 0;\n}\n\nfunction CellBasedWidgetImpl(){\n  this.focusableTypes = new HashSet;\n  $add_47(this.focusableTypes, 'select');\n  $add_47(this.focusableTypes, 'input');\n  $add_47(this.focusableTypes, 'textarea');\n  $add_47(this.focusableTypes, 'option');\n  $add_47(this.focusableTypes, 'button');\n  $add_47(this.focusableTypes, 'label');\n}\n\ndefineClass(575, 1, {}, CellBasedWidgetImpl);\nvar impl_5;\nvar Lgwt_material_design_client_ui_table_CellBasedWidgetImpl_2_classLit = createForClass('gwt.material.design.client.ui.table', 'CellBasedWidgetImpl', 575);\nfunction $insertColumn_1(this$static, beforeIndex, col, header){\n  var colOffset, index_0, input_0, label_0, ref, toggleBox;\n  $insertColumn_0(this$static.dataView, beforeIndex, col, header);\n  index_0 = beforeIndex + (this$static.dataView.selectionType == 0?0:1);\n  ref = 'col' + index_0;\n  toggleBox = new MaterialCheckBox_0($getElement(new ListItem));\n  input_0 = $wnd.$(($clinit_DOM() , toggleBox.element_0)).find('input');\n  input_0.attr('id', ref);\n  label_0 = $wnd.$(toggleBox.element_0).find('label');\n  label_0.text(col.name_0);\n  label_0.attr('for', ref);\n  $setValue_8(toggleBox, ($clinit_Boolean() , $clinit_Boolean() , TRUE));\n  $add_34(this$static.menu, toggleBox);\n  ($clinit_String() , header.length) == 0 && setVisible(toggleBox.element_0, false);\n  $setupMenu(this$static);\n  colOffset = this$static.dataView.selectionType == 0?0:1;\n  $wnd.$('li', $getElement(this$static.menu)).each(makeLambdaFunction(MaterialDataTable$lambda$3$Type.prototype.call_3, new MaterialDataTable$lambda$3$Type(colOffset)));\n}\n\nfunction $lambda$0_17(this$static, e_0){\n  var tableJs;\n  (!this$static.$this && (this$static.$this = $wnd.$(($clinit_DOM() , this$static.element_0))) , this$static.$this).toggleClass('stretch');\n  ($clinit_MaterialWidget() , body_1).toggleClass('overflow-hidden');\n  tableJs = this$static.scaffolding.table.element;\n  tableJs.stickyTableHeaders('updateWidth');\n  tableJs.stickyTableHeaders('toggleHeaders');\n  this$static.dataView.subheaderLib.recalculate(true);\n  (!this$static.$this && (this$static.$this = $wnd.$(($clinit_DOM() , this$static.element_0))) , this$static.$this).trigger('stretch', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 4, [($clinit_Boolean() , (!this$static.$this && (this$static.$this = $wnd.$(($clinit_DOM() , this$static.element_0))) , this$static.$this).hasClass('stretch')?TRUE:FALSE)]));\n  e_0.preventDefault();\n  return null , TRUE;\n}\n\nfunction $lambda$1_10(this$static, e_0){\n  var $this, checked, forBox, thd;\n  $this = $wnd.$(e_0.currentTarget);\n  forBox = castToString($this.attr('for'));\n  if (forBox) {\n    thd = $wnd.$('th#' + forBox + ',td#' + forBox);\n    checked = $this.prev().is(':checked');\n    thd.each(makeLambdaFunction(MaterialDataTable$lambda$4$Type.prototype.call_3, new MaterialDataTable$lambda$4$Type(checked)));\n    this$static.scaffolding.table.element.stickyTableHeaders('updateWidth');\n    this$static.dataView.subheaderLib.recalculate(true);\n  }\n  return $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n\nfunction $setupMenu(this$static){\n  var $menu;\n  if (!this$static.menu) {\n    this$static.menu = new MaterialDropDown_1(this$static.columnMenuIcon);\n    $add_15(this$static.scaffolding.toolPanel, this$static.menu);\n    this$static.menu.inDuration = 300;\n    this$static.menu.outDuration = 225;\n    this$static.menu.hover_0 = false;\n    this$static.menu.gutter = 0;\n    this$static.menu.belowOrigin = false;\n    $setAlignment_0(this$static.menu, ($clinit_Alignment() , LEFT_4));\n    $setHideOn(this$static.menu, ($clinit_HideOn() , HIDE_ON_SMALL_DOWN));\n    $getElement(this$static.menu).style['minWidth'] = '200px';\n  }\n  $menu = $(this$static.menu);\n  $menu.find('li label').off('tap click');\n  $menu.find('li label').on('tap click', makeLambdaFunction(MaterialDataTable$lambda$1$Type.prototype.call_0, new MaterialDataTable$lambda$1$Type(this$static)));\n  $menu.find('li').off('touchstart click');\n  $menu.find('li').on('touchstart click', makeLambdaFunction(MaterialDataTable$lambda$2$Type.prototype.call_0, new MaterialDataTable$lambda$2$Type));\n}\n\nfunction MaterialDataTable(){\n  $clinit_AbstractDataTable();\n  AbstractDataTable.call(this, new StandardDataView);\n}\n\nfunction MaterialDataTable_0(dataView){\n  AbstractDataTable.call(this, dataView);\n}\n\nfunction lambda$3(colOffset_0, index_1, e_2){\n  $clinit_AbstractDataTable();\n  var input_0, label_0, ref;\n  ref = 'col' + (checkNotNull(castToDouble(index_1)) + colOffset_0);\n  input_0 = $wnd.$(e_2).find('input');\n  input_0.attr('id', ref);\n  label_0 = $wnd.$(e_2).find('label');\n  label_0.attr('for', ref);\n}\n\nfunction lambda$4(checked_0, el_2){\n  $clinit_AbstractDataTable();\n  var cell;\n  cell = $wnd.$(el_2);\n  checked_0?cell.hide():cell.show();\n}\n\ndefineClass(536, 324, $intern_71, MaterialDataTable);\n_.setup_0 = function setup_2(scaffolding){\n  var infoPanel, toolPanel;\n  this.dataView.setup_0(scaffolding);\n  this.height_0 != null && $setHeight_3(this, this.height_0);\n  infoPanel = scaffolding.infoPanel;\n  toolPanel = scaffolding.toolPanel;\n  this.tableIcon = new MaterialIcon_0(($clinit_IconType() , VIEW_LIST));\n  $add_15(infoPanel, this.tableIcon);\n  this.tableTitle = new Span_1('Table Title');\n  $addStyleName(this.tableTitle, 'title');\n  $add_15(infoPanel, this.tableTitle);\n  this.stretchIcon = new MaterialIcon_0(FULLSCREEN_0);\n  $setWaves(this.stretchIcon, ($clinit_WavesType() , LIGHT));\n  $setCircle(this.stretchIcon);\n  $setId_0(this.stretchIcon, 'stretch');\n  $(this.stretchIcon).css('cursor', 'pointer');\n  $add_15(toolPanel, this.stretchIcon);\n  this.columnMenuIcon = new MaterialIcon_0(MORE_VERT);\n  $setHideOn(this.columnMenuIcon, ($clinit_HideOn() , HIDE_ON_SMALL_DOWN));\n  $setWaves(this.columnMenuIcon, LIGHT);\n  $setCircle(this.columnMenuIcon);\n  $setId_0(this.columnMenuIcon, 'columnToggle');\n  $(this.columnMenuIcon).css('cursor', 'pointer');\n  $add_15(toolPanel, this.columnMenuIcon);\n  $wnd.$('body');\n  $wnd.$($getElement(this.scaffolding.toolPanel)).find('i#stretch').on('click', makeLambdaFunction(MaterialDataTable$lambda$0$Type.prototype.call_0, new MaterialDataTable$lambda$0$Type(this)));\n  $setupMenu(this);\n}\n;\nvar Lgwt_material_design_client_ui_table_MaterialDataTable_2_classLit = createForClass('gwt.material.design.client.ui.table', 'MaterialDataTable', 536);\nfunction MaterialDataTable$lambda$0$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1588, $wnd.Function, {}, MaterialDataTable$lambda$0$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_0 = function call_43(arg0){\n  return $lambda$0_17(this.$$outer_0, arg0);\n}\n;\nvar Lgwt_material_design_client_ui_table_MaterialDataTable$lambda$0$Type_2_classLit = createForClass('gwt.material.design.client.ui.table', 'MaterialDataTable/lambda$0$Type', 1588);\nfunction MaterialDataTable$lambda$1$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1590, $wnd.Function, {}, MaterialDataTable$lambda$1$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_0 = function call_44(arg0){\n  return $lambda$1_10(this.$$outer_0, arg0);\n}\n;\nvar Lgwt_material_design_client_ui_table_MaterialDataTable$lambda$1$Type_2_classLit = createForClass('gwt.material.design.client.ui.table', 'MaterialDataTable/lambda$1$Type', 1590);\nfunction MaterialDataTable$lambda$2$Type(){\n}\n\ndefineClass(1591, $wnd.Function, {}, MaterialDataTable$lambda$2$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_0 = function call_45(arg0){\n  return $clinit_AbstractDataTable() , arg0.stopPropagation() , $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n;\nvar Lgwt_material_design_client_ui_table_MaterialDataTable$lambda$2$Type_2_classLit = createForClass('gwt.material.design.client.ui.table', 'MaterialDataTable/lambda$2$Type', 1591);\nfunction MaterialDataTable$lambda$3$Type(colOffset_0){\n  this.colOffset_0 = colOffset_0;\n}\n\ndefineClass(1592, $wnd.Function, {}, MaterialDataTable$lambda$3$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_3 = function call_46(arg0, arg1){\n  lambda$3(this.colOffset_0, arg0, arg1);\n}\n;\n_.colOffset_0 = 0;\nvar Lgwt_material_design_client_ui_table_MaterialDataTable$lambda$3$Type_2_classLit = createForClass('gwt.material.design.client.ui.table', 'MaterialDataTable/lambda$3$Type', 1592);\nfunction MaterialDataTable$lambda$4$Type(checked_0){\n  this.checked_0 = checked_0;\n}\n\ndefineClass(1589, $wnd.Function, {}, MaterialDataTable$lambda$4$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_3 = function call_47(arg0, arg1){\n  lambda$4(this.checked_0, arg1);\n}\n;\n_.checked_0 = false;\nvar Lgwt_material_design_client_ui_table_MaterialDataTable$lambda$4$Type_2_classLit = createForClass('gwt.material.design.client.ui.table', 'MaterialDataTable/lambda$4$Type', 1589);\nfunction MaterialInfiniteDataTable(){\n  $clinit_AbstractDataTable();\n  MaterialDataTable_0.call(this, new InfiniteDataView);\n}\n\ndefineClass(1587, 536, $intern_71, MaterialInfiniteDataTable);\nvar Lgwt_material_design_client_ui_table_MaterialInfiniteDataTable_2_classLit = createForClass('gwt.material.design.client.ui.table', 'MaterialInfiniteDataTable', 1587);\nfunction $addBody(this$static, tbody){\n  this$static.tbody = tbody;\n  $add_1(this$static, tbody, ($clinit_DOM() , this$static.element_0));\n}\n\nfunction $addHead(this$static, thead){\n  this$static.thead = thead;\n  $add_1(this$static, thead, ($clinit_DOM() , this$static.element_0));\n}\n\nfunction Table_0(){\n  $clinit_MaterialWidget();\n  Table_1.call(this, ($clinit_DOM() , $doc.createElement('table')));\n}\n\nfunction Table_1(element){\n  MaterialWidget_0.call(this, element);\n  this.element = $wnd.$(($clinit_DOM() , this.element_0));\n}\n\ndefineClass(554, 22, $intern_71, Table_0);\nvar Lgwt_material_design_client_ui_table_Table_2_classLit = createForClass('gwt.material.design.client.ui.table', 'Table', 554);\nfunction TableData(){\n  $clinit_MaterialWidget();\n  MaterialWidget_0.call(this, ($clinit_DOM() , $doc.createElement('td')));\n}\n\nfunction TableData_0(element){\n  MaterialWidget_0.call(this, element);\n}\n\ndefineClass(200, 22, {27:1, 13:1, 26:1, 35:1, 25:1, 31:1, 17:1, 24:1, 21:1, 38:1, 36:1, 22:1, 200:1}, TableData);\nvar Lgwt_material_design_client_ui_table_TableData_2_classLit = createForClass('gwt.material.design.client.ui.table', 'TableData', 200);\nfunction $removeSortIcon(this$static){\n  !!this$static.sortIcon && $setInnerText_0(this$static.sortIcon);\n}\n\nfunction $setHeader_0(this$static, header){\n  if (!this$static.headerLbl) {\n    this$static.headerLbl = new Span_1(header);\n    $setStyleName(this$static.headerLbl, 'table-header');\n    $add_15(this$static.headerWrap, this$static.headerLbl);\n  }\n   else {\n    $setText_6(this$static.headerLbl, header);\n  }\n}\n\nfunction $setSortIcon(this$static, sortIcon){\n  var iconSize, lastArg;\n  !!this$static.sortIcon && $setInnerText_0(this$static.sortIcon);\n  this$static.sortIcon = sortIcon;\n  iconSize = castTo(this$static.sortIcon.sizeMixin.style_0, 216);\n  !iconSize && $setIconSize_1(this$static.sortIcon, ($clinit_IconSize() , SMALL));\n  $getPixelSize(castTo(sortIcon.sizeMixin.style_0, 216)) + 'px';\n  (lastArg = $getElement(this$static.sortIcon).style , $clinit_Style$Float() , lastArg)['cssFloat'] = 'left';\n  $insert_4(this$static.headerWrap, this$static.sortIcon, 0);\n}\n\nfunction TableHeader(){\n  $clinit_MaterialWidget();\n  TableData_0.call(this, ($clinit_DOM() , $doc.createElement('th')));\n  this.headerWrap = new Div;\n}\n\nfunction TableHeader_0(sortIcon){\n  $clinit_MaterialWidget();\n  TableHeader.call(this);\n  $setSortIcon(this, sortIcon);\n}\n\ndefineClass(201, 200, {27:1, 13:1, 26:1, 35:1, 25:1, 31:1, 17:1, 24:1, 21:1, 38:1, 36:1, 22:1, 200:1, 201:1}, TableHeader, TableHeader_0);\n_.onLoad = function onLoad_45(){\n  $onLoad_0(this);\n  $setHeight_0(this.headerWrap, '100%');\n  $setDisplay_1(this.headerWrap, ($clinit_Display() , FLEX));\n  $add_15(this, this.headerWrap);\n}\n;\nvar Lgwt_material_design_client_ui_table_TableHeader_2_classLit = createForClass('gwt.material.design.client.ui.table', 'TableHeader', 201);\nfunction $add_44(this$static, tableData){\n  $add_1(this$static, tableData, ($clinit_DOM() , this$static.element_0));\n}\n\nfunction $getColumn_2(this$static, index_0){\n  try {\n    return castTo($get_3(this$static.children_1, index_0), 200);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, 90)) {\n      return null;\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n\nfunction $insert_6(this$static, child, beforeIndex){\n  $insert_0(this$static, child, ($clinit_DOM() , this$static.element_0), beforeIndex);\n}\n\nfunction TableRow_0(){\n  $clinit_MaterialWidget();\n  TableRow_1.call(this, ($clinit_DOM() , $doc.createElement('tr')));\n}\n\nfunction TableRow_1(element){\n  MaterialWidget_0.call(this, element);\n}\n\ndefineClass(240, 22, $intern_71, TableRow_0);\nvar Lgwt_material_design_client_ui_table_TableRow_2_classLit = createForClass('gwt.material.design.client.ui.table', 'TableRow', 240);\nfunction $add_45(this$static, tableHeader){\n  $add_1(this$static, tableHeader, ($clinit_DOM() , this$static.element_0));\n}\n\nfunction $copy(this$static, tableRow){\n  if (tableRow) {\n    !!tableRow && (this$static.category = tableRow.category);\n    $setIconType_3(this$static.icon_0, $getIconType(tableRow.icon_0));\n    $setText_13(this$static.nameLbl, tableRow.nameLbl.text_0.data);\n    $setName_0(this$static, tableRow.nameLbl.text_0.data);\n    $setId_0(this$static, $getElement((!tableRow.idMixin && (tableRow.idMixin = new IdMixin(tableRow)) , tableRow.idMixin).uiObject).id);\n    this$static.openIcon = tableRow.openIcon;\n    this$static.closeIcon = tableRow.closeIcon;\n  }\n}\n\nfunction $setCloseIcon(this$static, closeIcon){\n  this$static.closeIcon = closeIcon;\n  (!this$static.$this && (this$static.$this = $wnd.$(($clinit_DOM() , this$static.element_0))) , this$static.$this).hasClass('expanded') && $setIconType_3(this$static.icon_0, closeIcon);\n  $setDataAttribute(this$static, 'data-close-icon', closeIcon.cssClass);\n}\n\nfunction $setName_0(this$static, name_0){\n  $setText_13(this$static.nameLbl, name_0);\n}\n\nfunction $setOpenIcon(this$static, openIcon){\n  this$static.openIcon = openIcon;\n  (!this$static.$this && (this$static.$this = $wnd.$(($clinit_DOM() , this$static.element_0))) , this$static.$this).hasClass('expanded') || $setIconType_3(this$static.icon_0, openIcon);\n  $setDataAttribute(this$static, 'data-open-icon', openIcon.cssClass);\n}\n\nfunction $setVisible_1(this$static, visible){\n  setVisible(($clinit_DOM() , this$static.element_0), visible);\n  visible?(!this$static.$this && (this$static.$this = $wnd.$(this$static.element_0)) , this$static.$this).children('*').show():(!this$static.$this && (this$static.$this = $wnd.$(this$static.element_0)) , this$static.$this).children('*').hide();\n}\n\nfunction TableSubHeader(category){\n  $clinit_MaterialWidget();\n  TableRow_0.call(this);\n  this.category = category;\n  $setDataAttribute(this, 'data-category', category.category);\n  this.openIcon = ($clinit_IconType() , ADD);\n  this.closeIcon = REMOVE;\n  setStyleName(($clinit_DOM() , this.element_0), 'subheader', true);\n  this.iconTh = new TableHeader;\n  this.icon_0 = new MaterialIcon_0(this.openIcon);\n  $add_15(this.iconTh, this.icon_0);\n  $add_45(this, this.iconTh);\n  this.nameTh = new TableHeader;\n  this.nameLbl = new Text_0;\n  $add_15(this.nameTh, this.nameLbl);\n  $add_45(this, this.nameTh);\n  $setName_0(this, this.category.category);\n  $setId_0(this, this.category.category);\n}\n\ndefineClass(155, 240, {27:1, 13:1, 26:1, 35:1, 25:1, 31:1, 17:1, 24:1, 21:1, 38:1, 36:1, 22:1, 155:1}, TableSubHeader);\n_.removeFromParent = function removeFromParent_0(){\n  var parent_0;\n  parent_0 = this.parent_1;\n  !!parent_0 && instanceOf(parent_0, 22) && $remove_8(castTo(parent_0, 22).children_1, this);\n  (!this.$this && (this.$this = $wnd.$(($clinit_DOM() , this.element_0))) , this.$this).parent().remove();\n}\n;\n_.toString_0 = function toString_19(){\n  return toStringSimple(($clinit_DOM() , this.element_0));\n}\n;\nvar Lgwt_material_design_client_ui_table_TableSubHeader_2_classLit = createForClass('gwt.material.design.client.ui.table', 'TableSubHeader', 155);\nfunction Column_0(cell){\n  this.cell = cell;\n}\n\ndefineClass(134, 1, $intern_123);\n_.getCell = function getCell_0(){\n  return this.cell;\n}\n;\n_.getFieldUpdater = function getFieldUpdater_0(){\n  return this.fieldUpdater;\n}\n;\n_.getHideOn = function getHideOn(){\n  return this.hideOn;\n}\n;\n_.getSortComparator = function getSortComparator(){\n  return this.sortComparator;\n}\n;\n_.getTextAlign = function getTextAlign(){\n  return this.textAlign;\n}\n;\n_.isNumeric = function isNumeric(){\n  return false;\n}\n;\n_.isSortable_0 = function isSortable_0(){\n  return !!this.getSortComparator();\n}\n;\n_.render = function render_11(context, object, sb){\n  this.cell.render(context, this.getValue(object), sb);\n}\n;\n_.toString_0 = function toString_20(){\n  return 'Column{cell=' + this.cell + ', isDefaultSortAscending=' + this.isDefaultSortAscending + ', isSortable=' + this.isSortable_0() + \", name='\" + this.name_0 + \"'\" + '}';\n}\n;\n_.isDefaultSortAscending = true;\n_.name_0 = null;\nvar Lgwt_material_design_client_ui_table_cell_Column_2_classLit = createForClass('gwt.material.design.client.ui.table.cell', 'Column', 134);\nfunction TextCell_0(){\n  AbstractSafeHtmlCell.call(this, (!instance_4 && (instance_4 = new SimpleSafeHtmlRenderer) , instance_4), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_0, 2, 5, []));\n}\n\ndefineClass(1970, 555, {}, TextCell_0);\n_.render_0 = function render_12(context, data_0, sb){\n  !!data_0 && ($append_3(sb.sb, data_0.html_0) , sb);\n}\n;\nvar Lgwt_material_design_client_ui_table_cell_TextCell_2_classLit = createForClass('gwt.material.design.client.ui.table.cell', 'TextCell', 1970);\nfunction TextColumn_0(){\n  Column_0.call(this, new TextCell_0);\n}\n\ndefineClass(233, 134, $intern_123);\nvar Lgwt_material_design_client_ui_table_cell_TextColumn_2_classLit = createForClass('gwt.material.design.client.ui.table.cell', 'TextColumn', 233);\nfunction $render_6(){\n  throw new UnsupportedOperationException_0('Use WidgetCell#render(context, value, cell)');\n}\n\ndefineClass(321, 256, {321:1});\n_.render = function render_13(context, value_0, sb){\n  castTo(value_0, 21);\n  $render_6();\n}\n;\nvar Lgwt_material_design_client_ui_table_cell_WidgetCell_2_classLit = createForClass('gwt.material.design.client.ui.table.cell', 'WidgetCell', 321);\nfunction $render_7(this$static, object){\n  var widget;\n  widget = castTo(this$static.getValue(object), 21);\n  castTo(this$static.cell, 321);\n  return widget;\n}\n\nfunction WidgetColumn(){\n  Column_0.call(this, new WidgetColumn$BlankWidgetCell);\n}\n\ndefineClass(169, 134, $intern_124);\n_.render = function render_14(context, object, sb){\n  throw new UnsupportedOperationException_0('Use WidgetColumn#render(context, object).');\n}\n;\nvar Lgwt_material_design_client_ui_table_cell_WidgetColumn_2_classLit = createForClass('gwt.material.design.client.ui.table.cell', 'WidgetColumn', 169);\nfunction WidgetColumn$BlankWidgetCell(){\n  AbstractCell.call(this, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_0, 2, 5, []));\n}\n\ndefineClass(1516, 321, {321:1}, WidgetColumn$BlankWidgetCell);\nvar Lgwt_material_design_client_ui_table_cell_WidgetColumn$BlankWidgetCell_2_classLit = createForClass('gwt.material.design.client.ui.table.cell', 'WidgetColumn/BlankWidgetCell', 1516);\nfunction RowExpand(row, expand){\n  this.row = row;\n  this.overlay = row.find('section.overlay');\n  this.expand = expand;\n}\n\ndefineClass(570, 1, {}, RowExpand);\n_.expand = false;\nvar Lgwt_material_design_client_ui_table_events_RowExpand_2_classLit = createForClass('gwt.material.design.client.ui.table.events', 'RowExpand', 570);\nfunction DataTablePresenter(eventBus, view, proxy){\n  $clinit_PresenterWidget();\n  Presenter.call(this, eventBus, view, proxy, ($clinit_ApplicationPresenter() , SLOT_MAIN));\n}\n\ndefineClass(788, 55, $intern_64, DataTablePresenter);\n_.onReveal = function onReveal_8(){\n  $clinit_SetPageTitleEvent();\n  $fireEvent_1(this, new SetPageTitleEvent('Data Table', 'Data tables display sets of raw data. They usually appear in desktop enterprise products. Material DataTable supports Standard, Infinite Table, Pager and Context Menu.'));\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_DataTablePresenter_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable', 'DataTablePresenter', 788);\nfunction DataTableView(){\n  ViewImpl.call(this);\n  $initWidget_0(this, $build_f_MaterialPanel1_1(new DataTableView_BinderImpl$Widgets(this)));\n  $add_15(this.standardTablePanel, new StandardTable);\n  $add_15(this.infiniteTablePanel, new InfiniteTable);\n}\n\ndefineClass(1009, 58, $intern_65, DataTableView);\nvar Lgwt_material_design_demo_client_application_addins_datatable_DataTableView_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable', 'DataTableView', 1009);\nfunction $build_f_MaterialPanel1_1(this$static){\n  var f_HTMLPanel6, f_HTMLPanel8, f_MaterialPanel1, f_MaterialTitle2, f_PrettyPre3, f_MaterialTitle4, standardTablePanel, f_MaterialTitle5, sb, f_MaterialTitle7, sb_0, f_MaterialTitle9, f_PrettyPre10, f_MaterialLink11, f_MaterialTitle12, f_PrettyPre13, f_MaterialLink14, f_MaterialTitle15, f_PrettyPre16, f_MaterialLink17, f_MaterialTitle18, f_PrettyPre19, f_MaterialTitle20, f_PrettyPre21, f_MaterialTitle22, f_PrettyPre23, f_MaterialTitle24, f_PrettyPre25, f_MaterialTitle26, f_PrettyPre27, f_MaterialTitle28, infiniteTablePanel, f_MaterialTitle29, f_MaterialTitle30, f_MaterialTitle31, sb_1, sb_2, sb_3, sb_4, sb_5, sb_6, sb_7, sb_8, sb_9;\n  f_MaterialPanel1 = new MaterialPanel;\n  $add_15(f_MaterialPanel1, (f_MaterialTitle2 = new MaterialTitle , $getElement(f_MaterialTitle2.header).innerHTML = 'Usage' , undefined , f_MaterialTitle2));\n  $add_15(f_MaterialPanel1, (f_PrettyPre3 = new PrettyPre , $setHTML_0(f_PrettyPre3, (sb_1 = new StringBuilder , sb_1.string += '\\u2003&lt;m.table:MaterialDataTable ui:field=\"table\"<br> height=\"calc(100vh - 131px)\"<br> useStickyHeader=\"true\"<br> useCategories=\"true\"<br> useRowExpansion=\"true\"<br> selectionType=\"SINGLE\"/&gt;' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_1.string)).html_0) , setStyleName(($clinit_DOM() , f_PrettyPre3.element_0), 'lang-xml', true) , setStyleName(f_PrettyPre3.element_0, 'z-depth-1', true) , f_PrettyPre3));\n  $add_15(f_MaterialPanel1, (f_MaterialTitle4 = new MaterialTitle , $setText_12(f_MaterialTitle4.paragraph, 'You can filter any options below.') , $getElement(f_MaterialTitle4.header).innerHTML = 'Standard Table' , undefined , f_MaterialTitle4));\n  $add_15(f_MaterialPanel1, (standardTablePanel = new MaterialPanel , this$static.owner.standardTablePanel = standardTablePanel , standardTablePanel));\n  $add_15(f_MaterialPanel1, (f_MaterialTitle5 = new MaterialTitle , $getElement(f_MaterialTitle5.header).innerHTML = 'Basic properties' , undefined , f_MaterialTitle5));\n  $add_15(f_MaterialPanel1, (f_HTMLPanel6 = new HTMLPanel((sb = new StringBuilder , sb.string += '<blockquote> <p><b>height - <\\/b> sets the height of the datatable<\\/p> <p><b>useStickyHeader - <\\/b> Enable the use of sticky table header bar.<\\/p> <p><b>useCategories - <\\/b> Allow the data view to generate categories, or use added categories for row data. <\\/p> <p><b>selectionType - <\\/b> Set the data views row selection type.<\\/p> <p><b>useLoadOverlay - <\\/b> Use the loading overlay mask.<\\/p> <p><b>useRowExpansion - <\\/b> Use row expansion functionality, giving the user a way to expand rows for extra information.<\\/p> <\\/blockquote>' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb.string)).html_0) , f_HTMLPanel6));\n  $add_15(f_MaterialPanel1, (f_MaterialTitle7 = new MaterialTitle , $getElement(f_MaterialTitle7.header).innerHTML = 'DataTable Events' , undefined , f_MaterialTitle7));\n  $add_15(f_MaterialPanel1, (f_HTMLPanel8 = new HTMLPanel((sb_0 = new StringBuilder , sb_0.string += '<blockquote> <p><b>Row Select Event - <\\/b>Add a row select handler, called when a user selects a row.<\\/p> <p><b>Sort Column Event - <\\/b>Add a sort column handler, called when a user sorts a column.<\\/p> <p><b>Row Count Change Event - <\\/b>Add a row count change handler, called when the row count changes.<\\/p> <p><b>Category Opened Event - <\\/b>Add category opened handler, called when a category is opened.<\\/p> <p><b>Category Closed Event - <\\/b>Add category closed handler, called when a category is closed.<\\/p> <p><b>Row Double Click Event - <\\/b>Add a row double click handler, called when a row is double clicked.<\\/p> <p><b>Select All Event - <\\/b>Add a select all handler, called when all rows were selected<\\/p> <p><b>Row Long Press Event - <\\/b>Add a row long press handler, called when a row is long pressed.<\\/p> <p><b>Row Short Press Event - <\\/b>Add a row short press handler, called when a row is short pressed.<\\/p> <p><b>Selection Event - <\\/b>Add a selection handler, called when a row is selected<\\/p> <p><b>Row Context Menu - <\\/b>Add a row context menu handler, called when user right click a row to open context menu.<\\/p> <\\/blockquote>' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_0.string)).html_0) , f_HTMLPanel8));\n  $add_15(f_MaterialPanel1, (f_MaterialTitle9 = new MaterialTitle , $setText_12(f_MaterialTitle9.paragraph, \"We will define our own person row factory to generate the category name. This can be used to generate your own RowComponent's too, if custom functionality is required.\") , $getElement(f_MaterialTitle9.header).innerHTML = 'Row Factory' , undefined , f_MaterialTitle9));\n  $add_15(f_MaterialPanel1, (f_PrettyPre10 = new PrettyPre , $setHTML_0(f_PrettyPre10, (sb_2 = new StringBuilder , sb_2.string += '\\u2003table.setRowFactory(new PersonRowFactory());' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_2.string)).html_0) , setStyleName(f_PrettyPre10.element_0, 'lang-java', true) , setStyleName(f_PrettyPre10.element_0, 'z-depth-1', true) , f_PrettyPre10));\n  $add_15(f_MaterialPanel1, (f_MaterialLink11 = new MaterialLink , $setIconType(f_MaterialLink11, ($clinit_IconType() , LINK_2)) , $setText_6(f_MaterialLink11.span_1, 'Link to Person Row Factory') , $add_15(f_MaterialLink11, f_MaterialLink11.span_1) , f_MaterialLink11.element_0.setAttribute('href', 'https://github.com/GwtMaterialDesign/gwt-material-table-sample/blob/master/src/main/java/gwt/material/design/sample/client/ui/factory/PersonRowFactory.java') , f_MaterialLink11.element_0.setAttribute('target', '_blank') , f_MaterialLink11));\n  $add_15(f_MaterialPanel1, (f_MaterialTitle12 = new MaterialTitle , $setText_12(f_MaterialTitle12.paragraph, 'If we want to generate all our categories using CustomCategoryComponent We can define our own CategoryComponentFactory. There we can define our own CategoryComponent implementations.') , $getElement(f_MaterialTitle12.header).innerHTML = 'Category Factory' , undefined , f_MaterialTitle12));\n  $add_15(f_MaterialPanel1, (f_PrettyPre13 = new PrettyPre , $setHTML_0(f_PrettyPre13, (sb_3 = new StringBuilder , sb_3.string += '\\u2003table.setCategoryFactory(new CustomCategoryFactory());' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_3.string)).html_0) , setStyleName(f_PrettyPre13.element_0, 'lang-java', true) , setStyleName(f_PrettyPre13.element_0, 'z-depth-1', true) , f_PrettyPre13));\n  $add_15(f_MaterialPanel1, (f_MaterialLink14 = new MaterialLink , $setIconType(f_MaterialLink14, LINK_2) , $setText_6(f_MaterialLink14.span_1, 'Link to Category Factory') , $add_15(f_MaterialLink14, f_MaterialLink14.span_1) , f_MaterialLink14.element_0.setAttribute('href', 'https://github.com/GwtMaterialDesign/gwt-material-table-sample/blob/master/src/main/java/gwt/material/design/sample/client/ui/factory/CustomCategoryFactory.java') , f_MaterialLink14.element_0.setAttribute('target', '_blank') , f_MaterialLink14));\n  $add_15(f_MaterialPanel1, (f_MaterialTitle15 = new MaterialTitle , $setText_12(f_MaterialTitle15.paragraph, 'It is possible to create your own custom renderer per table When you use the BaseRenderer you can override certain draw methods to create elements the way you would like.') , $getElement(f_MaterialTitle15.header).innerHTML = 'Renderer' , undefined , f_MaterialTitle15));\n  $add_15(f_MaterialPanel1, (f_PrettyPre16 = new PrettyPre , $setHTML_0(f_PrettyPre16, (sb_4 = new StringBuilder , sb_4.string += '\\u2003table.setRenderer(new CustomRenderer&lt;&gt;());' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_4.string)).html_0) , setStyleName(f_PrettyPre16.element_0, 'lang-java', true) , setStyleName(f_PrettyPre16.element_0, 'z-depth-1', true) , f_PrettyPre16));\n  $add_15(f_MaterialPanel1, (f_MaterialLink17 = new MaterialLink , $setIconType(f_MaterialLink17, LINK_2) , $setText_6(f_MaterialLink17.span_1, 'Link to Renderer') , $add_15(f_MaterialLink17, f_MaterialLink17.span_1) , f_MaterialLink17.element_0.setAttribute('href', 'https://github.com/GwtMaterialDesign/gwt-material-table-sample/blob/master/src/main/java/gwt/material/design/sample/client/ui/renderer/CustomRenderer.java') , f_MaterialLink17.element_0.setAttribute('target', '_blank') , f_MaterialLink17));\n  $add_15(f_MaterialPanel1, (f_MaterialTitle18 = new MaterialTitle , $setText_12(f_MaterialTitle18.paragraph, 'You can easily add data table columns by calling table.addColumn(). Also you can setup the sort comparator on each column.') , $getElement(f_MaterialTitle18.header).innerHTML = 'Adding columns' , undefined , f_MaterialTitle18));\n  $add_15(f_MaterialPanel1, (f_PrettyPre19 = new PrettyPre , $setHTML_0(f_PrettyPre19, (sb_5 = new StringBuilder , sb_5.string += '\\u2003table.addColumn(new TextColumn&lt;Person&gt;() {<br> \\u2003@Override<br> \\u2003public Comparator&lt;? super RowComponent&lt;Person&gt;&gt; getSortComparator() {<br> \\u2003\\u2003return (o1, o2) -&gt; o1.getData().getFirstName().compareToIgnoreCase(o2.getData().getFirstName());<br> \\u2003}<br> \\u2003@Override<br> \\u2003public String getValue(Person object) {<br> \\u2003\\u2003return object.getFirstName();<br> \\u2003}<br> }, \"First Name\");' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_5.string)).html_0) , setStyleName(f_PrettyPre19.element_0, 'lang-java', true) , setStyleName(f_PrettyPre19.element_0, 'z-depth-1', true) , f_PrettyPre19));\n  $add_15(f_MaterialPanel1, (f_MaterialTitle20 = new MaterialTitle , $setText_12(f_MaterialTitle20.paragraph, '') , $getElement(f_MaterialTitle20.header).innerHTML = 'Adding column material widget' , undefined , f_MaterialTitle20));\n  $add_15(f_MaterialPanel1, (f_PrettyPre21 = new PrettyPre , $setHTML_0(f_PrettyPre21, (sb_6 = new StringBuilder , sb_6.string += '\\u2003table.addColumn(new WidgetColumn&lt;Person, MaterialImage&gt;() {<br> \\u2003@Override<br> \\u2003public MaterialImage getValue(Person object) {<br> \\u2003\\u2003MaterialImage profile = new MaterialImage();<br> \\u2003\\u2003profile.setUrl(object.getPicture());<br> \\u2003\\u2003profile.setWidth(\"40px\");<br> \\u2003\\u2003profile.setHeight(\"40px\");<br> \\u2003\\u2003profile.setPadding(4);<br> \\u2003\\u2003profile.setMarginTop(8);<br> \\u2003\\u2003profile.setBackgroundColor(\"grey lighten-2\");<br> \\u2003\\u2003profile.setCircle(true);<br> \\u2003\\u2003return profile;<br> \\u2003}<br> });' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_6.string)).html_0) , setStyleName(f_PrettyPre21.element_0, 'lang-java', true) , setStyleName(f_PrettyPre21.element_0, 'z-depth-1', true) , f_PrettyPre21));\n  $add_15(f_MaterialPanel1, (f_MaterialTitle22 = new MaterialTitle , $setText_12(f_MaterialTitle22.paragraph, 'Set the visible range of the table for  pager.') , $getElement(f_MaterialTitle22.header).innerHTML = 'Set Visible Range' , undefined , f_MaterialTitle22));\n  $add_15(f_MaterialPanel1, (f_PrettyPre23 = new PrettyPre , $setHTML_0(f_PrettyPre23, (sb_7 = new StringBuilder , sb_7.string += '\\u2003table.setVisibleRange(0, 2001);' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_7.string)).html_0) , setStyleName(f_PrettyPre23.element_0, 'lang-java', true) , setStyleName(f_PrettyPre23.element_0, 'z-depth-1', true) , f_PrettyPre23));\n  $add_15(f_MaterialPanel1, (f_MaterialTitle24 = new MaterialTitle , $setText_12(f_MaterialTitle24.paragraph, '') , $getElement(f_MaterialTitle24.header).innerHTML = 'Set Row Data' , undefined , f_MaterialTitle24));\n  $add_15(f_MaterialPanel1, (f_PrettyPre25 = new PrettyPre , $setHTML_0(f_PrettyPre25, (sb_8 = new StringBuilder , sb_8.string += '\\u2003table.setRowData(0, people);' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_8.string)).html_0) , setStyleName(f_PrettyPre25.element_0, 'lang-java', true) , setStyleName(f_PrettyPre25.element_0, 'z-depth-1', true) , f_PrettyPre25));\n  $add_15(f_MaterialPanel1, (f_MaterialTitle26 = new MaterialTitle , $setText_12(f_MaterialTitle26.paragraph, '') , $getElement(f_MaterialTitle26.header).innerHTML = 'Refreshing and Redrawing the table' , undefined , f_MaterialTitle26));\n  $add_15(f_MaterialPanel1, (f_PrettyPre27 = new PrettyPre , $setHTML_0(f_PrettyPre27, (sb_9 = new StringBuilder , sb_9.string += '\\u2003table.setRedraw(true); table.refreshView();' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_9.string)).html_0) , setStyleName(f_PrettyPre27.element_0, 'lang-java', true) , setStyleName(f_PrettyPre27.element_0, 'z-depth-1', true) , f_PrettyPre27));\n  $add_15(f_MaterialPanel1, (f_MaterialTitle28 = new MaterialTitle , $setText_12(f_MaterialTitle28.paragraph, '') , $getElement(f_MaterialTitle28.header).innerHTML = 'Infinite Data Table' , undefined , f_MaterialTitle28));\n  $add_15(f_MaterialPanel1, (infiniteTablePanel = new MaterialPanel , this$static.owner.infiniteTablePanel = infiniteTablePanel , infiniteTablePanel));\n  $add_15(f_MaterialPanel1, (f_MaterialTitle29 = new MaterialTitle , $setText_12(f_MaterialTitle29.paragraph, '') , $getElement(f_MaterialTitle29.header).innerHTML = 'Data Source' , undefined , f_MaterialTitle29));\n  $add_15(f_MaterialPanel1, (f_MaterialTitle30 = new MaterialTitle , $setText_12(f_MaterialTitle30.paragraph, '') , $getElement(f_MaterialTitle30.header).innerHTML = 'Pager' , undefined , f_MaterialTitle30));\n  $add_15(f_MaterialPanel1, (f_MaterialTitle31 = new MaterialTitle , $setText_12(f_MaterialTitle31.paragraph, '') , $getElement(f_MaterialTitle31.header).innerHTML = 'Context Menu' , undefined , f_MaterialTitle31));\n  return f_MaterialPanel1;\n}\n\nfunction DataTableView_BinderImpl$Widgets(owner){\n  this.owner = owner;\n}\n\ndefineClass(1290, 1, {}, DataTableView_BinderImpl$Widgets);\nvar Lgwt_material_design_demo_client_application_addins_datatable_DataTableView_1BinderImpl$Widgets_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable', 'DataTableView_BinderImpl/Widgets', 1290);\nfunction $get_Key$type$gwt$material$design$demo$client$application$addins$datatable$DataTablePresenter$_annotation$$none$$(this$static){\n  var result, result0;\n  if (!this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$datatable$DataTablePresenter$_annotation$$none$$) {\n    result0 = new DataTablePresenter($get_Key$type$com$google$web$bindery$event$shared$EventBus$_annotation$$none$$($getFragment_com_google_web_bindery_event_shared(this$static.injector)), (result = $get_Key$type$gwt$material$design$demo$client$application$addins$datatable$DataTableView$_annotation$$none$$(this$static) , result), $get_Key$type$gwt$material$design$demo$client$application$addins$datatable$DataTablePresenter$MyProxy$_annotation$$none$$(this$static));\n    $automaticBind(($getFragment_com_gwtplatform_mvp_client(this$static.injector) , result0), $get_Key$type$com$gwtplatform$mvp$client$AutobindDisable$_annotation$$none$$($getFragment_com_gwtplatform_mvp_client(this$static.injector)));\n    this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$datatable$DataTablePresenter$_annotation$$none$$ = result0;\n  }\n  return this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$datatable$DataTablePresenter$_annotation$$none$$;\n}\n\nfunction $get_Key$type$gwt$material$design$demo$client$application$addins$datatable$DataTableView$_annotation$$none$$(this$static){\n  var result;\n  if (!this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$datatable$DataTableView$_annotation$$none$$) {\n    result = new DataTableView;\n    this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$datatable$DataTableView$_annotation$$none$$ = result;\n  }\n  return this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$datatable$DataTableView$_annotation$$none$$;\n}\n\ndefineClass(682, 1, $intern_111);\n_.onSuccess_0 = function onSuccess_5(){\n  $onSuccess(this.val$callback2, $get_Key$type$gwt$material$design$demo$client$application$addins$datatable$DataTablePresenter$_annotation$$none$$(this.this$11.this$01));\n}\n;\nfunction $lambda$0_18(this$static){\n  $updateSelectedRows(this$static, this$static.table.dataView.getSelectedRowModels(false).array.length);\n  $clinit_GWT();\n  return $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n\nfunction $lambda$1_12(this$static){\n  $clinit_GWT();\n  this$static.table.dataView.refreshView();\n  return $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n\nfunction $lambda$2_3(this$static, models_1, selected_3){\n  $updateSelectedRows(this$static, this$static.table.dataView.getSelectedRowModels(false).array.length);\n  'Selected[' + selected_3 + ']: ' + models_1.size_1() + ' models';\n  $clinit_GWT();\n  return $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n\nfunction $onCategories(this$static, e){\n  if (unsafeCast(checkNotNull(castToBoolean(e.value_0)))) {\n    $setUseCategories_0(this$static.table, true);\n    $clinit_GWT();\n  }\n   else {\n    $setUseCategories_0(this$static.table, false);\n    $clinit_GWT();\n  }\n  $setRedraw(this$static.table.dataView);\n  this$static.table.dataView.refreshView();\n}\n\nfunction $updateSelectedRows(this$static, size_0){\n  var word;\n  word = ' item ';\n  size_0 > 1 && (word = ' items ');\n  if (size_0 <= 0) {\n    $setText_6(this$static.table.tableTitle, 'Table Title');\n    $removeStyleName(this$static.table.scaffolding.topPanel, 'active-header');\n  }\n   else {\n    $addStyleName(this$static.table.scaffolding.topPanel, 'active-header');\n    $setText_6(this$static.table.tableTitle, size_0 + word + 'selected ');\n  }\n}\n\nfunction InfiniteTable(){\n  $clinit_UIObject();\n  $clinit_FakePersonService();\n  this.table = new MaterialInfiniteDataTable;\n  $initWidget(this, $build_f_HTMLPanel1_5(new InfiniteTable_InfiniteGridUiBinderImpl$Widgets(this)));\n}\n\ndefineClass(1517, $intern_38, $intern_39, InfiniteTable);\n_.onLoad = function onLoad_46(){\n  this.table.dataView.setLoadMask(true);\n  $schedule(new FakePersonService$2(new InfiniteTable$1(this)), min_1(200, nextInt(500)));\n  $addColumn_2(this.table, new InfiniteTable$2);\n  $addColumn_3(this.table, new InfiniteTable$3, 'First Name');\n  $addColumn_3(this.table, new InfiniteTable$4, 'Last Name');\n  $addColumn_3(this.table, new InfiniteTable$5, 'Phone');\n  $addRowSelectHandler(this.table, makeLambdaFunction(InfiniteTable$lambda$0$Type.prototype.call_5, new InfiniteTable$lambda$0$Type(this)));\n  $addSortColumnHandler(this.table, makeLambdaFunction(InfiniteTable$lambda$1$Type.prototype.call_9, new InfiniteTable$lambda$1$Type(this)));\n  $addSelectAllHandler(this.table, makeLambdaFunction(InfiniteTable$lambda$2$Type.prototype.call_5, new InfiniteTable$lambda$2$Type(this)));\n  this.table.dataView.useCategories || this.table.dataView.refreshView();\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_InfiniteTable_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'InfiniteTable', 1517);\nfunction $onSuccess_0(this$static, categories){\n  var category, category$iterator;\n  for (category$iterator = new ArrayList$1(categories); category$iterator.i < category$iterator.this$01.array.length;) {\n    category = castToString($next_7(category$iterator));\n    $addCategory_0(this$static.this$01.table, new CategoryComponent(category));\n  }\n  this$static.this$01.table.dataView.setLoadMask(false);\n}\n\nfunction InfiniteTable$1(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1518, 1, {}, InfiniteTable$1);\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_InfiniteTable$1_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'InfiniteTable/1', 1518);\nfunction $getValue_8(object){\n  var profile;\n  profile = new MaterialImage;\n  $setUrl_4(profile, object.picture);\n  ($clinit_DOM() , profile.element_0).style['width'] = '40px';\n  profile.element_0.style['height'] = '40px';\n  profile.element_0.style['padding'] = ($clinit_Style$Unit() , '4.0px');\n  profile.element_0.style['marginTop'] = '8.0px';\n  $setBackgroundColor_0((!profile.colorsMixin_0 && (profile.colorsMixin_0 = new ColorsMixin(profile)) , profile.colorsMixin_0), 'grey lighten-2');\n  $setOn((!profile.circleMixin && (profile.circleMixin = new ToggleStyleMixin(profile, 'circle')) , profile.circleMixin), true);\n  return profile;\n}\n\nfunction InfiniteTable$2(){\n  WidgetColumn.call(this);\n}\n\ndefineClass(1519, 169, $intern_124, InfiniteTable$2);\n_.getValue = function getValue_18(object){\n  return $getValue_8(castTo(object, 98));\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_InfiniteTable$2_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'InfiniteTable/2', 1519);\nfunction InfiniteTable$3(){\n  TextColumn_0.call(this);\n}\n\ndefineClass(1520, 233, $intern_123, InfiniteTable$3);\n_.getValue = function getValue_19(object){\n  return castTo(object, 98).firstName;\n}\n;\n_.isSortable_0 = function isSortable_1(){\n  return true;\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_InfiniteTable$3_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'InfiniteTable/3', 1520);\nfunction InfiniteTable$4(){\n  TextColumn_0.call(this);\n}\n\ndefineClass(1521, 233, $intern_123, InfiniteTable$4);\n_.getValue = function getValue_20(object){\n  return castTo(object, 98).lastName;\n}\n;\n_.isSortable_0 = function isSortable_2(){\n  return true;\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_InfiniteTable$4_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'InfiniteTable/4', 1521);\nfunction InfiniteTable$5(){\n  TextColumn_0.call(this);\n}\n\ndefineClass(1522, 233, $intern_123, InfiniteTable$5);\n_.getValue = function getValue_21(object){\n  return castTo(object, 98).phone;\n}\n;\n_.isSortable_0 = function isSortable_3(){\n  return true;\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_InfiniteTable$5_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'InfiniteTable/5', 1522);\nfunction InfiniteTable$lambda$0$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1523, $wnd.Function, {}, InfiniteTable$lambda$0$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_5 = function call_48(arg0, arg1, arg2, arg3){\n  return $lambda$0_18(this.$$outer_0);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_InfiniteTable$lambda$0$Type_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'InfiniteTable/lambda$0$Type', 1523);\nfunction InfiniteTable$lambda$1$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1524, $wnd.Function, {}, InfiniteTable$lambda$1$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_9 = function call_49(arg0, arg1, arg2){\n  return $lambda$1_12(this.$$outer_0);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_InfiniteTable$lambda$1$Type_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'InfiniteTable/lambda$1$Type', 1524);\nfunction InfiniteTable$lambda$2$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1525, $wnd.Function, {}, InfiniteTable$lambda$2$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_5 = function call_50(arg0, arg1, arg2, arg3){\n  return $lambda$2_3(this.$$outer_0, arg1, arg3);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_InfiniteTable$lambda$2$Type_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'InfiniteTable/lambda$2$Type', 1525);\nfunction $build_f_HTMLPanel1_5(this$static){\n  var __attachRecord__, f_HTMLPanel1, cbCategories, table;\n  f_HTMLPanel1 = new HTMLPanel($html1_2(this$static.domId0, this$static.domId1).html_0);\n  __attachRecord__ = attachToDom(($clinit_DOM() , f_HTMLPanel1.element_0));\n  $get_0(this$static.domId0Element);\n  $get_0(this$static.domId1Element);\n  __attachRecord__.origParent?$insertBefore(__attachRecord__.origParent, __attachRecord__.element, __attachRecord__.origSibling):orphan(__attachRecord__.element);\n  $addAndReplaceElement_0(f_HTMLPanel1, (cbCategories = new MaterialCheckBox , $setTextOrHtml(cbCategories.directionalTextHelper, 'With Categories', false) , $setValue_8(cbCategories, ($clinit_Boolean() , $clinit_Boolean() , TRUE)) , $addValueChangeHandler_3(cbCategories, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1) , cbCategories), $get_0(this$static.domId0Element));\n  $addAndReplaceElement_0(f_HTMLPanel1, (table = this$static.owner.table , table.dataView.useCategories = true , undefined , $setSelectionType(table.dataView, 2) , castTo(table.dataView, 398).indexOffset = 20 , $setUseStickyHeader(table.dataView, true) , table.dataView.useLoadOverlay = false , table.height_0 = 'calc(100vh - 131px)' , table.setup && $(table.scaffolding.tableBody).height('calc(100vh - 131px)') , table), $get_0(this$static.domId1Element));\n  return f_HTMLPanel1;\n}\n\nfunction InfiniteTable_InfiniteGridUiBinderImpl$Widgets(owner){\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1 = new InfiniteTable_InfiniteGridUiBinderImpl$Widgets$1(this);\n  this.owner = owner;\n  this.domId0 = $createUniqueId($doc);\n  this.domId1 = $createUniqueId($doc);\n  this.domId0Element = new LazyDomElement(this.domId0);\n  this.domId1Element = new LazyDomElement(this.domId1);\n}\n\ndefineClass(1692, 1, {}, InfiniteTable_InfiniteGridUiBinderImpl$Widgets);\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_InfiniteTable_1InfiniteGridUiBinderImpl$Widgets_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'InfiniteTable_InfiniteGridUiBinderImpl/Widgets', 1692);\nfunction InfiniteTable_InfiniteGridUiBinderImpl$Widgets$1(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1693, 1, $intern_53, InfiniteTable_InfiniteGridUiBinderImpl$Widgets$1);\n_.onValueChange = function onValueChange_16(event_0){\n  $onCategories(this.this$11.owner, event_0);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_InfiniteTable_1InfiniteGridUiBinderImpl$Widgets$1_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'InfiniteTable_InfiniteGridUiBinderImpl/Widgets/1', 1693);\nfunction $html1_2(arg0, arg1){\n  var sb;\n  sb = new StringBuilder;\n  sb.string += \"<span id='\";\n  $append_3(sb, htmlEscape(arg0));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg1));\n  sb.string += \"'><\\/span>\";\n  return new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb.string);\n}\n\nfunction $setAbsoluteTotal(this$static, absoluteTotal){\n  this$static.absoluteTotal = absoluteTotal;\n}\n\nfunction People(){\n  $$init_3(this);\n}\n\ndefineClass(2143, 43, $intern_97, People);\n_.absoluteTotal = 0;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_People_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'People', 2143);\nfunction Person(id_0, firstName, lastName, email, phone, category){\n  this.id_0 = id_0;\n  this.picture = 'http://joashpereira.com/templates/material_one_pager/img/avatar1.png';\n  this.firstName = firstName;\n  this.lastName = lastName;\n  this.email = email;\n  this.phone = phone;\n  this.category = category;\n}\n\ndefineClass(98, 1, {2241:1, 98:1, 5:1}, Person);\n_.equals = function equals_20(o){\n  var person;\n  if (this === o)\n    return true;\n  if (o == null || Lgwt_material_design_demo_client_application_addins_datatable_table_Person_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))\n    return false;\n  person = castTo(o, 98);\n  if (this.id_0 != person.id_0)\n    return false;\n  if (this.firstName != null?!$equals_2(this.firstName, person.firstName):person.firstName != null)\n    return false;\n  if (this.lastName != null?!$equals_2(this.lastName, person.lastName):person.lastName != null)\n    return false;\n  if (this.phone != null?!$equals_2(this.phone, person.phone):person.phone != null)\n    return false;\n  return this.category != null?$equals_2(this.category, person.category):person.category == null;\n}\n;\n_.hashCode = function hashCode_22(){\n  var result;\n  result = this.id_0;\n  result = 31 * result + (this.firstName != null?getHashCode_0(this.firstName):0);\n  result = 31 * result + (this.lastName != null?getHashCode_0(this.lastName):0);\n  result = 31 * result + (this.phone != null?getHashCode_0(this.phone):0);\n  result = 31 * result + (this.category != null?getHashCode_0(this.category):0);\n  return result;\n}\n;\n_.id_0 = 0;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_Person_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'Person', 98);\nfunction $lambda$2_4(this$static){\n  $clinit_GWT();\n  this$static.table.dataView.refreshView();\n  return $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n\nfunction $onCategories_0(this$static, e){\n  unsafeCast(checkNotNull(castToBoolean(e.value_0)))?$setUseCategories_0(this$static.table, true):$setUseCategories_0(this$static.table, false);\n  $setRedraw(this$static.table.dataView);\n  this$static.table.dataView.refreshView();\n}\n\nfunction $onRowExpansion(this$static, e){\n  unsafeCast(checkNotNull(castToBoolean(e.value_0)))?$setUseRowExpansion_0(this$static.table, true):$setUseRowExpansion_0(this$static.table, false);\n  $setRedraw(this$static.table.dataView);\n  this$static.table.dataView.refreshView();\n}\n\nfunction $onSelection_1(this$static, e){\n  $equals_2(castToString(e.value_0), 'NONE')?$setSelectionType_1(this$static.table, 0):$equals_2(castToString(e.value_0), 'SINGLE')?$setSelectionType_1(this$static.table, 1):$equals_2(castToString(e.value_0), 'MULTIPLE') && $setSelectionType_1(this$static.table, 2);\n  $setRedraw(this$static.table.dataView);\n  this$static.table.dataView.refreshView();\n}\n\nfunction $onStickyHeader(this$static, e){\n  unsafeCast(checkNotNull(castToBoolean(e.value_0)))?$setUseStickyHeader_0(this$static.table, true):$setUseStickyHeader_0(this$static.table, false);\n  $setRedraw(this$static.table.dataView);\n  this$static.table.dataView.refreshView();\n}\n\nfunction StandardTable(){\n  $clinit_UIObject();\n  $initWidget(this, $build_f_HTMLPanel1_6(new StandardTable_StandardGridUiBinderImpl$Widgets(this)));\n}\n\ndefineClass(1493, $intern_38, $intern_39, StandardTable);\n_.onLoad = function onLoad_47(){\n  var i, k, people, rowIndex;\n  $setRowFactory_0(this.table, new PersonRowFactory);\n  $setCategoryFactory_0(this.table, new CustomCategoryFactory);\n  $setRenderer_0(this.table, new CustomRenderer);\n  $addColumn_2(this.table, new StandardTable$1);\n  $addColumn_3(this.table, new StandardTable$2, 'First Name');\n  $addColumn_3(this.table, new StandardTable$3, 'Last Name');\n  $addColumn_3(this.table, new StandardTable$4, 'Email');\n  $addColumn_3(this.table, new StandardTable$5, 'Phone');\n  $addColumn_2(this.table, new StandardTable$6);\n  $addColumn_2(this.table, new StandardTable$7);\n  $setVisibleRange_1(this.table.dataView, new Range_0(0, 2001), false);\n  rowIndex = 0;\n  people = new ArrayList;\n  for (k = 1; k <= 5; k++) {\n    for (i = 1; i <= 5; ++i , rowIndex++) {\n      $add_26(people, new Person(i, 'Field ' + rowIndex, 'Field ' + i, 'Field ' + rowIndex, 'No ' + i, 'Category ' + k));\n    }\n  }\n  $setRowData_1(this.table, people);\n  $addRowExpandHandler(this.table, makeLambdaFunction(StandardTable$lambda$0$Type.prototype.call_1, new StandardTable$lambda$0$Type));\n  $addRowSelectHandler(this.table, makeLambdaFunction(StandardTable$lambda$1$Type.prototype.call_5, new StandardTable$lambda$1$Type));\n  $addSortColumnHandler(this.table, makeLambdaFunction(StandardTable$lambda$2$Type.prototype.call_9, new StandardTable$lambda$2$Type(this)));\n  $addRowCountChangeHandler_1(this.table, makeLambdaFunction(StandardTable$lambda$3$Type.prototype.call_9, new StandardTable$lambda$3$Type));\n  $addCategoryOpenedHandler(this.table, makeLambdaFunction(StandardTable$lambda$4$Type.prototype.call_1, new StandardTable$lambda$4$Type));\n  $addCategoryClosedHandler(this.table, makeLambdaFunction(StandardTable$lambda$5$Type.prototype.call_1, new StandardTable$lambda$5$Type));\n  $addRowDoubleClickHandler(this.table, makeLambdaFunction(StandardTable$lambda$6$Type.prototype.call_5, new StandardTable$lambda$6$Type));\n  this.table.dataView.longPressDuration = 400;\n  $addRowLongPressHandler(this.table, makeLambdaFunction(StandardTable$lambda$7$Type.prototype.call_5, new StandardTable$lambda$7$Type));\n  $addRowShortPressHandler(this.table, makeLambdaFunction(StandardTable$lambda$8$Type.prototype.call_5, new StandardTable$lambda$8$Type));\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable', 1493);\nfunction $getValue_9(object){\n  var profile;\n  profile = new MaterialImage;\n  $setUrl_4(profile, object.picture);\n  ($clinit_DOM() , profile.element_0).style['width'] = '40px';\n  profile.element_0.style['height'] = '40px';\n  profile.element_0.style['padding'] = ($clinit_Style$Unit() , '4.0px');\n  profile.element_0.style['marginTop'] = '8.0px';\n  $setBackgroundColor_0((!profile.colorsMixin_0 && (profile.colorsMixin_0 = new ColorsMixin(profile)) , profile.colorsMixin_0), 'grey lighten-2');\n  $setOn((!profile.circleMixin && (profile.circleMixin = new ToggleStyleMixin(profile, 'circle')) , profile.circleMixin), true);\n  return profile;\n}\n\nfunction StandardTable$1(){\n  WidgetColumn.call(this);\n}\n\ndefineClass(1495, 169, $intern_124, StandardTable$1);\n_.getValue = function getValue_22(object){\n  return $getValue_9(castTo(object, 98));\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable$1_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable/1', 1495);\nfunction StandardTable$2(){\n  TextColumn_0.call(this);\n}\n\ndefineClass(1496, 233, $intern_123, StandardTable$2);\n_.getValue = function getValue_23(object){\n  return castTo(object, 98).firstName;\n}\n;\n_.getSortComparator = function getSortComparator_0(){\n  return new StandardTable$2$lambda$0$Type;\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable$2_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable/2', 1496);\nfunction StandardTable$2$lambda$0$Type(){\n}\n\ndefineClass(1497, 1, $intern_9, StandardTable$2$lambda$0$Type);\n_.compare = function compare_4(arg0, arg1){\n  return $compareToIgnoreCase(castTo(castTo(arg0, 101).data_0, 98).firstName, castTo(castTo(arg1, 101).data_0, 98).firstName);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable$2$lambda$0$Type_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable/2/lambda$0$Type', 1497);\nfunction StandardTable$3(){\n  TextColumn_0.call(this);\n}\n\ndefineClass(1498, 233, $intern_123, StandardTable$3);\n_.getValue = function getValue_24(object){\n  return castTo(object, 98).lastName;\n}\n;\n_.getSortComparator = function getSortComparator_1(){\n  return new StandardTable$3$lambda$0$Type;\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable$3_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable/3', 1498);\nfunction StandardTable$3$lambda$0$Type(){\n}\n\ndefineClass(1499, 1, $intern_9, StandardTable$3$lambda$0$Type);\n_.compare = function compare_5(arg0, arg1){\n  return $compareToIgnoreCase(castTo(castTo(arg0, 101).data_0, 98).lastName, castTo(castTo(arg1, 101).data_0, 98).lastName);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable$3$lambda$0$Type_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable/3/lambda$0$Type', 1499);\nfunction StandardTable$4(){\n  TextColumn_0.call(this);\n}\n\ndefineClass(1500, 233, $intern_123, StandardTable$4);\n_.getValue = function getValue_25(object){\n  return castTo(object, 98).email;\n}\n;\n_.getSortComparator = function getSortComparator_2(){\n  return new StandardTable$4$lambda$0$Type;\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable$4_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable/4', 1500);\nfunction StandardTable$4$lambda$0$Type(){\n}\n\ndefineClass(1501, 1, $intern_9, StandardTable$4$lambda$0$Type);\n_.compare = function compare_6(arg0, arg1){\n  return $compareToIgnoreCase(castTo(castTo(arg0, 101).data_0, 98).email, castTo(castTo(arg1, 101).data_0, 98).email);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable$4$lambda$0$Type_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable/4/lambda$0$Type', 1501);\nfunction StandardTable$5(){\n  TextColumn_0.call(this);\n}\n\ndefineClass(1502, 233, $intern_123, StandardTable$5);\n_.getValue = function getValue_26(object){\n  return castTo(object, 98).phone;\n}\n;\n_.getHideOn = function getHideOn_0(){\n  return $clinit_HideOn() , HIDE_ON_MED_DOWN;\n}\n;\n_.getSortComparator = function getSortComparator_3(){\n  return new StandardTable$5$lambda$0$Type;\n}\n;\n_.isNumeric = function isNumeric_0(){\n  return true;\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable$5_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable/5', 1502);\nfunction StandardTable$5$lambda$0$Type(){\n}\n\ndefineClass(1503, 1, $intern_9, StandardTable$5$lambda$0$Type);\n_.compare = function compare_7(arg0, arg1){\n  return $compareToIgnoreCase(castTo(castTo(arg0, 101).data_0, 98).phone, castTo(castTo(arg1, 101).data_0, 98).phone);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable$5$lambda$0$Type_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable/5/lambda$0$Type', 1503);\nfunction StandardTable$6(){\n  WidgetColumn.call(this);\n}\n\ndefineClass(1504, 169, $intern_124, StandardTable$6);\n_.getValue = function getValue_27(object){\n  var comboBox;\n  return castTo(object, 98) , comboBox = new MaterialComboBox , $addValue(comboBox, 'State 1', 'State 1') , $addValue(comboBox, 'State 2', 'State 2') , $addValue(comboBox, 'State 3', 'State 3') , $addValue(comboBox, 'State 4', 'State 4') , $addValue(comboBox, 'State 5', 'State 5') , comboBox;\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable$6_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable/6', 1504);\nfunction $getValue_10(object){\n  var badge;\n  badge = new MaterialBadge;\n  $setText_7(badge, 'badge ' + object.id_0);\n  $setBackgroundColor_0((!badge.colorsMixin_0 && (badge.colorsMixin_0 = new ColorsMixin(badge)) , badge.colorsMixin_0), 'blue');\n  $setLayoutPosition(badge, ($clinit_Style$Position() , RELATIVE));\n  return badge;\n}\n\nfunction StandardTable$7(){\n  WidgetColumn.call(this);\n}\n\ndefineClass(1505, 169, $intern_124, StandardTable$7);\n_.getValue = function getValue_28(object){\n  return $getValue_10(castTo(object, 98));\n}\n;\n_.getTextAlign = function getTextAlign_0(){\n  return $clinit_TextAlign() , CENTER_5;\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable$7_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable/7', 1505);\nfunction StandardTable$8(val$rowExpand, val$section){\n  this.val$rowExpand2 = val$rowExpand;\n  this.val$section3 = val$section;\n  Timer.call(this);\n}\n\ndefineClass(1506, 129, {}, StandardTable$8);\n_.run = function run_6(){\n  var badge, btn, content_0, icon, textBox;\n  content_0 = new MaterialWidget_0(this.val$rowExpand2.row.find('.content').empty().get(0));\n  badge = new MaterialBadge_0;\n  ($clinit_DOM() , badge.element_0).style['position'] = ($clinit_Style$Position() , 'relative');\n  badge.element_0.style['right'] = ($clinit_Style$Unit() , '0.0px');\n  $setFontSize(badge, 12, PX);\n  $add_1(content_0, badge, content_0.element_0);\n  btn = new MaterialButton_1(($clinit_ButtonType() , RAISED), new MaterialIcon_0(($clinit_IconType() , FULLSCREEN_0)));\n  $add_1(content_0, btn, content_0.element_0);\n  textBox = new MaterialTextBox;\n  $setText_2(textBox.valueBoxBase, ' from an asynchronous');\n  ($clinit_String() , ' from an asynchronous'.length) != 0 && $addStyleName(textBox.label_1, 'active');\n  $setGwtDisplay(textBox, ($clinit_Style$Display() , INLINE_TABLE));\n  textBox.element_0.style['width'] = '200px';\n  $add_1(content_0, textBox, content_0.element_0);\n  icon = new MaterialIcon_0(CALL);\n  icon.element_0.style['position'] = 'relative';\n  icon.element_0.style['top'] = '12.0px';\n  $add_1(content_0, icon, content_0.element_0);\n  this.val$section3.css('display', 'none');\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable$8_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable/8', 1506);\nfunction StandardTable$CustomCategoryComponent(category){\n  CategoryComponent.call(this, category);\n}\n\ndefineClass(1494, 117, $intern_121, StandardTable$CustomCategoryComponent);\n_.render_3 = function render_15(subheader){\n  $setOpenIcon(subheader, ($clinit_IconType() , FOLDER_OPEN));\n  $setCloseIcon(subheader, FOLDER);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable$CustomCategoryComponent_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable/CustomCategoryComponent', 1494);\nfunction StandardTable$lambda$0$Type(){\n}\n\ndefineClass(1507, $wnd.Function, {}, StandardTable$lambda$0$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_1 = function call_51(arg0, arg1){\n  var section;\n  return section = arg1.overlay , arg1.expand && $schedule(new StandardTable$8(arg1, section), 2000) , $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable$lambda$0$Type_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable/lambda$0$Type', 1507);\nfunction StandardTable$lambda$1$Type(){\n}\n\ndefineClass(1508, $wnd.Function, {}, StandardTable$lambda$1$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_5 = function call_52(arg0, arg1, arg2, arg3){\n  return $clinit_UIObject() , castTo(arg1, 98).id_0 + ': ' + castToBoolean(arg3) , $clinit_GWT() , $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable$lambda$1$Type_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable/lambda$1$Type', 1508);\nfunction StandardTable$lambda$2$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1509, $wnd.Function, {}, StandardTable$lambda$2$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_9 = function call_53(arg0, arg1, arg2){\n  return $lambda$2_4(this.$$outer_0);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable$lambda$2$Type_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable/lambda$2$Type', 1509);\nfunction StandardTable$lambda$3$Type(){\n}\n\ndefineClass(1510, $wnd.Function, {}, StandardTable$lambda$3$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_9 = function call_54(arg0, arg1, arg2){\n  return $clinit_UIObject() , $clinit_GWT() , 'Row Count Changed: ' + castTo(arg1, 207) + ', isExact: ' + castToBoolean(arg2) , $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable$lambda$3$Type_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable/lambda$3$Type', 1510);\nfunction StandardTable$lambda$4$Type(){\n}\n\ndefineClass(1511, $wnd.Function, {}, StandardTable$lambda$4$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_1 = function call_55(arg0, arg1){\n  return $clinit_UIObject() , $clinit_GWT() , 'Category Opened: ' + castToString(arg1) , $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable$lambda$4$Type_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable/lambda$4$Type', 1511);\nfunction StandardTable$lambda$5$Type(){\n}\n\ndefineClass(1512, $wnd.Function, {}, StandardTable$lambda$5$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_1 = function call_56(arg0, arg1){\n  return $clinit_UIObject() , $clinit_GWT() , 'Category Closed: ' + castToString(arg1) , $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable$lambda$5$Type_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable/lambda$5$Type', 1512);\nfunction StandardTable$lambda$6$Type(){\n}\n\ndefineClass(1513, $wnd.Function, {}, StandardTable$lambda$6$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_5 = function call_57(arg0, arg1, arg2, arg3){\n  return $clinit_UIObject() , alert_0('Row Double Clicked: ' + castTo(arg2, 98).id_0) , $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable$lambda$6$Type_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable/lambda$6$Type', 1513);\nfunction StandardTable$lambda$7$Type(){\n}\n\ndefineClass(1514, $wnd.Function, {}, StandardTable$lambda$7$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_5 = function call_58(arg0, arg1, arg2, arg3){\n  return $clinit_UIObject() , $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable$lambda$7$Type_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable/lambda$7$Type', 1514);\nfunction StandardTable$lambda$8$Type(){\n}\n\ndefineClass(1515, $wnd.Function, {}, StandardTable$lambda$8$Type);\ncopyObjectProperties(prototypesByTypeId_0[1], _);\n_.call_5 = function call_59(arg0, arg1, arg2, arg3){\n  return $clinit_UIObject() , $clinit_Boolean() , $clinit_Boolean() , TRUE;\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable$lambda$8$Type_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable/lambda$8$Type', 1515);\nfunction $build_f_HTMLPanel1_6(this$static){\n  var __attachRecord__, f_HTMLPanel1, f_MaterialRow2, table, f_MaterialColumn3, cbCategories, f_MaterialColumn4, cbStickyHeader, f_MaterialColumn5, cbRowExpansion, listSelectionType, f_html$Option6, f_html$Option7, f_html$Option8;\n  f_HTMLPanel1 = new HTMLPanel($html1_3(this$static.domId0, this$static.domId1).html_0);\n  __attachRecord__ = attachToDom(($clinit_DOM() , f_HTMLPanel1.element_0));\n  $get_0(this$static.domId0Element);\n  $get_0(this$static.domId1Element);\n  __attachRecord__.origParent?$insertBefore(__attachRecord__.origParent, __attachRecord__.element, __attachRecord__.origSibling):orphan(__attachRecord__.element);\n  $addAndReplaceElement_0(f_HTMLPanel1, (f_MaterialRow2 = new MaterialRow , $add_15(f_MaterialRow2, (f_MaterialColumn3 = new MaterialColumn , $add_15(f_MaterialColumn3, (cbCategories = new MaterialCheckBox , $setTextOrHtml(cbCategories.directionalTextHelper, 'With Categories', false) , $setType_3(cbCategories, ($clinit_CheckBoxType() , FILLED)) , $setValue_8(cbCategories, ($clinit_Boolean() , $clinit_Boolean() , TRUE)) , $addValueChangeHandler_3(cbCategories, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1) , cbCategories)) , $setGrid((!f_MaterialColumn3.gridMixin_0 && (f_MaterialColumn3.gridMixin_0 = new GridMixin(f_MaterialColumn3)) , f_MaterialColumn3.gridMixin_0), 's3') , f_MaterialColumn3.element_0.style['marginTop'] = ($clinit_Style$Unit() , '28.0px') , f_MaterialColumn3)) , $add_15(f_MaterialRow2, (f_MaterialColumn4 = new MaterialColumn , $add_15(f_MaterialColumn4, (cbStickyHeader = new MaterialCheckBox , $setTextOrHtml(cbStickyHeader.directionalTextHelper, 'With Sticky Header', false) , $setType_3(cbStickyHeader, FILLED) , $setValue_8(cbStickyHeader, (null , TRUE)) , $addValueChangeHandler_3(cbStickyHeader, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames2) , cbStickyHeader)) , $setGrid((!f_MaterialColumn4.gridMixin_0 && (f_MaterialColumn4.gridMixin_0 = new GridMixin(f_MaterialColumn4)) , f_MaterialColumn4.gridMixin_0), 's3') , f_MaterialColumn4.element_0.style['marginTop'] = '28.0px' , f_MaterialColumn4)) , $add_15(f_MaterialRow2, (f_MaterialColumn5 = new MaterialColumn , $add_15(f_MaterialColumn5, (cbRowExpansion = new MaterialCheckBox , $setTextOrHtml(cbRowExpansion.directionalTextHelper, 'With Row Expansion', false) , $setType_3(cbRowExpansion, FILLED) , $setValue_8(cbRowExpansion, (null , TRUE)) , $addValueChangeHandler_3(cbRowExpansion, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames3) , cbRowExpansion)) , $setGrid((!f_MaterialColumn5.gridMixin_0 && (f_MaterialColumn5.gridMixin_0 = new GridMixin(f_MaterialColumn5)) , f_MaterialColumn5.gridMixin_0), 's3') , f_MaterialColumn5.element_0.style['marginTop'] = '28.0px' , f_MaterialColumn5)) , $add_15(f_MaterialRow2, (listSelectionType = new MaterialComboBox , $add_17(listSelectionType, (f_html$Option6 = new Option_0 , f_html$Option6.element_0.text = 'NONE' , f_html$Option6)) , $add_17(listSelectionType, (f_html$Option7 = new Option_0 , f_html$Option7.element_0.text = 'SINGLE' , f_html$Option7)) , $add_17(listSelectionType, (f_html$Option8 = new Option_0 , f_html$Option8.element_0.text = 'MULTIPLE' , f_html$Option8)) , $setGrid((!listSelectionType.gridMixin_0 && (listSelectionType.gridMixin_0 = new GridMixin(listSelectionType)) , listSelectionType.gridMixin_0), 's3') , $setText_11(listSelectionType.label_0, 'Selection Type') , listSelectionType.hideSearch = false , $addHandler_0(listSelectionType, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames4, (!TYPE_20 && (TYPE_20 = new GwtEvent$Type) , TYPE_20)) , listSelectionType)) , f_MaterialRow2), $get_0(this$static.domId0Element));\n  $addAndReplaceElement_0(f_HTMLPanel1, (table = new MaterialDataTable , table.dataView.useCategories = true , undefined , $setSelectionType(table.dataView, 1) , $setShadow_0((!table.shadowMixin && (table.shadowMixin = new ShadowMixin(table)) , table.shadowMixin), 1) , $setUseStickyHeader(table.dataView, true) , table.dataView.useRowExpansion = true , undefined , table.height_0 = 'calc(100vh - 131px)' , table.setup && $(table.scaffolding.tableBody).height('calc(100vh - 131px)') , this$static.owner.table = table , table), $get_0(this$static.domId1Element));\n  return f_HTMLPanel1;\n}\n\nfunction StandardTable_StandardGridUiBinderImpl$Widgets(owner){\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1 = new StandardTable_StandardGridUiBinderImpl$Widgets$1(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames2 = new StandardTable_StandardGridUiBinderImpl$Widgets$2(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames3 = new StandardTable_StandardGridUiBinderImpl$Widgets$3(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames4 = new StandardTable_StandardGridUiBinderImpl$Widgets$4(this);\n  this.owner = owner;\n  this.domId0 = $createUniqueId($doc);\n  this.domId1 = $createUniqueId($doc);\n  this.domId0Element = new LazyDomElement(this.domId0);\n  this.domId1Element = new LazyDomElement(this.domId1);\n}\n\ndefineClass(1653, 1, {}, StandardTable_StandardGridUiBinderImpl$Widgets);\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable_1StandardGridUiBinderImpl$Widgets_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable_StandardGridUiBinderImpl/Widgets', 1653);\nfunction StandardTable_StandardGridUiBinderImpl$Widgets$1(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1654, 1, $intern_53, StandardTable_StandardGridUiBinderImpl$Widgets$1);\n_.onValueChange = function onValueChange_17(event_0){\n  $onCategories_0(this.this$11.owner, event_0);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable_1StandardGridUiBinderImpl$Widgets$1_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable_StandardGridUiBinderImpl/Widgets/1', 1654);\nfunction StandardTable_StandardGridUiBinderImpl$Widgets$2(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1655, 1, $intern_53, StandardTable_StandardGridUiBinderImpl$Widgets$2);\n_.onValueChange = function onValueChange_18(event_0){\n  $onStickyHeader(this.this$11.owner, event_0);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable_1StandardGridUiBinderImpl$Widgets$2_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable_StandardGridUiBinderImpl/Widgets/2', 1655);\nfunction StandardTable_StandardGridUiBinderImpl$Widgets$3(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1656, 1, $intern_53, StandardTable_StandardGridUiBinderImpl$Widgets$3);\n_.onValueChange = function onValueChange_19(event_0){\n  $onRowExpansion(this.this$11.owner, event_0);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable_1StandardGridUiBinderImpl$Widgets$3_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable_StandardGridUiBinderImpl/Widgets/3', 1656);\nfunction StandardTable_StandardGridUiBinderImpl$Widgets$4(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1657, 1, $intern_53, StandardTable_StandardGridUiBinderImpl$Widgets$4);\n_.onValueChange = function onValueChange_20(event_0){\n  $onSelection_1(this.this$11.owner, event_0);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_StandardTable_1StandardGridUiBinderImpl$Widgets$4_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table', 'StandardTable_StandardGridUiBinderImpl/Widgets/4', 1657);\nfunction $html1_3(arg0, arg1){\n  var sb;\n  sb = new StringBuilder;\n  sb.string += \"<span id='\";\n  $append_3(sb, htmlEscape(arg0));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg1));\n  sb.string += \"'><\\/span>\";\n  return new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb.string);\n}\n\nfunction $load_1(dataView, startIndex, viewSize, categories){\n  var category, category$iterator, categoryNames;\n  categoryNames = null;\n  if (dataView.useCategories) {\n    categoryNames = new ArrayList;\n    for (category$iterator = new ArrayList$1(categories); category$iterator.i < category$iterator.this$01.array.length;) {\n      category = castTo($next_7(category$iterator), 117);\n      $add_26(categoryNames, category.category);\n    }\n  }\n  $getPeople(startIndex, viewSize, categoryNames, new PersonDataSource$1(dataView, startIndex));\n}\n\nfunction $onSuccess_1(this$static, people){\n  $loaded(this$static.val$dataView2, this$static.val$startIndex3, people, people.absoluteTotal, true);\n}\n\nfunction PersonDataSource$1(val$dataView, val$startIndex){\n  this.val$dataView2 = val$dataView;\n  this.val$startIndex3 = val$startIndex;\n}\n\ndefineClass(1594, 1, {}, PersonDataSource$1);\n_.val$startIndex3 = 0;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_datasource_PersonDataSource$1_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table.datasource', 'PersonDataSource/1', 1594);\nfunction CustomCategoryFactory(){\n}\n\ndefineClass(1823, 1822, {}, CustomCategoryFactory);\n_.generate = function generate_1(categoryName){\n  var category;\n  category = categoryName != null?new CategoryComponent(categoryName):new CategoryComponent$OrphanCategoryComponent;\n  instanceOf(category, 255) || (category = new StandardTable$CustomCategoryComponent(categoryName));\n  return category;\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_factory_CustomCategoryFactory_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table.factory', 'CustomCategoryFactory', 1823);\nfunction $generate(model){\n  return new RowComponent_0(model, model.category);\n}\n\nfunction PersonRowFactory(){\n}\n\ndefineClass(1821, 1820, {}, PersonRowFactory);\n_.generate_0 = function generate_2(model){\n  return $generate(castTo(model, 98));\n}\n;\n_.getCategory = function getCategory_0(model){\n  return castTo(model, 98).category;\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_factory_PersonRowFactory_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table.factory', 'PersonRowFactory', 1821);\nfunction CustomRenderer(){\n  BaseRenderer.call(this);\n}\n\ndefineClass(1824, 409, {}, CustomRenderer);\n_.drawSelectionCell = function drawSelectionCell_0(){\n  var checkBox, td;\n  td = new TableData;\n  $setId_1((!td.idMixin && (td.idMixin = new IdMixin(td)) , td.idMixin), 'col0');\n  checkBox = new MaterialCheckBox_0(($clinit_DOM() , td.element_0));\n  $setType_3(checkBox, ($clinit_CheckBoxType() , FILLED));\n  return td;\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_renderer_CustomRenderer_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table.renderer', 'CustomRenderer', 1824);\nfunction $clinit_FakePersonService(){\n  $clinit_FakePersonService = emptyMethod;\n  var category, category$iterator, data_0, i, index_0;\n  categories_0 = new ArrayList;\n  peopleMap = new HashMap;\n  $add_26(categories_0, 'People');\n  $add_26(categories_0, 'Animal');\n  $add_26(categories_0, 'Plant');\n  $add_26(categories_0, 'Other');\n  $add_26(categories_0, 'Next');\n  index_0 = 0;\n  for (category$iterator = new ArrayList$1(categories_0); category$iterator.i < category$iterator.this$01.array.length;) {\n    category = castToString($next_7(category$iterator));\n    for (i = 0; i < 100; ++i , index_0++) {\n      data_0 = castTo($getStringValue(peopleMap, category), 94);\n      if (!data_0) {\n        data_0 = new ArrayList;\n        $putStringValue(peopleMap, category, data_0);\n      }\n      data_0.add_1(new Person(i, 'Field ' + index_0, 'Field ' + i, 'Field ' + index_0, 'No ' + i, 'Category ' + category));\n    }\n  }\n}\n\nfunction $getPeople(startIndex, viewSize, categories, async){\n  var category, category$iterator, flatData, i, people, person, person$iterator;\n  flatData = new ArrayList;\n  if (!categories) {\n    for (category$iterator = new ArrayList$1(categories_0); category$iterator.i < category$iterator.this$01.array.length;) {\n      category = castToString($next_7(category$iterator));\n      $addAll_0(flatData, castTo($getStringValue(peopleMap, category), 99));\n    }\n  }\n   else {\n    for (category$iterator = new ArrayList$1(categories); category$iterator.i < category$iterator.this$01.array.length;) {\n      category = castToString($next_7(category$iterator));\n      for (person$iterator = castTo($getStringValue(peopleMap, category), 94).iterator(); person$iterator.hasNext_0();) {\n        person = castTo(person$iterator.next_1(), 98);\n        flatData.array[flatData.array.length] = person;\n      }\n    }\n  }\n  people = new People;\n  for (i = startIndex; i < startIndex + viewSize; i++) {\n    try {\n      $add_26(people, (checkCriticalElementIndex(i, flatData.array.length) , castTo(flatData.array[i], 98)));\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (!instanceOf($e0, 90))\n        throw unwrap($e0);\n    }\n  }\n  $setAbsoluteTotal(people, flatData.array.length);\n  $schedule(new FakePersonService$1(async, people), min_1(200, nextInt(500)));\n}\n\nvar categories_0, peopleMap;\nfunction FakePersonService$1(val$async, val$people){\n  this.val$async2 = val$async;\n  this.val$people3 = val$people;\n  Timer.call(this);\n}\n\ndefineClass(1658, 129, {}, FakePersonService$1);\n_.run = function run_7(){\n  $onSuccess_1(this.val$async2, this.val$people3);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_service_FakePersonService$1_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table.service', 'FakePersonService/1', 1658);\nfunction FakePersonService$2(val$async){\n  this.val$async2 = val$async;\n  Timer.call(this);\n}\n\ndefineClass(1659, 129, {}, FakePersonService$2);\n_.run = function run_8(){\n  $onSuccess_0(this.val$async2, ($clinit_FakePersonService() , categories_0));\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_datatable_table_service_FakePersonService$2_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.datatable.table.service', 'FakePersonService/2', 1659);\n$entry(onLoad_0)(5);\n\n//# sourceURL=gwtmaterialdemo-5.js\n")
