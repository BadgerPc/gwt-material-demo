$wnd.gwtmaterialdemo.runAsyncCallback1('function $clinit_MaterialAvatar(){\n  $clinit_MaterialAvatar = emptyMethod;\n  !startupState && (startupState = new StartupState$DebugState);\n  if (startupState) {\n    $clinit_MaterialDesignBase();\n    injectJs(($clinit_MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$jdenticonDebugJsInitializer() , jdenticonDebugJs), false, true);\n    injectJs(($clinit_MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$md5DebugJsInitializer() , md5DebugJs), false, true);\n  }\n   else {\n    $clinit_MaterialDesignBase();\n    injectJs(($clinit_MaterialAvatarClientBundle_default_InlineClientBundleGenerator$jdenticonJsInitializer() , jdenticonJs), true, false);\n    injectJs(($clinit_MaterialAvatarClientBundle_default_InlineClientBundleGenerator$md5JsInitializer() , md5Js), true, false);\n  }\n}\n\nfunction $initialize(this$static){\n  if (this$static.name_0 != null) {\n    $setAttribute(($clinit_DOM() , this$static.element_0), \'data-jdenticon-hash\', $wnd.md5(this$static.name_0));\n    $wnd.jdenticon();\n  }\n}\n\nfunction $setName(this$static, name_0){\n  this$static.name_0 = name_0;\n}\n\nfunction MaterialAvatar(){\n  $clinit_MaterialAvatar();\n  MaterialWidget_0.call(this, $doc.createElement(\'canvas\'));\n}\n\ndefineClass(616, 24, $intern_63, MaterialAvatar);\n_.initialize_0 = function initialize_0(){\n  $initialize(this);\n}\n;\n_.setHeight_0 = function setHeight_2(height){\n  $setAttribute(($clinit_DOM() , this.element_0), \'height\', height);\n}\n;\n_.setWidth_0 = function setWidth_2(width_0){\n  $setAttribute(($clinit_DOM() , this.element_0), \'width\', width_0);\n}\n;\nvar Lgwt_material_design_addins_client_avatar_MaterialAvatar_2_classLit = createForClass(\'gwt.material.design.addins.client.avatar\', \'MaterialAvatar\', 616);\nvar jdenticonJs, md5Js;\nfunction MaterialAvatarClientBundle_default_InlineClientBundleGenerator$1(){\n}\n\ndefineClass(2349, 1, {}, MaterialAvatarClientBundle_default_InlineClientBundleGenerator$1);\n_.getName = function getName_10(){\n  return \'jdenticonJs\';\n}\n;\n_.getText = function getText_1(){\n  return \'// Jdenticon 1.3.2 | jdenticon.com | zlib licensed | (c) 2014-2015 Daniel Mester Pirttij\\xE4rvi\\r\\n(function(k,g,h){var l=h(k,k.jQuery);"undefined"!==typeof module&&"exports"in module?module.exports=l:"function"===typeof define&&define.amd?define([],function(){return l}):k[g]=l})(this,"jdenticon",function(k,g){function h(b,a){this.x=b;this.y=a}function l(b,a,c,d){this.o=b;this.s=a;this.f=c;this.l=d}function A(b){this.C=b;this.m=l.O}function m(b){b|=0;return 0>b?"00":16>b?"0"+b.toString(16):256>b?b.toString(16):"ff"}function q(b,a,c){c=0>c?c+6:6<c?c-6:c;return m(255*(1>c?b+(a-b)*c:3>c?a:4>c?b+(a-\\r\\nb)*(4-c):b))}function D(b,a){return[n.w(0,0,a.H(0)),n.v(b,a.A,a.u(.5)),n.w(0,0,a.H(1)),n.v(b,a.A,a.u(1)),n.v(b,a.A,a.u(0))]}function r(b,a,c,d,t){var f=0,u=0;function v(c,d,t,e,g){e=e?parseInt(a.charAt(e),16):0;d=d[parseInt(a.charAt(t),16)%d.length];b.F(n[m[c]]);for(c=0;c<g.length;c++)k.m=new l(f+g[c][0]*h,u+g[c][1]*h,h,e++%4),d(k,h,c);b.G()}function e(a){if(0<=a.indexOf(g))for(var b=0;b<a.length;b++)if(0<=m.indexOf(a[b]))return!0}d=c*(void 0===d?.08:d)|0;c-=2*d;if(30>c)throw Error("Jdenticon cannot render identicons smaller than 30 pixels.");\\r\\nif(!/^[0-9a-f]{11,}$/i.test(a))throw Error("Invalid hash passed to Jdenticon.");var k=new A(b),h=0|c/4,f=f+(0|d+c/2-2*h),u=u+(0|d+c/2-2*h),n=D(parseInt(a.substr(-7),16)/268435455,t),m=[],g;for(c=0;3>c;c++){g=parseInt(a.charAt(8+c),16)%n.length;if(e([0,4])||e([2,3]))g=1;m.push(g)}v(0,w.J,2,3,[[1,0],[2,0],[2,3],[1,3],[0,1],[3,1],[3,2],[0,2]]);v(1,w.J,4,5,[[0,0],[3,0],[3,3],[0,3]]);v(2,w.N,1,null,[[1,1],[2,1],[2,2],[1,2]])}function B(){this.i=""}function x(b,a){this.j={};this.f={M:b,I:a}}function y(b,\\r\\na,c){this.h=b;b.clearRect(0,0,a,c)}function z(){function b(a,b,f){var e=c[a]instanceof Array?c[a]:[b,f];return function(a){a=e[0]+a*(e[1]-e[0]);return 0>a?0:1<a?1:a}}var a=e.config||k.jdenticon_config||{},c=a.lightness||{},a=a.saturation;return{A:"number"==typeof a?a:.5,u:b("color",.4,.8),H:b("grayscale",.3,.9)}}function p(b,a,c){if("string"===typeof b){if(C){b=document.querySelectorAll(b);for(var d=0;d<b.length;d++)p(b[d],a,c)}}else if(b&&b.tagName&&(a=a||b.getAttribute("data-jdenticon-hash"))){var e=\\r\\n"svg"==b.tagName.toLowerCase(),d="canvas"==b.tagName.toLowerCase();if(e||d&&"getContext"in b){var d=Number(b.getAttribute("width"))||b.clientWidth||0,f=Number(b.getAttribute("height"))||b.clientHeight||0,g=e?new x(d,f):new y(b.getContext("2d"),d,f);r(g,a,Math.min(d,f),c,z());if(e){a=document.createElement("span");for(a.innerHTML=g.K(!1);b.firstChild;)b.removeChild(b.firstChild);for(a=a.firstChild.childNodes;a.length;)b.appendChild(a[0]);b.setAttribute("viewBox","0 0 "+d+" "+f)}}}}function e(){C&&\\r\\np("svg[data-jdenticon-hash],canvas[data-jdenticon-hash]")}l.prototype={L:function(b,a,c,d){var e=this.o+this.f,f=this.s+this.f;return 1===this.l?new h(e-a-(d||0),this.s+b):2===this.l?new h(e-b-(c||0),f-a-(d||0)):3===this.l?new h(this.o+a,f-b-(c||0)):new h(this.o+b,this.s+a)}};l.O=new l(0,0,0,0);A.prototype={a:function(b,a){var c=a?-2:2,d=this.m,e=[],f;for(f=a?b.length-2:0;f<b.length&&0<=f;f+=c)e.push(d.L(b[f],b[f+1]));this.C.a(e)},b:function(b,a,c,d){this.C.b(this.m.L(b,a,c,c),c,d)},c:function(b,\\r\\na,c,d,e){this.a([b,a,b+c,a,b+c,a+d,b,a+d],e)},g:function(b,a,c,d,e,f){b=[b+c,a,b+c,a+d,b,a+d,b,a];b.splice((e||0)%4*2,2);this.a(b,f)},D:function(b,a,c,d,e){this.a([b+c/2,a,b+c,a+d/2,b+c/2,a+d,b,a+d/2],e)}};var w={N:[function(b,a){var c=.42*a;b.a([0,0,a,0,a,a-2*c,a-c,a,0,a])},function(b,a){var c=0|.5*a;b.g(a-c,0,c,0|.8*a,2)},function(b,a){var c=0|a/3;b.c(c,c,a-c,a-c)},function(b,a){var c=0|.1*a,d=0|.25*a;b.c(d,d,a-c-d,a-c-d)},function(b,a){var c=0|.15*a,d=0|.5*a;b.b(a-d-c,a-d-c,d)},function(b,a){var c=\\r\\n.1*a,d=4*c;b.c(0,0,a,a);b.a([d,d,a-c,d,d+(a-d-c)/2,a-c],!0)},function(b,a){b.a([0,0,a,0,a,.7*a,.4*a,.4*a,.7*a,a,0,a])},function(b,a){b.g(a/2,a/2,a/2,a/2,3)},function(b,a){b.c(0,0,a,a/2);b.c(0,a/2,a/2,a/2);b.g(a/2,a/2,a/2,a/2,1)},function(b,a){var c=0|.14*a,d=0|.35*a;b.c(0,0,a,a);b.c(d,d,a-d-c,a-d-c,!0)},function(b,a){var c=.12*a,d=3*c;b.c(0,0,a,a);b.b(d,d,a-c-d,!0)},function(b,a){b.g(a/2,a/2,a/2,a/2,3)},function(b,a){var c=.25*a;b.c(0,0,a,a);b.D(c,c,a-c,a-c,!0)},function(b,a,c){var d=.4*a;c||b.b(d,\\r\\nd,1.2*a)}],J:[function(b,a){b.g(0,0,a,a,0)},function(b,a){b.g(0,a/2,a,a/2,0)},function(b,a){b.D(0,0,a,a)},function(b,a){var c=a/6;b.b(c,c,a-2*c)}]},n={P:function(b,a,c){return"#"+m(b)+m(a)+m(c)},w:function(b,a,c){if(0==a)return b=m(255*c),"#"+b+b+b;a=.5>=c?c*(a+1):c+a-c*a;c=2*c-a;return"#"+q(c,a,6*b+2)+q(c,a,6*b)+q(c,a,6*b-2)},v:function(b,a,c){var d=[.55,.5,.5,.46,.6,.55,.55][6*b+.5|0];return n.w(b,a,.5>c?c*d*2:d+(c-.5)*(1-d)*2)}};B.prototype={a:function(b){for(var a="M"+b[0].x+" "+b[0].y,c=1;c<\\r\\nb.length;c++)a+="L"+b[c].x+" "+b[c].y;this.i+=a+"Z"},b:function(b,a,c){c=c?0:1;var d=a/2;this.i+="M"+b.x+" "+(b.y+d)+"a"+d+","+d+" 0 1,"+c+" "+a+",0a"+d+","+d+" 0 1,"+c+" "+-a+",0"}};x.prototype={F:function(b){this.B=this.j[b]||(this.j[b]=new B)},G:function(){},a:function(b){this.B.a(b)},b:function(b,a,c){this.B.b(b,a,c)},K:function(b){var a=b?"":\\\'<svg xmlns="http://www.w3.org/2000/svg" width="\\\'+this.f.M+\\\'" height="\\\'+this.f.I+\\\'" viewBox="0 0 \\\'+this.f.M+" "+this.f.I+\\\'" preserveAspectRatio="xMidYMid meet">\\\',\\r\\nc;for(c in this.j)a+=\\\'<path fill="\\\'+c+\\\'" d="\\\'+this.j[c].i+\\\'"/>\\\';return b?a:a+"<\\/svg>"}};y.prototype={F:function(b){this.h.fillStyle=b;this.h.beginPath()},G:function(){this.h.fill()},a:function(b){var a=this.h,c;a.moveTo(b[0].x,b[0].y);for(c=1;c<b.length;c++)a.lineTo(b[c].x,b[c].y);a.closePath()},b:function(b,a,c){var d=this.h;a/=2;d.arc(b.x+a,b.y+a,a,0,2*Math.PI,c);d.closePath()}};var C="document"in k&&"querySelectorAll"in document;e.drawIcon=function(b,a,c){if(!b)throw Error("No canvas specified.");\\r\\nb=new y(b,c,c);r(b,a,c,0,z())};e.toSvg=function(b,a,c){var d=new x(a,a);r(d,b,a,c,z());return d.K()};e.update=p;e.version="1.3.2";g&&(g.fn.jdenticon=function(b,a){this.each(function(c,d){p(d,b,a)});return this});"function"===typeof setTimeout&&setTimeout(e,0);return e});\';\n}\n;\nvar Lgwt_material_design_addins_client_avatar_MaterialAvatarClientBundle_1default_1InlineClientBundleGenerator$1_2_classLit = createForClass(\'gwt.material.design.addins.client.avatar\', \'MaterialAvatarClientBundle_default_InlineClientBundleGenerator/1\', 2349);\nfunction MaterialAvatarClientBundle_default_InlineClientBundleGenerator$2(){\n}\n\ndefineClass(2350, 1, {}, MaterialAvatarClientBundle_default_InlineClientBundleGenerator$2);\n_.getName = function getName_11(){\n  return \'md5Js\';\n}\n;\n_.getText = function getText_2(){\n  return \'/**\\r\\n * [js-md5]{@link https://github.com/emn178/js-md5}\\r\\n *\\r\\n * @namespace md5\\r\\n * @version 0.4.0\\r\\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\\r\\n * @copyright Chen, Yi-Cyuan 2014-2016\\r\\n * @license MIT\\r\\n */\\r\\n!function(t){"use strict";function r(t){if(t)c[0]=c[16]=c[1]=c[2]=c[3]=c[4]=c[5]=c[6]=c[7]=c[8]=c[9]=c[10]=c[11]=c[12]=c[13]=c[14]=c[15]=0,this.blocks=c,this.buffer8=i;else if(n){var r=new ArrayBuffer(68);this.buffer8=new Uint8Array(r),this.blocks=new Uint32Array(r)}else this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];this.h0=this.h1=this.h2=this.h3=this.start=this.bytes=0,this.finalized=this.hashed=!1,this.first=!0}var e="object"==typeof process&&process.versions&&process.versions.node;e&&(t=global);var i,h=!t.JS_MD5_TEST&&"object"==typeof module&&module.exports,s="function"==typeof define&&define.amd,n=!t.JS_MD5_TEST&&"undefined"!=typeof ArrayBuffer,f="0123456789abcdef".split(""),a=[128,32768,8388608,-2147483648],o=[0,8,16,24],u=["hex","array","digest","buffer","arrayBuffer"],c=[];if(n){var p=new ArrayBuffer(68);i=new Uint8Array(p),c=new Uint32Array(p)}var y=function(t){return function(e){return new r(!0).update(e)[t]()}},d=function(){var t=y("hex");e&&(t=l(t)),t.create=function(){return new r},t.update=function(r){return t.create().update(r)};for(var i=0;i<u.length;++i){var h=u[i];t[h]=y(h)}return t},l=function(r){var e,i;try{if(t.JS_MD5_TEST)throw"JS_MD5_TEST";e=require("crypto"),i=require("buffer").Buffer}catch(h){return console.log(h),r}var s=function(t){if("string"==typeof t)return e.createHash("md5").update(t,"utf8").digest("hex");if(t.constructor==ArrayBuffer)t=new Uint8Array(t);else if(void 0===t.length)return r(t);return e.createHash("md5").update(new i(t)).digest("hex")};return s};r.prototype.update=function(r){if(!this.finalized){var e="string"!=typeof r;e&&r.constructor==t.ArrayBuffer&&(r=new Uint8Array(r));for(var i,h,s=0,f=r.length||0,a=this.blocks,u=this.buffer8;f>s;){if(this.hashed&&(this.hashed=!1,a[0]=a[16],a[16]=a[1]=a[2]=a[3]=a[4]=a[5]=a[6]=a[7]=a[8]=a[9]=a[10]=a[11]=a[12]=a[13]=a[14]=a[15]=0),e)if(n)for(h=this.start;f>s&&64>h;++s)u[h++]=r[s];else for(h=this.start;f>s&&64>h;++s)a[h>>2]|=r[s]<<o[3&h++];else if(n)for(h=this.start;f>s&&64>h;++s)i=r.charCodeAt(s),128>i?u[h++]=i:2048>i?(u[h++]=192|i>>6,u[h++]=128|63&i):55296>i||i>=57344?(u[h++]=224|i>>12,u[h++]=128|i>>6&63,u[h++]=128|63&i):(i=65536+((1023&i)<<10|1023&r.charCodeAt(++s)),u[h++]=240|i>>18,u[h++]=128|i>>12&63,u[h++]=128|i>>6&63,u[h++]=128|63&i);else for(h=this.start;f>s&&64>h;++s)i=r.charCodeAt(s),128>i?a[h>>2]|=i<<o[3&h++]:2048>i?(a[h>>2]|=(192|i>>6)<<o[3&h++],a[h>>2]|=(128|63&i)<<o[3&h++]):55296>i||i>=57344?(a[h>>2]|=(224|i>>12)<<o[3&h++],a[h>>2]|=(128|i>>6&63)<<o[3&h++],a[h>>2]|=(128|63&i)<<o[3&h++]):(i=65536+((1023&i)<<10|1023&r.charCodeAt(++s)),a[h>>2]|=(240|i>>18)<<o[3&h++],a[h>>2]|=(128|i>>12&63)<<o[3&h++],a[h>>2]|=(128|i>>6&63)<<o[3&h++],a[h>>2]|=(128|63&i)<<o[3&h++]);this.lastByteIndex=h,this.bytes+=h-this.start,h>=64?(this.start=h-64,this.hash(),this.hashed=!0):this.start=h}return this}},r.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var t=this.blocks,r=this.lastByteIndex;t[r>>2]|=a[3&r],r>=56&&(this.hashed||this.hash(),t[0]=t[16],t[16]=t[1]=t[2]=t[3]=t[4]=t[5]=t[6]=t[7]=t[8]=t[9]=t[10]=t[11]=t[12]=t[13]=t[14]=t[15]=0),t[14]=this.bytes<<3,this.hash()}},r.prototype.hash=function(){var t,r,e,i,h,s,n=this.blocks;this.first?(t=n[0]-680876937,t=(t<<7|t>>>25)-271733879<<0,i=(-1732584194^2004318071&t)+n[1]-117830708,i=(i<<12|i>>>20)+t<<0,e=(-271733879^i&(-271733879^t))+n[2]-1126478375,e=(e<<17|e>>>15)+i<<0,r=(t^e&(i^t))+n[3]-1316259209,r=(r<<22|r>>>10)+e<<0):(t=this.h0,r=this.h1,e=this.h2,i=this.h3,t+=(i^r&(e^i))+n[0]-680876936,t=(t<<7|t>>>25)+r<<0,i+=(e^t&(r^e))+n[1]-389564586,i=(i<<12|i>>>20)+t<<0,e+=(r^i&(t^r))+n[2]+606105819,e=(e<<17|e>>>15)+i<<0,r+=(t^e&(i^t))+n[3]-1044525330,r=(r<<22|r>>>10)+e<<0),t+=(i^r&(e^i))+n[4]-176418897,t=(t<<7|t>>>25)+r<<0,i+=(e^t&(r^e))+n[5]+1200080426,i=(i<<12|i>>>20)+t<<0,e+=(r^i&(t^r))+n[6]-1473231341,e=(e<<17|e>>>15)+i<<0,r+=(t^e&(i^t))+n[7]-45705983,r=(r<<22|r>>>10)+e<<0,t+=(i^r&(e^i))+n[8]+1770035416,t=(t<<7|t>>>25)+r<<0,i+=(e^t&(r^e))+n[9]-1958414417,i=(i<<12|i>>>20)+t<<0,e+=(r^i&(t^r))+n[10]-42063,e=(e<<17|e>>>15)+i<<0,r+=(t^e&(i^t))+n[11]-1990404162,r=(r<<22|r>>>10)+e<<0,t+=(i^r&(e^i))+n[12]+1804603682,t=(t<<7|t>>>25)+r<<0,i+=(e^t&(r^e))+n[13]-40341101,i=(i<<12|i>>>20)+t<<0,e+=(r^i&(t^r))+n[14]-1502002290,e=(e<<17|e>>>15)+i<<0,r+=(t^e&(i^t))+n[15]+1236535329,r=(r<<22|r>>>10)+e<<0,t+=(e^i&(r^e))+n[1]-165796510,t=(t<<5|t>>>27)+r<<0,i+=(r^e&(t^r))+n[6]-1069501632,i=(i<<9|i>>>23)+t<<0,e+=(t^r&(i^t))+n[11]+643717713,e=(e<<14|e>>>18)+i<<0,r+=(i^t&(e^i))+n[0]-373897302,r=(r<<20|r>>>12)+e<<0,t+=(e^i&(r^e))+n[5]-701558691,t=(t<<5|t>>>27)+r<<0,i+=(r^e&(t^r))+n[10]+38016083,i=(i<<9|i>>>23)+t<<0,e+=(t^r&(i^t))+n[15]-660478335,e=(e<<14|e>>>18)+i<<0,r+=(i^t&(e^i))+n[4]-405537848,r=(r<<20|r>>>12)+e<<0,t+=(e^i&(r^e))+n[9]+568446438,t=(t<<5|t>>>27)+r<<0,i+=(r^e&(t^r))+n[14]-1019803690,i=(i<<9|i>>>23)+t<<0,e+=(t^r&(i^t))+n[3]-187363961,e=(e<<14|e>>>18)+i<<0,r+=(i^t&(e^i))+n[8]+1163531501,r=(r<<20|r>>>12)+e<<0,t+=(e^i&(r^e))+n[13]-1444681467,t=(t<<5|t>>>27)+r<<0,i+=(r^e&(t^r))+n[2]-51403784,i=(i<<9|i>>>23)+t<<0,e+=(t^r&(i^t))+n[7]+1735328473,e=(e<<14|e>>>18)+i<<0,r+=(i^t&(e^i))+n[12]-1926607734,r=(r<<20|r>>>12)+e<<0,h=r^e,t+=(h^i)+n[5]-378558,t=(t<<4|t>>>28)+r<<0,i+=(h^t)+n[8]-2022574463,i=(i<<11|i>>>21)+t<<0,s=i^t,e+=(s^r)+n[11]+1839030562,e=(e<<16|e>>>16)+i<<0,r+=(s^e)+n[14]-35309556,r=(r<<23|r>>>9)+e<<0,h=r^e,t+=(h^i)+n[1]-1530992060,t=(t<<4|t>>>28)+r<<0,i+=(h^t)+n[4]+1272893353,i=(i<<11|i>>>21)+t<<0,s=i^t,e+=(s^r)+n[7]-155497632,e=(e<<16|e>>>16)+i<<0,r+=(s^e)+n[10]-1094730640,r=(r<<23|r>>>9)+e<<0,h=r^e,t+=(h^i)+n[13]+681279174,t=(t<<4|t>>>28)+r<<0,i+=(h^t)+n[0]-358537222,i=(i<<11|i>>>21)+t<<0,s=i^t,e+=(s^r)+n[3]-722521979,e=(e<<16|e>>>16)+i<<0,r+=(s^e)+n[6]+76029189,r=(r<<23|r>>>9)+e<<0,h=r^e,t+=(h^i)+n[9]-640364487,t=(t<<4|t>>>28)+r<<0,i+=(h^t)+n[12]-421815835,i=(i<<11|i>>>21)+t<<0,s=i^t,e+=(s^r)+n[15]+530742520,e=(e<<16|e>>>16)+i<<0,r+=(s^e)+n[2]-995338651,r=(r<<23|r>>>9)+e<<0,t+=(e^(r|~i))+n[0]-198630844,t=(t<<6|t>>>26)+r<<0,i+=(r^(t|~e))+n[7]+1126891415,i=(i<<10|i>>>22)+t<<0,e+=(t^(i|~r))+n[14]-1416354905,e=(e<<15|e>>>17)+i<<0,r+=(i^(e|~t))+n[5]-57434055,r=(r<<21|r>>>11)+e<<0,t+=(e^(r|~i))+n[12]+1700485571,t=(t<<6|t>>>26)+r<<0,i+=(r^(t|~e))+n[3]-1894986606,i=(i<<10|i>>>22)+t<<0,e+=(t^(i|~r))+n[10]-1051523,e=(e<<15|e>>>17)+i<<0,r+=(i^(e|~t))+n[1]-2054922799,r=(r<<21|r>>>11)+e<<0,t+=(e^(r|~i))+n[8]+1873313359,t=(t<<6|t>>>26)+r<<0,i+=(r^(t|~e))+n[15]-30611744,i=(i<<10|i>>>22)+t<<0,e+=(t^(i|~r))+n[6]-1560198380,e=(e<<15|e>>>17)+i<<0,r+=(i^(e|~t))+n[13]+1309151649,r=(r<<21|r>>>11)+e<<0,t+=(e^(r|~i))+n[4]-145523070,t=(t<<6|t>>>26)+r<<0,i+=(r^(t|~e))+n[11]-1120210379,i=(i<<10|i>>>22)+t<<0,e+=(t^(i|~r))+n[2]+718787259,e=(e<<15|e>>>17)+i<<0,r+=(i^(e|~t))+n[9]-343485551,r=(r<<21|r>>>11)+e<<0,this.first?(this.h0=t+1732584193<<0,this.h1=r-271733879<<0,this.h2=e-1732584194<<0,this.h3=i+271733878<<0,this.first=!1):(this.h0=this.h0+t<<0,this.h1=this.h1+r<<0,this.h2=this.h2+e<<0,this.h3=this.h3+i<<0)},r.prototype.hex=function(){this.finalize();var t=this.h0,r=this.h1,e=this.h2,i=this.h3;return f[t>>4&15]+f[15&t]+f[t>>12&15]+f[t>>8&15]+f[t>>20&15]+f[t>>16&15]+f[t>>28&15]+f[t>>24&15]+f[r>>4&15]+f[15&r]+f[r>>12&15]+f[r>>8&15]+f[r>>20&15]+f[r>>16&15]+f[r>>28&15]+f[r>>24&15]+f[e>>4&15]+f[15&e]+f[e>>12&15]+f[e>>8&15]+f[e>>20&15]+f[e>>16&15]+f[e>>28&15]+f[e>>24&15]+f[i>>4&15]+f[15&i]+f[i>>12&15]+f[i>>8&15]+f[i>>20&15]+f[i>>16&15]+f[i>>28&15]+f[i>>24&15]},r.prototype.toString=r.prototype.hex,r.prototype.digest=function(){this.finalize();var t=this.h0,r=this.h1,e=this.h2,i=this.h3;return[255&t,t>>8&255,t>>16&255,t>>24&255,255&r,r>>8&255,r>>16&255,r>>24&255,255&e,e>>8&255,e>>16&255,e>>24&255,255&i,i>>8&255,i>>16&255,i>>24&255]},r.prototype.array=r.prototype.digest,r.prototype.arrayBuffer=function(){this.finalize();var t=new ArrayBuffer(16),r=new Uint32Array(t);return r[0]=this.h0,r[1]=this.h1,r[2]=this.h2,r[3]=this.h3,t},r.prototype.buffer=r.prototype.arrayBuffer;var v=d();h?module.exports=v:(t.md5=v,s&&define(function(){return v}))}(this);\';\n}\n;\nvar Lgwt_material_design_addins_client_avatar_MaterialAvatarClientBundle_1default_1InlineClientBundleGenerator$2_2_classLit = createForClass(\'gwt.material.design.addins.client.avatar\', \'MaterialAvatarClientBundle_default_InlineClientBundleGenerator/2\', 2350);\nfunction $clinit_MaterialAvatarClientBundle_default_InlineClientBundleGenerator$jdenticonJsInitializer(){\n  $clinit_MaterialAvatarClientBundle_default_InlineClientBundleGenerator$jdenticonJsInitializer = emptyMethod;\n  jdenticonJs = new MaterialAvatarClientBundle_default_InlineClientBundleGenerator$1;\n}\n\nfunction $clinit_MaterialAvatarClientBundle_default_InlineClientBundleGenerator$md5JsInitializer(){\n  $clinit_MaterialAvatarClientBundle_default_InlineClientBundleGenerator$md5JsInitializer = emptyMethod;\n  md5Js = new MaterialAvatarClientBundle_default_InlineClientBundleGenerator$2;\n}\n\nvar jdenticonDebugJs, md5DebugJs;\nfunction MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$1(){\n}\n\ndefineClass(2347, 1, {}, MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$1);\n_.getName = function getName_12(){\n  return \'jdenticonDebugJs\';\n}\n;\n_.getText = function getText_3(){\n  var builder;\n  builder = new StringBuilder;\n  builder.string += \'/**\\r\\n * Jdenticon 1.3.2\\r\\n * http://jdenticon.com\\r\\n *  \\r\\n * Built: 2015-10-10T11:55:57.451Z\\r\\n *\\r\\n * Copyright (c) 2014-2015 Daniel Mester Pirttij\\xE4rvi\\r\\n *\\r\\n * This software is provided \\\'as-is\\\', without any express or implied\\r\\n * warranty.  In no event will the authors be held liable for any damages\\r\\n * arising from the use of this software.\\r\\n * \\r\\n * Permission is granted to anyone to use this software for any purpose,\\r\\n * including commercial applications, and to alter it and redistribute it\\r\\n * freely, subject to the following restrictions:\\r\\n * \\r\\n * 1. The origin of this software must not be misrepresented; you must not\\r\\n *    claim that you wrote the original software. If you use this software\\r\\n *    in a product, an acknowledgment in the product documentation would be\\r\\n *    appreciated but is not required.\\r\\n * \\r\\n * 2. Altered source versions must be plainly marked as such, and must not be\\r\\n *    misrepresented as being the original software.\\r\\n * \\r\\n * 3. This notice may not be removed or altered from any source distribution.\\r\\n * \\r\\n */\\r\\n\\r\\n/*jslint bitwise: true */\\r\\n\\r\\n(function (global, name, factory) {\\r\\n    var jQuery = global["jQuery"],\\r\\n        jdenticon = factory(global, jQuery);\\r\\n\\r\\n    // Node.js\\r\\n    if (typeof module !== "undefined" && "exports" in module) {\\r\\n        module["exports"] = jdenticon;\\r\\n    }\\r\\n    // RequireJS\\r\\n    else if (typeof define === "function" && define["amd"]) {\\r\\n        define([], function () { return jdenticon; });\\r\\n    }\\r\\n    // No module loader\\r\\n    else {\\r\\n        global[name] = jdenticon;\\r\\n    }\\r\\n})(this, "jdenticon", function (global, jQuery) {\\r\\n    "use strict";\\r\\n\\r\\n\\r\\n\\r\\n    \\r\\n    /**\\r\\n     * Represents a point.\\r\\n     * @private\\r\\n     * @constructor\\r\\n     */\\r\\n    function Point(x, y) {\\r\\n        this.x = x;\\r\\n        this.y = y;\\r\\n    };\\r\\n    \\r\\n    \\r\\n    /**\\r\\n     * Translates and rotates a point before being passed on to the canvas context. This was previously done by the canvas context itself, \\r\\n     * but this caused a rendering issue in Chrome on sizes > 256 where the rotation transformation of inverted paths was not done properly.\\r\\n     * @param {number} x The x-coordinate of the upper left corner of the transformed rectangle.\\r\\n     * @param {number} y The y-coordinate of the upper left corner of the transformed rectangle.\\r\\n     * @param {number} size The size of the transformed rectangle.\\r\\n     * @param {number} rotation Rotation specified as 0 = 0 rad, 1 = 0.5\\u03C0 rad, 2 = \\u03C0 rad, 3 = 1.5\\u03C0 rad\\r\\n     * @private\\r\\n     * @constructor\\r\\n     */\\r\\n    function Transform(x, y, size, rotation) {\\r\\n        this._x = x;\\r\\n        this._y = y;\\r\\n        this._size = size;\\r\\n        this._rotation = rotation;\\r\\n    }\\r\\n    Transform.prototype = {\\r\\n        /**\\r\\n         * Transforms the specified point based on the translation and rotation specification for this Transform.\\r\\n         * @param {number} x x-coordinate\\r\\n         * @param {number} y y-coordinate\\r\\n         * @param {number=} w The width of the transformed rectangle. If greater than 0, this will ensure the returned point is of the upper left corner of the transformed rectangle.\\r\\n         * @param {number=} h The height of the transformed rectangle. If greater than 0, this will ensure the returned point is of the upper left corner of the transformed rectangle.\\r\\n         */\\r\\n        transformPoint: function (x, y, w, h) {\\r\\n            var right = this._x + this._size,\\r\\n                bottom = this._y + this._size;\\r\\n            return this._rotation === 1 ? new Point(right - y - (h || 0), this._y + x) :\\r\\n                   this._rotation === 2 ? new Point(right - x - (w || 0), bottom - y - (h || 0)) :\\r\\n                   this._rotation === 3 ? new Point(this._x + y, bottom - x - (w || 0)) :\\r\\n                   new Point(this._x + x, this._y + y);\\r\\n        }\\r\\n    };\\r\\n    Transform.noTransform = new Transform(0, 0, 0, 0);\\r\\n    \\r\\n    \\r\\n    \\r\\n    /**\\r\\n     * Provides helper functions for rendering common basic shapes.\\r\\n     * @private\\r\\n     * @constructor\\r\\n     */\\r\\n    function Graphics(renderer) {\\r\\n        this._renderer = renderer;\\r\\n        this._transform = Transform.noTransform;\\r\\n    }\\r\\n    Graphics.prototype = {\\r\\n        /**\\r\\n         * Adds a polygon to the underlying renderer.\\r\\n         * @param {Array} points The points of the polygon clockwise on the format [ x0, y0, x1, y1, ..., xn, yn ]\\r\\n         * @param {boolean=} invert Specifies if the polygon will be inverted.\\r\\n         */\\r\\n        addPolygon: function (points, invert) {\\r\\n            var di = invert ? -2 : 2, \\r\\n                transform = this._transform,\\r\\n                transformedPoints = [],\\r\\n                i;\\r\\n            \\r\\n            for (i = invert ? points.length - 2 : 0; i < points.length && i >= 0; i += di) {\\r\\n                transformedPoints.push(transform.transformPoint(points[i], points[i + 1]));\\r\\n            }\\r\\n            \\r\\n            this._renderer.addPolygon(transformedPoints);\\r\\n        },\\r\\n        \\r\\n        /**\\r\\n         * Adds a polygon to the underlying renderer.\\r\\n         * Source: http://stackoverflow.com/a/2173084\\r\\n         * @param {number} x The x-coordinate of the upper left corner of the rectangle holding the entire ellipse.\\r\\n         * @param {number} y The y-coordinate of the upper left corner of the rectangle holding the entire ellipse.\\r\\n         * @param {number} size The size of the ellipse.\\r\\n         * @param {boolean=} invert Specifies if the ellipse will be inverted.\\r\\n         */\\r\\n        addCircle: function (x, y, size, invert) {\\r\\n            var p = this._transform.transformPoint(x, y, size, size);\\r\\n            this._renderer.addCircle(p, size, invert);\\r\\n        },\\r\\n\\r\\n        /**\\r\\n         * Adds a rectangle to the underlying renderer.\\r\\n         * @param {number} x The x-coordinate of the upper left corner of the rectangle.\\r\\n         * @param {number} y The y-coordinate of the upper left corner of the rectangle.\\r\\n         * @param {number} w The width of the rectangle.\\r\\n         * @param {number} h The height of the rectangle.\\r\\n         * @param {boolean=} invert Specifies if the rectangle will be inverted.\\r\\n         */\\r\\n        addRectangle: function (x, y, w, h, invert) {\\r\\n            this.addPolygon([\\r\\n                x, y, \\r\\n                x + w, y,\\r\\n                x + w, y + h,\\r\\n                x, y + h\\r\\n            ], invert);\\r\\n        },\\r\\n\\r\\n        /**\\r\\n         * Adds a right triangle to the underlying renderer.\\r\\n         * @param {number} x The x-coordinate of the upper left corner of the rectangle holding the triangle.\\r\\n         * @param {number} y The y-coordinate of the upper left corner of the rectangle holding the triangle.\\r\\n         * @param {number} w The width of the triangle.\\r\\n         * @param {number} h The height of the triangle.\\r\\n         * @param {number} r The rotation of the triangle (clockwise). 0 = right corner of the triangle in the lower left corner of the bounding rectangle.\\r\\n         * @param {boolean=} invert Specifies if the triangle will be inverted.\\r\\n         */\\r\\n        addTriangle: function (x, y, w, h, r, invert) {\\r\\n            var points = [\\r\\n                x + w, y, \\r\\n                x + w, y + h, \\r\\n                x, y + h,\\r\\n                x, y\\r\\n            ];\\r\\n            points.splice(((r || 0) % 4) * 2, 2);\\r\\n            this.addPolygon(points, invert);\\r\\n        },\\r\\n\\r\\n        /**\\r\\n         * Adds a rhombus to the underlying renderer.\\r\\n         * @param {number} x The x-coordinate of the upper left corner of the rectangle holding the rhombus.\\r\\n         * @param {number} y The y-coordinate of the upper left corner of the rectangle holding the rhombus.\\r\\n         * @param {number} w The width of the rhombus.\\r\\n         * @param {number} h The height of the rhombus.\\r\\n         * @param {boolean=} invert Specifies if the rhombus will be inverted.\\r\\n         */\\r\\n        addRhombus: function (x, y, w, h, invert) {\\r\\n            this.addPolygon([\\r\\n                x + w / 2, y,\\r\\n                x + w, y + h / 2,\\r\\n                x + w / 2, y + h,\\r\\n                x, y + h / 2\\r\\n            ], invert);\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    \\r\\n    \\r\\n    \\r\\n    var shapes = {\\r\\n        center: [\\r\\n            /** @param {Graphics} g */\\r\\n            function (g, cell, index) {\\r\\n                var k = cell * 0.42;\\r\\n                g.addPolygon([\\r\\n                    0, 0,\\r\\n                    cell, 0,\\r\\n                    cell, cell - k * 2,\\r\\n                    cell - k, cell,\\r\\n                    0, cell\\r\\n                ]);\\r\\n            },\\r\\n            /** @param {Graphics} g */\\r\\n            function (g, cell, index) {\\r\\n                var w = 0 | (cell * 0.5), \\r\\n                    h = 0 | (cell * 0.8);\\r\\n                g.addTriangle(cell - w, 0, w, h, 2);\\r\\n            },\\r\\n            /** @param {Graphics} g */\\r\\n            function (g, cell, index) { \\r\\n                var s = 0 | (cell / 3);\\r\\n                g.addRectangle(s, s, cell - s, cell - s);\\r\\n            },\\r\\n            /** @param {Graphics} g */\\r\\n            function (g, cell, index) { \\r\\n                var inner = 0 | (cell * 0.1),\\r\\n                    outer = 0 | (cell * 0.25);\\r\\n                g.addRectangle(outer, outer, cell - inner - outer, cell - inner - outer);\\r\\n            },\\r\\n            /** @param {Graphics} g */\\r\\n            function (g, cell, index) { \\r\\n                var m = 0 | (cell * 0.15),\\r\\n                    s = 0 | (cell * 0.5);\\r\\n                g.addCircle(cell - s - m, cell - s - m, s);\\r\\n            },\\r\\n            /** @param {Graphics} g */\\r\\n            function (g, cell, index) {\\r\\n                var inner = cell * 0.1,\\r\\n                    outer = inner * 4;\\r\\n\\r\\n                g.addRectangle(0, 0, cell, cell);\\r\\n                g.addPolygon([\\r\\n                    outer, outer,\\r\\n                    cell - inner, outer,\\r\\n                    outer + (cell - outer - inner) / 2, cell - inner\\r\\n                ], true);\\r\\n            },\\r\\n            /** @param {Graphics} g */\\r\\n            function (g, cell, index) {\\r\\n                g.addPolygon([\\r\\n                    0, 0,\\r\\n                    cell, 0,\\r\\n                    cell, cell * 0.7,\\r\\n                    cell * 0.4, cell * 0.4,\\r\\n                    cell * 0.7, cell,\\r\\n                    0, cell\\r\\n                ]);\\r\\n            },\\r\\n            /** @param {Graphics} g */\\r\\n            function (g, cell, index) {\\r\\n                g.addTriangle(cell / 2, cell / 2, cell / 2, cell / 2, 3);\\r\\n            },\\r\\n            /** @param {Graphics} g */\\r\\n            function (g, cell, index) {\\r\\n                g.addRectangle(0, 0, cell, cell / 2);\\r\\n                g.addRectangle(0, cell / 2, cell / 2, cell / 2);\\r\\n                g.addTriangle(cell / 2, cell / 2, cell / 2, cell / 2, 1);\\r\\n            },\\r\\n            /** @param {Graphics} g */\\r\\n            function (g, cell, index) {\\r\\n                var inner = 0 | (cell * 0.14),\\r\\n                    outer = 0 | (cell * 0.35);\\r\\n                g.addRectangle(0, 0, cell, cell);\\r\\n                g.addRectangle(outer, outer, cell - outer - inner, cell - outer - inner, true);\\r\\n            },\\r\\n            /** @param {Graphics} g */\\r\\n            function (g, cell, index) {\\r\\n                var inner = cell * 0.12,\\r\\n                    outer = inner * 3;\\r\\n\\r\\n                g.addRectangle(0, 0, cell, cell);\\r\\n                g.addCircle(outer, outer, cell - inner - outer, true);\\r\\n            },\\r\\n            /** @param {Graphics} g */\\r\\n            function (g, cell, index) {\\r\\n                g.addTriangle(cell / 2, cell / 2, cell / 2, cell / 2, 3);\\r\\n            },\\r\\n            /** @param {Graphics} g */\\r\\n            function (g, cell, index) {\\r\\n                var m = cell * 0.25;\\r\\n                g.addRectangle(0, 0, cell, cell);\\r\\n                g.addRhombus(m, m, cell - m, cell - m, true);\\r\\n            },\\r\\n            /** @param {Graphics} g */\\r\\n            function (g, cell, index) {\\r\\n                var m = cell * 0.4, s = cell * 1.2;\\r\\n                if (!index) {\\r\\n                    g.addCircle(m, m, s);\\r\\n                }\\r\\n            }\\r\\n        ],\\r\\n        \\r\\n        outer: [\\r\\n            /** @param {Graphics} g */\\r\\n            function (g, cell, index) {\\r\\n                g.addTriangle(0, 0, cell, cell, 0);\\r\\n            },\\r\\n            /** @param {Graphics} g */\\r\\n            function (g, cell, index) {\\r\\n                g.addTriangle(0, cell / 2, cell, cell / 2, 0);\\r\\n            },\\r\\n            /** @param {Graphics} g */\\r\\n            function (g, cell, index) {\\r\\n                g.addRhombus(0, 0, cell, cell);\\r\\n            },\\r\\n            /** @param {Graphics} g */\\r\\n            function (g, cell, index) {\\r\\n                var m = cell / 6;\\r\\n                g.addCircle(m, m, cell - 2 * m);\\r\\n            }\\r\\n        ]\\r\\n    };\\r\\n\\r\\n    \\r\\n    \\r\\n    \\r\\n    function decToHex(v) {\\r\\n        v |= 0; // Ensure integer value\\r\\n        return v < 0 ? "00" :\\r\\n            v < 16 ? "0" + v.toString(16) :\\r\\n            v < 256 ? v.toString(16) :\\r\\n            "ff";\\r\\n    }\\r\\n    \\r\\n    function hueToRgb(m1, m2, h) {\\r\\n        h = h < 0 ? h + 6 : h > 6 ? h - 6 : h;\\r\\n        return decToHex(255 * (\\r\\n            h < 1 ? m1 + (m2 - m1) * h :\\r\\n            h < 3 ? m2 :\\r\\n            h < 4 ? m1 + (m2 - m1) * (4 - h) :\\r\\n            m1));\\r\\n    }\\r\\n        \\r\\n    /**\\r\\n     * Functions for converting colors to hex-rgb representations.\\r\\n     * @private\\r\\n     */\\r\\n    var color = {\\r\\n        /**\\r\\n         * @param {number} r Red channel [0, 255]\\r\\n         * @param {number} g Green channel [0, 255]\\r\\n         * @param {number} b Blue channel [0, 255]\\r\\n         */\\r\\n        rgb: function (r, g, b) {\\r\\n            return "#" + decToHex(r) + decToHex(g) + decToHex(b);\\r\\n        },\\r\\n        /**\\r\\n         * @param h Hue [0, 1]\\r\\n         * @param s Saturation [0, 1]\\r\\n         * @param l Lightness [0, 1]\\r\\n         */\\r\\n        hsl: function (h, s, l) {\\r\\n            // Based on http://www.w3.org/TR/2011/REC-css3-color-20110607/#hsl-color\\r\\n            if (s == 0) {\\r\\n                var partialHex = decToHex(l * 255);\\r\\n                return "#" + partialHex + partialHex + partialHex;\\r\\n            }\\r\\n            else {\\r\\n                var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s,\\r\\n                    m1 = l * 2 - m2;\\r\\n                return "#" +\\r\\n                    hueToRgb(m1, m2, h * 6 + 2) +\\r\\n                    hueToRgb(m1, m2, h * 6) +\\r\\n                    hueToRgb(m1, m2, h * 6 - 2);\\r\\n            }\\r\\n        },\\r\\n        // This function will correct the lightness for the "dark" hues\\r\\n        correctedHsl: function (h, s, l) {\\r\\n            // The corrector specifies the perceived middle lightnesses for each hue\\r\\n            var correctors = [ 0.55, 0.5, 0.5, 0.46, 0.6, 0.55, 0.55 ],\\r\\n                corrector = correctors[(h * 6 + 0.5) | 0];\\r\\n            \\r\\n            // Adjust the input lightness relative to the corrector\\r\\n            l = l < 0.5 ? l * corrector * 2 : corrector + (l - 0.5) * (1 - corrector) * 2;\\r\\n            \\r\\n            return color.hsl(h, s, l);\\r\\n        }\\r\\n    };\\r\\n\\r\\n    \\r\\n    \\r\\n    \\r\\n    /**\\r\\n     * Gets a set of identicon color candidates for a specified hue and config.\\r\\n     */\\r\\n    function colorTheme(hue, config) {\\r\\n        return [\\r\\n            // Dark gray\\r\\n            color.hsl(0, 0, config.grayscaleLightness(0)),\\r\\n            // Mid color\\r\\n            color.correctedHsl(hue, config.saturation, config.colorLightness(0.5)),\\r\\n            // Light gray\\r\\n            color.hsl(0, 0, config.grayscaleLightness(1)),\\r\\n            // Light color\\r\\n            color.correctedHsl(hue, config.saturation, config.colorLightness(1)),\\r\\n            // Dark color\\r\\n            color.correctedHsl(hue, config.saturation, config.colorLightness(0))\\r\\n        ];\\r\\n    }\\r\\n\\r\\n    \\r\\n    \\r\\n         \\r\\n    /**\\r\\n     * Draws an identicon to a specified renderer.\\r\\n     */\\r\\n    function iconGenerator(renderer, hash, x, y, size, padding, config) {\\r\\n        var undefined;\\r\\n        \\r\\n        // Calculate padding\\r\\n        padding = (size * (padding === undefined ? 0.08 : padding)) | 0;\\r\\n        size -= padding * 2;\\r\\n        \\r\\n        // Sizes smaller than 30 px are not supported. If really needed, apply a scaling transformation \\r\\n        // to the context before passing it to this function.\\r\\n        if (size < 30) {\\r\\n            throw new Error("Jdenticon cannot render identicons smaller than 30 pixels.");\\r\\n        }\\r\\n        if (!/^[0-9a-f]{11,}$/i.test(hash)) {\\r\\n       \';\n  builder.string += \'     throw new Error("Invalid hash passed to Jdenticon.");\\r\\n        }\\r\\n        \\r\\n        var graphics = new Graphics(renderer);\\r\\n        \\r\\n        // Calculate cell size and ensure it is an integer\\r\\n        var cell = 0 | (size / 4);\\r\\n        \\r\\n        // Since the cell size is integer based, the actual icon will be slightly smaller than specified => center icon\\r\\n        x += 0 | (padding + size / 2 - cell * 2);\\r\\n        y += 0 | (padding + size / 2 - cell * 2);\\r\\n\\r\\n        function renderShape(colorIndex, shapes, index, rotationIndex, positions) {\\r\\n            var r = rotationIndex ? parseInt(hash.charAt(rotationIndex), 16) : 0,\\r\\n                shape = shapes[parseInt(hash.charAt(index), 16) % shapes.length],\\r\\n                i;\\r\\n            \\r\\n            renderer.beginShape(availableColors[selectedColorIndexes[colorIndex]]);\\r\\n            \\r\\n            for (i = 0; i < positions.length; i++) {\\r\\n                graphics._transform = new Transform(x + positions[i][0] * cell, y + positions[i][1] * cell, cell, r++ % 4);\\r\\n                shape(graphics, cell, i);\\r\\n            }\\r\\n            \\r\\n            renderer.endShape();\\r\\n        }\\r\\n\\r\\n        // AVAILABLE COLORS\\r\\n        var hue = parseInt(hash.substr(-7), 16) / 0xfffffff,\\r\\n        \\r\\n            // Available colors for this icon\\r\\n            availableColors = colorTheme(hue, config),\\r\\n\\r\\n            // The index of the selected colors\\r\\n            selectedColorIndexes = [],\\r\\n            index;\\r\\n\\r\\n        function isDuplicate(values) {\\r\\n            if (values.indexOf(index) >= 0) {\\r\\n                for (var i = 0; i < values.length; i++) {\\r\\n                    if (selectedColorIndexes.indexOf(values[i]) >= 0) {\\r\\n                        return true;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        for (var i = 0; i < 3; i++) {\\r\\n            index = parseInt(hash.charAt(8 + i), 16) % availableColors.length;\\r\\n            if (isDuplicate([0, 4]) || // Disallow dark gray and dark color combo\\r\\n                isDuplicate([2, 3])) { // Disallow light gray and light color combo\\r\\n                index = 1;\\r\\n            }\\r\\n            selectedColorIndexes.push(index);\\r\\n        }\\r\\n\\r\\n        // ACTUAL RENDERING\\r\\n        // Sides\\r\\n        renderShape(0, shapes.outer, 2, 3, [[1, 0], [2, 0], [2, 3], [1, 3], [0, 1], [3, 1], [3, 2], [0, 2]]);\\r\\n        // Corners\\r\\n        renderShape(1, shapes.outer, 4, 5, [[0, 0], [3, 0], [3, 3], [0, 3]]);\\r\\n        // Center\\r\\n        renderShape(2, shapes.center, 1, null, [[1, 1], [2, 1], [2, 2], [1, 2]]);\\r\\n    };\\r\\n\\r\\n    \\r\\n    \\r\\n    /**\\r\\n     * Represents an SVG path element.\\r\\n     * @private\\r\\n     * @constructor\\r\\n     */\\r\\n    function SvgPath() {\\r\\n        /**\\r\\n         * This property holds the data string (path.d) of the SVG path.\\r\\n         */\\r\\n        this.dataString = "";\\r\\n    }\\r\\n    SvgPath.prototype = {\\r\\n        /**\\r\\n         * Adds a polygon with the current fill color to the SVG path.\\r\\n         * @param points An array of Point objects.\\r\\n         */\\r\\n        addPolygon: function (points) {\\r\\n            var dataString = "M" + points[0].x + " " + points[0].y;\\r\\n            for (var i = 1; i < points.length; i++) {\\r\\n                dataString += "L" + points[i].x + " " + points[i].y;\\r\\n            }\\r\\n            this.dataString += dataString + "Z";\\r\\n        },\\r\\n        /**\\r\\n         * Adds a circle with the current fill color to the SVG path.\\r\\n         * @param {Point} point The upper left corner of the circle bounding box.\\r\\n         * @param {number} diameter The diameter of the circle.\\r\\n         * @param {boolean} counterClockwise True if the circle is drawn counter-clockwise (will result in a hole if rendered on a clockwise path).\\r\\n         */\\r\\n        addCircle: function (point, diameter, counterClockwise) {\\r\\n            var sweepFlag = counterClockwise ? 0 : 1,\\r\\n                radius = diameter / 2;\\r\\n            this.dataString += \\r\\n                "M" + (point.x) + " " + (point.y + radius) +\\r\\n                "a" + radius + "," + radius + " 0 1," + sweepFlag + " " + diameter + ",0" + \\r\\n                "a" + radius + "," + radius + " 0 1," + sweepFlag + " " + (-diameter) + ",0";\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    \\r\\n    \\r\\n    /**\\r\\n     * Renderer producing SVG output.\\r\\n     * @private\\r\\n     * @constructor\\r\\n     */\\r\\n    function SvgRenderer(width, height) {\\r\\n        this._pathsByColor = { };\\r\\n        this._size = { w: width, h: height };\\r\\n    }\\r\\n    SvgRenderer.prototype = {\\r\\n        /**\\r\\n         * Marks the beginning of a new shape of the specified color. Should be ended with a call to endShape.\\r\\n         * @param {string} color Fill color on format #xxxxxx.\\r\\n         */\\r\\n        beginShape: function (color) {\\r\\n            this._path = this._pathsByColor[color] || (this._pathsByColor[color] = new SvgPath());\\r\\n        },\\r\\n        /**\\r\\n         * Marks the end of the currently drawn shape.\\r\\n         */\\r\\n        endShape: function () { },\\r\\n        /**\\r\\n         * Adds a polygon with the current fill color to the SVG.\\r\\n         * @param points An array of Point objects.\\r\\n         */\\r\\n        addPolygon: function (points) {\\r\\n            this._path.addPolygon(points);\\r\\n        },\\r\\n        /**\\r\\n         * Adds a circle with the current fill color to the SVG.\\r\\n         * @param {Point} point The upper left corner of the circle bounding box.\\r\\n         * @param {number} diameter The diameter of the circle.\\r\\n         * @param {boolean} counterClockwise True if the circle is drawn counter-clockwise (will result in a hole if rendered on a clockwise path).\\r\\n         */\\r\\n        addCircle: function (point, diameter, counterClockwise) {\\r\\n            this._path.addCircle(point, diameter, counterClockwise);\\r\\n        },\\r\\n        /**\\r\\n         * Gets the rendered image as an SVG string.\\r\\n         * @param {boolean=} fragment If true, the container svg element is not included in the result.\\r\\n         */\\r\\n        toSvg: function (fragment) {\\r\\n            var svg = fragment ? \\\'\\\' : \\r\\n                \\\'<svg xmlns="http://www.w3.org/2000/svg" width="\\\' + \\r\\n                this._size.w + \\\'" height="\\\' + this._size.h + \\\'" viewBox="0 0 \\\' + \\r\\n                this._size.w + \\\' \\\' + this._size.h + \\\'" preserveAspectRatio="xMidYMid meet">\\\';\\r\\n            \\r\\n            for (var color in this._pathsByColor) {\\r\\n                svg += \\\'<path fill="\\\' + color + \\\'" d="\\\' + this._pathsByColor[color].dataString + \\\'"/>\\\';\\r\\n            }\\r\\n\\r\\n            return fragment ? svg : \\r\\n                svg + \\\'<\\/svg>\\\';\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    \\r\\n    \\r\\n    /**\\r\\n     * Renderer redirecting drawing commands to a canvas context.\\r\\n     * @private\\r\\n     * @constructor\\r\\n     */\\r\\n    function CanvasRenderer(ctx, width, height) {\\r\\n        this._ctx = ctx;\\r\\n        ctx.clearRect(0, 0, width, height);\\r\\n    }\\r\\n    CanvasRenderer.prototype = {\\r\\n        /**\\r\\n         * Marks the beginning of a new shape of the specified color. Should be ended with a call to endShape.\\r\\n         * @param {string} color Fill color on format #xxxxxx.\\r\\n         */\\r\\n        beginShape: function (color) {\\r\\n            this._ctx.fillStyle = color;\\r\\n            this._ctx.beginPath();\\r\\n        },\\r\\n        /**\\r\\n         * Marks the end of the currently drawn shape. This causes the queued paths to be rendered on the canvas.\\r\\n         */\\r\\n        endShape: function () {\\r\\n            this._ctx.fill();\\r\\n        },\\r\\n        /**\\r\\n         * Adds a polygon to the rendering queue.\\r\\n         * @param points An array of Point objects.\\r\\n         */\\r\\n        addPolygon: function (points) {\\r\\n            var ctx = this._ctx, i;\\r\\n            ctx.moveTo(points[0].x, points[0].y);\\r\\n            for (i = 1; i < points.length; i++) {\\r\\n                ctx.lineTo(points[i].x, points[i].y);\\r\\n            }\\r\\n            ctx.closePath();\\r\\n        },\\r\\n        /**\\r\\n         * Adds a circle to the rendering queue.\\r\\n         * @param {Point} point The upper left corner of the circle bounding box.\\r\\n         * @param {number} diameter The diameter of the circle.\\r\\n         * @param {boolean} counterClockwise True if the circle is drawn counter-clockwise (will result in a hole if rendered on a clockwise path).\\r\\n         */\\r\\n        addCircle: function (point, diameter, counterClockwise) {\\r\\n            var ctx = this._ctx,\\r\\n                radius = diameter / 2;\\r\\n            ctx.arc(point.x + radius, point.y + radius, radius, 0, Math.PI * 2, counterClockwise);\\r\\n            ctx.closePath();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    \\r\\n    \\r\\n         \\r\\n    \\r\\n    \\r\\n    var /** @const */\\r\\n        HASH_ATTRIBUTE = "data-jdenticon-hash",\\r\\n        supportsQuerySelectorAll = "document" in global && "querySelectorAll" in document;\\r\\n    \\r\\n    /**\\r\\n     * Gets the normalized current Jdenticon color configuration. Missing fields have default values.\\r\\n     */\\r\\n    function getCurrentConfig() {\\r\\n        var configObject = jdenticon["config"] || global["jdenticon_config"] || { },\\r\\n            lightnessConfig = configObject["lightness"] || { },\\r\\n            saturation = configObject["saturation"];\\r\\n        \\r\\n        /**\\r\\n         * Creates a lightness range.\\r\\n         */\\r\\n        function lightness(configName, defaultMin, defaultMax) {\\r\\n            var range = lightnessConfig[configName] instanceof Array ? lightnessConfig[configName] : [defaultMin, defaultMax];\\r\\n            \\r\\n            /**\\r\\n             * Gets a lightness relative the specified value in the specified lightness range.\\r\\n             */\\r\\n            return function (value) {\\r\\n                value = range[0] + value * (range[1] - range[0]);\\r\\n                return value < 0 ? 0 : value > 1 ? 1 : value;\\r\\n            };\\r\\n        }\\r\\n            \\r\\n        return {\\r\\n            saturation: typeof saturation == "number" ? saturation : 0.5,\\r\\n            colorLightness: lightness("color", 0.4, 0.8),\\r\\n            grayscaleLightness: lightness("grayscale", 0.3, 0.9)\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * Updates the identicon in the specified canvas or svg elements.\\r\\n     * @param {string=} hash Optional hash to be rendered. If not specified, the hash specified by the data-jdenticon-hash is used.\\r\\n     * @param {number=} padding Optional padding in percents. Extra padding might be added to center the rendered identicon.\\r\\n     */\\r\\n    function update(el, hash, padding) {\\r\\n        if (typeof(el) === "string") {\\r\\n            if (supportsQuerySelectorAll) {\\r\\n                var elements = document.querySelectorAll(el);\\r\\n                for (var i = 0; i < elements.length; i++) {\\r\\n                    update(elements[i], hash, padding);\\r\\n                }\\r\\n            }\\r\\n            return;\\r\\n        }\\r\\n        if (!el || !el["tagName"]) {\\r\\n            // No element found\\r\\n            return;\\r\\n        }\\r\\n        hash = hash || el.getAttribute(HASH_ATTRIBUTE);\\r\\n        if (!hash) {\\r\\n            // No hash specified\\r\\n            return;\\r\\n        }\\r\\n        \\r\\n        var isSvg = el["tagName"].toLowerCase() == "svg",\\r\\n            isCanvas = el["tagName"].toLowerCase() == "canvas";\\r\\n        \\r\\n        // Ensure we have a supported element\\r\\n        if (!isSvg && !(isCanvas && "getContext" in el)) {\\r\\n            return;\\r\\n        }\\r\\n        \\r\\n        var width = Number(el.getAttribute("width")) || el.clientWidth || 0,\\r\\n            height = Number(el.getAttribute("height")) || el.clientHeight || 0,\\r\\n            renderer = isSvg ? new SvgRenderer(width, height) : new CanvasRenderer(el.getContext("2d"), width, height),\\r\\n            size = Math.min(width, height);\\r\\n        \\r\\n        // Draw icon\\r\\n        iconGenerator(renderer, hash, 0, 0, size, padding, getCurrentConfig());\\r\\n        \\r\\n        // SVG needs postprocessing\\r\\n        if (isSvg) {\\r\\n            // Parse svg to a temporary span element.\\r\\n            // Simply using innerHTML does unfortunately not work on IE.\\r\\n            var wrapper = document.createElement("span");\\r\\n            wrapper.innerHTML = renderer.toSvg(false);\\r\\n            \\r\\n            // Then replace the content of the target element with the parsed svg.\\r\\n            while (el.firstChild) {\\r\\n                el.removeChild(el.firstChild);\\r\\n            }\\r\\n            var newNodes = wrapper.firstChild.childNodes;\\r\\n            while (newNodes.length) {\\r\\n                el.appendChild(newNodes[0]);\\r\\n            }\\r\\n            \\r\\n            // Set viewBox attribute to ensure the svg scales nicely.\\r\\n            el.setAttribute("viewBox", "0 0 " + width + " " + height);\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * Draws an identicon to a context.\\r\\n     */\\r\\n    function drawIcon(ctx, hash, size) {\\r\\n        if (!ctx) {\\r\\n            throw new Error("No canvas specified.");\\r\\n        }\\r\\n        \\r\\n        var renderer = new CanvasRenderer(ctx, size, size);\\r\\n        iconGenerator(renderer, hash, 0, 0, size, 0, getCurrentConfig());\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * Draws an identicon to a context.\\r\\n     * @param {number=} padding Optional padding in percents. Extra padding might be added to center the rendered identicon.\\r\\n     */\\r\\n    function toSvg(hash, size, padding) {\\r\\n        var renderer = new SvgRenderer(size, size);\\r\\n        iconGenerator(renderer, hash, 0, 0, size, padding, getCurrentConfig());\\r\\n        return renderer.toSvg();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Updates all canvas elements with the data-jdenticon-hash attribute.\\r\\n     */\\r\\n    function jdenticon() {\\r\\n        if (supportsQuerySelectorAll) {\\r\\n            update("svg[" + HASH_ATTRIBUTE + "],canvas[" + HASH_ATTRIBUTE + "]");\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    // Public API\\r\\n    jdenticon["drawIcon"] = drawIcon;\\r\\n    jdenticon["toSvg"] = toSvg;\\r\\n    jdenticon["update"] = update;\\r\\n    jdenticon["version"] = "1.3.2";\\r\\n    \\r\\n    // Basic jQuery plugin\\r\\n    if (jQuery) {\\r\\n        jQuery["fn"]["jdenticon"] = function (hash, padding) {\\r\\n            this["each"](function (index, el) {\\r\\n                update(el, hash, padding);\\r\\n            });\\r\\n            return this;\\r\\n        };\\r\\n    }\\r\\n    \\r\\n    // Schedule to render all identicons on the page once it has been loaded.\\r\\n    if (typeof setTimeout === "function") {\\r\\n        setTimeout(jdenticon, 0);\\r\\n    }\\r\\n    \\r\\n    return jdenticon;\\r\\n\\r\\n});\';\n  return builder.string;\n}\n;\nvar Lgwt_material_design_addins_client_avatar_MaterialAvatarDebugClientBundle_1default_1InlineClientBundleGenerator$1_2_classLit = createForClass(\'gwt.material.design.addins.client.avatar\', \'MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator/1\', 2347);\nfunction MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$2(){\n}\n\ndefineClass(2348, 1, {}, MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$2);\n_.getName = function getName_13(){\n  return \'md5DebugJs\';\n}\n;\n_.getText = function getText_4(){\n  var builder;\n  builder = new StringBuilder;\n  builder.string += "/**\\r\\n * [js-md5]{@link https://github.com/emn178/js-md5}\\r\\n *\\r\\n * @namespace md5\\r\\n * @version 0.4.0\\r\\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\\r\\n * @copyright Chen, Yi-Cyuan 2014-2016\\r\\n * @license MIT\\r\\n */\\r\\n(function (root) {\\r\\n    \'use strict\';\\r\\n\\r\\n    var NODE_JS = typeof process == \'object\' && process.versions && process.versions.node;\\r\\n    if (NODE_JS) {\\r\\n        root = global;\\r\\n    }\\r\\n    var COMMON_JS = !root.JS_MD5_TEST && typeof module == \'object\' && module.exports;\\r\\n    var AMD = typeof define == \'function\' && define.amd;\\r\\n    var ARRAY_BUFFER = !root.JS_MD5_TEST && typeof ArrayBuffer != \'undefined\';\\r\\n    var HEX_CHARS = \'0123456789abcdef\'.split(\'\');\\r\\n    var EXTRA = [128, 32768, 8388608, -2147483648];\\r\\n    var SHIFT = [0, 8, 16, 24];\\r\\n    var OUTPUT_TYPES = [\'hex\', \'array\', \'digest\', \'buffer\', \'arrayBuffer\'];\\r\\n\\r\\n    var blocks = [], buffer8;\\r\\n    if (ARRAY_BUFFER) {\\r\\n        var buffer = new ArrayBuffer(68);\\r\\n        buffer8 = new Uint8Array(buffer);\\r\\n        blocks = new Uint32Array(buffer);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @method hex\\r\\n     * @memberof md5\\r\\n     * @description Output hash as hex string\\r\\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\r\\n     * @returns {String} Hex string\\r\\n     * @example\\r\\n     * md5.hex(\'The quick brown fox jumps over the lazy dog\');\\r\\n     * // equal to\\r\\n     * md5(\'The quick brown fox jumps over the lazy dog\');\\r\\n     */\\r\\n    /**\\r\\n     * @method digest\\r\\n     * @memberof md5\\r\\n     * @description Output hash as bytes array\\r\\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\r\\n     * @returns {Array} Bytes array\\r\\n     * @example\\r\\n     * md5.digest(\'The quick brown fox jumps over the lazy dog\');\\r\\n     */\\r\\n    /**\\r\\n     * @method array\\r\\n     * @memberof md5\\r\\n     * @description Output hash as bytes array\\r\\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\r\\n     * @returns {Array} Bytes array\\r\\n     * @example\\r\\n     * md5.array(\'The quick brown fox jumps over the lazy dog\');\\r\\n     */\\r\\n    /**\\r\\n     * @method arrayBuffer\\r\\n     * @memberof md5\\r\\n     * @description Output hash as ArrayBuffer\\r\\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\r\\n     * @returns {ArrayBuffer} ArrayBuffer\\r\\n     * @example\\r\\n     * md5.arrayBuffer(\'The quick brown fox jumps over the lazy dog\');\\r\\n     */\\r\\n    /**\\r\\n     * @method buffer\\r\\n     * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\\r\\n     * @memberof md5\\r\\n     * @description Output hash as ArrayBuffer\\r\\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\r\\n     * @returns {ArrayBuffer} ArrayBuffer\\r\\n     * @example\\r\\n     * md5.buffer(\'The quick brown fox jumps over the lazy dog\');\\r\\n     */\\r\\n    var createOutputMethod = function (outputType) {\\r\\n        return function (message) {\\r\\n            return new Md5(true).update(message)[outputType]();\\r\\n        };\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @method create\\r\\n     * @memberof md5\\r\\n     * @description Create Md5 object\\r\\n     * @returns {Md5} Md5 object.\\r\\n     * @example\\r\\n     * var hash = md5.create();\\r\\n     */\\r\\n    /**\\r\\n     * @method update\\r\\n     * @memberof md5\\r\\n     * @description Create and update Md5 object\\r\\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\r\\n     * @returns {Md5} Md5 object.\\r\\n     * @example\\r\\n     * var hash = md5.update(\'The quick brown fox jumps over the lazy dog\');\\r\\n     * // equal to\\r\\n     * var hash = md5.create();\\r\\n     * hash.update(\'The quick brown fox jumps over the lazy dog\');\\r\\n     */\\r\\n    var createMethod = function () {\\r\\n        var method = createOutputMethod(\'hex\');\\r\\n        if (NODE_JS) {\\r\\n            method = nodeWrap(method);\\r\\n        }\\r\\n        method.create = function () {\\r\\n            return new Md5();\\r\\n        };\\r\\n        method.update = function (message) {\\r\\n            return method.create().update(message);\\r\\n        };\\r\\n        for (var i = 0;i < OUTPUT_TYPES.length;++i) {\\r\\n            var type = OUTPUT_TYPES[i];\\r\\n            method[type] = createOutputMethod(type);\\r\\n        }\\r\\n        return method;\\r\\n    };\\r\\n\\r\\n    var nodeWrap = function (method) {\\r\\n        var crypto, Buffer;\\r\\n        try {\\r\\n            if (root.JS_MD5_TEST) {\\r\\n                throw \'JS_MD5_TEST\';\\r\\n            }\\r\\n            crypto = require(\'crypto\');\\r\\n            Buffer = require(\'buffer\').Buffer;\\r\\n        } catch (e) {\\r\\n            console.log(e);\\r\\n            return method;\\r\\n        }\\r\\n        var nodeMethod = function (message) {\\r\\n            if (typeof message == \'string\') {\\r\\n                return crypto.createHash(\'md5\').update(message, \'utf8\').digest(\'hex\');\\r\\n            } else if (message.constructor == ArrayBuffer) {\\r\\n                message = new Uint8Array(message);\\r\\n            } else if (message.length === undefined) {\\r\\n                return method(message);\\r\\n            }\\r\\n            return crypto.createHash(\'md5\').update(new Buffer(message)).digest(\'hex\');\\r\\n        };\\r\\n        return nodeMethod;\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * Md5 class\\r\\n     * @class Md5\\r\\n     * @description This is internal class.\\r\\n     * @see {@link md5.create}\\r\\n     */\\r\\n    function Md5(sharedMemory) {\\r\\n        if (sharedMemory) {\\r\\n            blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\\r\\n                blocks[4] = blocks[5] = blocks[6] = blocks[7] =\\r\\n                    blocks[8] = blocks[9] = blocks[10] = blocks[11] =\\r\\n                        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\\r\\n            this.blocks = blocks;\\r\\n            this.buffer8 = buffer8;\\r\\n        } else {\\r\\n            if (ARRAY_BUFFER) {\\r\\n                var buffer = new ArrayBuffer(68);\\r\\n                this.buffer8 = new Uint8Array(buffer);\\r\\n                this.blocks = new Uint32Array(buffer);\\r\\n            } else {\\r\\n                this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\\r\\n            }\\r\\n        }\\r\\n        this.h0 = this.h1 = this.h2 = this.h3 = this.start = this.bytes = 0;\\r\\n        this.finalized = this.hashed = false;\\r\\n        this.first = true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @method update\\r\\n     * @memberof Md5\\r\\n     * @instance\\r\\n     * @description Update hash\\r\\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\r\\n     * @returns {Md5} Md5 object.\\r\\n     * @see {@link md5.update}\\r\\n     */\\r\\n    Md5.prototype.update = function (message) {\\r\\n        if (this.finalized) {\\r\\n            return;\\r\\n        }\\r\\n        var notString = typeof(message) != \'string\';\\r\\n        if (notString && message.constructor == root.ArrayBuffer) {\\r\\n            message = new Uint8Array(message);\\r\\n        }\\r\\n        var code, index = 0, i, length = message.length || 0, blocks = this.blocks;\\r\\n        var buffer8 = this.buffer8;\\r\\n\\r\\n        while (index < length) {\\r\\n            if (this.hashed) {\\r\\n                this.hashed = false;\\r\\n                blocks[0] = blocks[16];\\r\\n                blocks[16] = blocks[1] = blocks[2] = blocks[3] =\\r\\n                    blocks[4] = blocks[5] = blocks[6] = blocks[7] =\\r\\n                        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\\r\\n                            blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\\r\\n            }\\r\\n\\r\\n            if (notString) {\\r\\n                if (ARRAY_BUFFER) {\\r\\n                    for (i = this.start;index < length && i < 64; ++index) {\\r\\n                        buffer8[i++] = message[index];\\r\\n                    }\\r\\n                } else {\\r\\n                    for (i = this.start;index < length && i < 64; ++index) {\\r\\n                        blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\\r\\n                    }\\r\\n                }\\r\\n            } else {\\r\\n                if (ARRAY_BUFFER) {\\r\\n                    for (i = this.start;index < length && i < 64; ++index) {\\r\\n                        code = message.charCodeAt(index);\\r\\n                        if (code < 0x80) {\\r\\n                            buffer8[i++] = code;\\r\\n                        } else if (code < 0x800) {\\r\\n                            buffer8[i++] = 0xc0 | (code >> 6);\\r\\n                            buffer8[i++] = 0x80 | (code & 0x3f);\\r\\n                        } else if (code < 0xd800 || code >= 0xe000) {\\r\\n                            buffer8[i++] = 0xe0 | (code >> 12);\\r\\n                            buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\\r\\n                            buffer8[i++] = 0x80 | (code & 0x3f);\\r\\n                        } else {\\r\\n                            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\\r\\n                            buffer8[i++] = 0xf0 | (code >> 18);\\r\\n                            buffer8[i++] = 0x80 | ((code >> 12) & 0x3f);\\r\\n                            buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\\r\\n                            buffer8[i++] = 0x80 | (code & 0x3f);\\r\\n                        }\\r\\n                    }\\r\\n                } else {\\r\\n                    for (i = this.start;index < length && i < 64; ++index) {\\r\\n                        code = message.charCodeAt(index);\\r\\n                        if (code < 0x80) {\\r\\n                            blocks[i >> 2] |= code << SHIFT[i++ & 3];\\r\\n                        } else if (code < 0x800) {\\r\\n                            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\\r\\n                            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\\r\\n                        } else if (code < 0xd800 || code >= 0xe000) {\\r\\n                            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\\r\\n                            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\\r\\n                            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\\r\\n                        } else {\\r\\n                            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\\r\\n                            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\\r\\n                            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\\r\\n                            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\\r\\n                            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            this.lastByteIndex = i;\\r\\n            this.bytes += i - this.start;\\r\\n            if (i >= 64) {\\r\\n                this.start = i - 64;\\r\\n                this.hash();\\r\\n                this.hashed = true;\\r\\n            } else {\\r\\n                this.start = i;\\r\\n            }\\r\\n        }\\r\\n        return this;\\r\\n    };\\r\\n\\r\\n    Md5.prototype.finalize = function () {\\r\\n        if (this.finalized) {\\r\\n            return;\\r\\n        }\\r\\n        this.finalized = true;\\r\\n        var blocks = this.blocks, i = this.lastByteIndex;\\r\\n        blocks[i >> 2] |= EXTRA[i & 3];\\r\\n        if (i >= 56) {\\r\\n            if (!this.hashed) {\\r\\n                this.hash();\\r\\n            }\\r\\n            blocks[0] = blocks[16];\\r\\n            blocks[16] = blocks[1] = blocks[2] = blocks[3] =\\r\\n                blocks[4] = blocks[5] = blocks[6] = blocks[7] =\\r\\n                    blocks[8] = blocks[9] = blocks[10] = blocks[11] =\\r\\n                        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\\r\\n        }\\r\\n        blocks[14] = this.bytes << 3;\\r\\n        this.hash();\\r\\n    };\\r\\n\\r\\n    Md5.prototype.hash = function () {\\r\\n        var a, b, c, d, bc, da, blocks = this.blocks;\\r\\n\\r\\n        if (this.first) {\\r\\n            a = blocks[0] - 680876937;\\r\\n            a = (a << 7 | a >>> 25) - 271733879 << 0;\\r\\n            d = (-1732584194 ^ a & 2004318071) + blocks[1] - 117830708;\\r\\n            d = (d << 12 | d >>> 20) + a << 0;\\r\\n            c = (-271733879 ^ (d & (a ^ -271733879))) + blocks[2] - 1126478375;\\r\\n            c = (c << 17 | c >>> 15) + d << 0;\\r\\n            b = (a ^ (c & (d ^ a))) + blocks[3] - 1316259209;\\r\\n            b = (b << 22 | b >>> 10) + c << 0;\\r\\n        } else {\\r\\n            a = this.h0;\\r\\n            b = this.h1;\\r\\n            c = this.h2;\\r\\n            d = this.h3;\\r\\n            a += (d ^ (b & (c ^ d))) + blocks[0] - 680876936;\\r\\n            a = (a << 7 | a >>> 25) + b << 0;\\r\\n            d += (c ^ (a & (b ^ c))) + blocks[1] - 389564586;\\r\\n            d = (d << 12 | d >>> 20) + a << 0;\\r\\n            c += (b ^ (d & (a ^ b))) + blocks[2] + 606105819;\\r\\n            c = (c << 17 | c >>> 15) + d << 0;\\r\\n            b += (a ^ (c & (d ^ a))) + blocks[3] - 1044525330;\\r\\n            b = (b << 22 | b >>> 10) + c << 0;\\r\\n        }\\r\\n\\r\\n        a += (d ^ (b & (c ^ d))) + blocks[4] - 176418897;\\r\\n        a = (a << 7 | a >>> 25) + b << 0;\\r\\n        d += (c ^ (a & (b ^ c))) + blocks[5] + 1200080426;\\r\\n        d = (d << 12 | d >>> 20) + a << 0;\\r\\n        c += (b ^ (d & (a ^ b))) + blocks[6] - 1473231341;\\r\\n        c = (c << 17 | c >>> 15) + d << 0;\\r\\n        b += (a ^ (c & (d ^ a))) + blocks[7] - 45705983;\\r\\n        b = (b << 22 | b >>> 10) + c << 0;\\r\\n        a += (d ^ (b & (c ^ d))) + blocks[8] + 1770035416;\\r\\n        a = (a << 7 | a >>> 25) + b << 0;\\r\\n        d += (c ^ (a & (b ^ c))) + blocks[9] - 1958414417;\\r\\n        d = (d << 12 | d >>> 20) + a << 0;\\r\\n        c += (b ^ (d & (a ^ b))) + blocks[10] - 42063;\\r\\n        c = (c << 17 | c >>> 15) + d << 0;\\r\\n        b += (a ^ (c & (d ^ a))) + blocks[11] - 1990404162;\\r\\n        b = (b << 22 | b >>> 10) + c << 0;\\r\\n        a += (d ^ (b & (c ^ d))) + blocks[12] + 1804603682;\\r\\n        a = (a << 7 | a >>> 25) + b << 0;\\r\\n        d += (c ^ (a & (b ^ c))) + blocks[13] - 40341101;\\r\\n        d = (d << 12 | d >>> 20) + a << 0;\\r\\n        c += (b ^ (d & (a ^ b))) + blocks[14] - 1502002290;\\r\\n        c = (c << 17 | c >>> 15) + d << 0;\\r\\n        b += (a ^ (c & (d ^ a))) + blocks[15] + 1236535329;\\r\\n        b = (b << 22 | b >>> 10) + c << 0;\\r\\n        a += (c ^ (d & (b ^ c))) + blocks[1] - 165796510;\\r\\n        a = (a << 5 | a >>> 27) + b << 0;\\r\\n        d += (b ^ (c & (a ^ b))) + blocks[6] - 1069501632;\\r\\n        d = (d << 9 | d >>> 23) + a << 0;\\r\\n        c += (a ^ (b & (d ^ a))) + blocks[11] + 643717713;\\r\\n        c = (c << 14 | c >>> 18) + d << 0;\\r\\n        b += (d ^ (a & (c ^ d))) + blocks[0] - 373897302;\\r\\n        b = (b << 20 | b >>> 12) + c << 0;\\r\\n        a += (c ^ (d & (b ^ c))) + blocks[5] - 701558691;\\r\\n        a = (a << 5 | a >>> 27) + b << 0;\\r\\n        d += (b ^ (c & (a ^ b))) + blocks[10] + 38016083;\\r\\n        d = (d << 9 | d >>> 23) + a << 0;\\r\\n        c += (a ^ (b & (d ^ a))) + blocks[15] - 660478335;\\r\\n        c = (c << 14 | c >>> 18) + d << 0;\\r\\n        b += (d ^ (a & (c ^ d))) + blocks[4] - 405537848;\\r\\n        b = (b << 20 | b >>> 12) + c << 0;\\r\\n        a += (c ^ (d & (b ^ c))) + blocks[9] + 568446438;\\r\\n        a = (a << 5 | a >>> 27) + b << 0;\\r\\n        d += (b ^ (c & (a ^ b))) + blocks[14] - 1019803690;\\r\\n        d = (d << 9 | d >>> 23) + a << 0;\\r\\n        c += (a ^ (b & (d ^ a))) + blocks[3] - 187363961;\\r\\n        c = (c << 14 | c >>> 18) + d << 0;\\r\\n        b += (d ^ (a & (c ^ d))) + blocks[8] + 1163531501;\\r\\n        b = (b << 20 | b >>> 12) + c << 0;\\r\\n        a += (c ^ (d & (b ^ c))) + blocks[13] - 1444681467;\\r\\n        a = (a << 5 | a >>> 27) + b << 0;\\r\\n        d += (b ^ (c & (a ^ b))) + blocks[2] - 51403784;\\r\\n        d = (d << 9 | d >>> 23) + a << 0;\\r\\n        c += (a ^ (b & (d ^ a))) + blocks[7] + 1735328473;\\r\\n        c = (c << 14 | c >>> 18) + d << 0;\\r\\n        b += (d ^ (a & (c ^ d))) + blocks[12] - 1926607734;\\r\\n        b = (b << 20 | b >>> 12) + c << 0;\\r\\n        bc = b ^ c;\\r\\n        a += (bc ^ d) + blocks[5] - 378558;\\r\\n        a = (a << 4 | a >>> 28) + b << 0;\\r\\n        d += (bc ^ a) + blocks[8] - 2022574463;\\r\\n        d = (d << 11 | d >>> 21) + a << 0;\\r\\n        da = d ^ a;\\r\\n        c += (da ^ b) + blocks[11] + 1839030562;\\r\\n        c = (c << 16 | c >>> 16) + d << 0;\\r\\n        b += (da ^ c) + blocks[14] - 35309556;\\r\\n        b = (b << 23 | b >>> 9) + c << 0;\\r\\n        bc = b ^ c;\\r\\n        a += (bc ^ d) + blocks[1] - 1530992060;\\r\\n        a = (a << 4 | a >>> 28) + b << 0;\\r\\n        d += (bc ^ a) + blocks[4] + 1272893353;\\r\\n        d = (d << 11 | d >>> 21) + a << 0;\\r\\n        da = d ^ a;\\r\\n        c += (da ^ b) + blocks[7] - 155497632;\\r\\n        c = (c << 16 | c >>> 16) + d << 0;\\r\\n        b += (da ^ c) + blocks[10] - 1094730640;\\r\\n        b = (b << 23 | b >>> 9) + c << 0;\\r\\n        bc = b ^ c;\\r\\n        a += (bc ^ d) + blocks[13] + 681279174;\\r\\n        a = (a << 4 | a >>> 28) + b << 0;\\r\\n     ";\n  builder.string += "   d += (bc ^ a) + blocks[0] - 358537222;\\r\\n        d = (d << 11 | d >>> 21) + a << 0;\\r\\n        da = d ^ a;\\r\\n        c += (da ^ b) + blocks[3] - 722521979;\\r\\n        c = (c << 16 | c >>> 16) + d << 0;\\r\\n        b += (da ^ c) + blocks[6] + 76029189;\\r\\n        b = (b << 23 | b >>> 9) + c << 0;\\r\\n        bc = b ^ c;\\r\\n        a += (bc ^ d) + blocks[9] - 640364487;\\r\\n        a = (a << 4 | a >>> 28) + b << 0;\\r\\n        d += (bc ^ a) + blocks[12] - 421815835;\\r\\n        d = (d << 11 | d >>> 21) + a << 0;\\r\\n        da = d ^ a;\\r\\n        c += (da ^ b) + blocks[15] + 530742520;\\r\\n        c = (c << 16 | c >>> 16) + d << 0;\\r\\n        b += (da ^ c) + blocks[2] - 995338651;\\r\\n        b = (b << 23 | b >>> 9) + c << 0;\\r\\n        a += (c ^ (b | ~d)) + blocks[0] - 198630844;\\r\\n        a = (a << 6 | a >>> 26) + b << 0;\\r\\n        d += (b ^ (a | ~c)) + blocks[7] + 1126891415;\\r\\n        d = (d << 10 | d >>> 22) + a << 0;\\r\\n        c += (a ^ (d | ~b)) + blocks[14] - 1416354905;\\r\\n        c = (c << 15 | c >>> 17) + d << 0;\\r\\n        b += (d ^ (c | ~a)) + blocks[5] - 57434055;\\r\\n        b = (b << 21 | b >>> 11) + c << 0;\\r\\n        a += (c ^ (b | ~d)) + blocks[12] + 1700485571;\\r\\n        a = (a << 6 | a >>> 26) + b << 0;\\r\\n        d += (b ^ (a | ~c)) + blocks[3] - 1894986606;\\r\\n        d = (d << 10 | d >>> 22) + a << 0;\\r\\n        c += (a ^ (d | ~b)) + blocks[10] - 1051523;\\r\\n        c = (c << 15 | c >>> 17) + d << 0;\\r\\n        b += (d ^ (c | ~a)) + blocks[1] - 2054922799;\\r\\n        b = (b << 21 | b >>> 11) + c << 0;\\r\\n        a += (c ^ (b | ~d)) + blocks[8] + 1873313359;\\r\\n        a = (a << 6 | a >>> 26) + b << 0;\\r\\n        d += (b ^ (a | ~c)) + blocks[15] - 30611744;\\r\\n        d = (d << 10 | d >>> 22) + a << 0;\\r\\n        c += (a ^ (d | ~b)) + blocks[6] - 1560198380;\\r\\n        c = (c << 15 | c >>> 17) + d << 0;\\r\\n        b += (d ^ (c | ~a)) + blocks[13] + 1309151649;\\r\\n        b = (b << 21 | b >>> 11) + c << 0;\\r\\n        a += (c ^ (b | ~d)) + blocks[4] - 145523070;\\r\\n        a = (a << 6 | a >>> 26) + b << 0;\\r\\n        d += (b ^ (a | ~c)) + blocks[11] - 1120210379;\\r\\n        d = (d << 10 | d >>> 22) + a << 0;\\r\\n        c += (a ^ (d | ~b)) + blocks[2] + 718787259;\\r\\n        c = (c << 15 | c >>> 17) + d << 0;\\r\\n        b += (d ^ (c | ~a)) + blocks[9] - 343485551;\\r\\n        b = (b << 21 | b >>> 11) + c << 0;\\r\\n\\r\\n        if (this.first) {\\r\\n            this.h0 = a + 1732584193 << 0;\\r\\n            this.h1 = b - 271733879 << 0;\\r\\n            this.h2 = c - 1732584194 << 0;\\r\\n            this.h3 = d + 271733878 << 0;\\r\\n            this.first = false;\\r\\n        } else {\\r\\n            this.h0 = this.h0 + a << 0;\\r\\n            this.h1 = this.h1 + b << 0;\\r\\n            this.h2 = this.h2 + c << 0;\\r\\n            this.h3 = this.h3 + d << 0;\\r\\n        }\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @method hex\\r\\n     * @memberof Md5\\r\\n     * @instance\\r\\n     * @description Output hash as hex string\\r\\n     * @returns {String} Hex string\\r\\n     * @see {@link md5.hex}\\r\\n     * @example\\r\\n     * hash.hex();\\r\\n     */\\r\\n    Md5.prototype.hex = function () {\\r\\n        this.finalize();\\r\\n\\r\\n        var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\\r\\n\\r\\n        return HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\\r\\n            HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\\r\\n            HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\\r\\n            HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\\r\\n            HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\\r\\n            HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\\r\\n            HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\\r\\n            HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\\r\\n            HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\\r\\n            HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\\r\\n            HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\\r\\n            HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\\r\\n            HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\\r\\n            HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\\r\\n            HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\\r\\n            HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F];\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @method toString\\r\\n     * @memberof Md5\\r\\n     * @instance\\r\\n     * @description Output hash as hex string\\r\\n     * @returns {String} Hex string\\r\\n     * @see {@link md5.hex}\\r\\n     * @example\\r\\n     * hash.toString();\\r\\n     */\\r\\n    Md5.prototype.toString = Md5.prototype.hex;\\r\\n\\r\\n    /**\\r\\n     * @method digest\\r\\n     * @memberof Md5\\r\\n     * @instance\\r\\n     * @description Output hash as bytes array\\r\\n     * @returns {Array} Bytes array\\r\\n     * @see {@link md5.digest}\\r\\n     * @example\\r\\n     * hash.digest();\\r\\n     */\\r\\n    Md5.prototype.digest = function () {\\r\\n        this.finalize();\\r\\n\\r\\n        var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\\r\\n        return [\\r\\n            h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 24) & 0xFF,\\r\\n            h1 & 0xFF, (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 24) & 0xFF,\\r\\n            h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 24) & 0xFF,\\r\\n            h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 24) & 0xFF\\r\\n        ];\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @method array\\r\\n     * @memberof Md5\\r\\n     * @instance\\r\\n     * @description Output hash as bytes array\\r\\n     * @returns {Array} Bytes array\\r\\n     * @see {@link md5.array}\\r\\n     * @example\\r\\n     * hash.array();\\r\\n     */\\r\\n    Md5.prototype.array = Md5.prototype.digest;\\r\\n\\r\\n    /**\\r\\n     * @method arrayBuffer\\r\\n     * @memberof Md5\\r\\n     * @instance\\r\\n     * @description Output hash as ArrayBuffer\\r\\n     * @returns {ArrayBuffer} ArrayBuffer\\r\\n     * @see {@link md5.arrayBuffer}\\r\\n     * @example\\r\\n     * hash.arrayBuffer();\\r\\n     */\\r\\n    Md5.prototype.arrayBuffer = function () {\\r\\n        this.finalize();\\r\\n\\r\\n        var buffer = new ArrayBuffer(16);\\r\\n        var blocks = new Uint32Array(buffer);\\r\\n        blocks[0] = this.h0;\\r\\n        blocks[1] = this.h1;\\r\\n        blocks[2] = this.h2;\\r\\n        blocks[3] = this.h3;\\r\\n        return buffer;\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @method buffer\\r\\n     * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\\r\\n     * @memberof Md5\\r\\n     * @instance\\r\\n     * @description Output hash as ArrayBuffer\\r\\n     * @returns {ArrayBuffer} ArrayBuffer\\r\\n     * @see {@link md5.buffer}\\r\\n     * @example\\r\\n     * hash.buffer();\\r\\n     */\\r\\n    Md5.prototype.buffer = Md5.prototype.arrayBuffer;\\r\\n\\r\\n    var exports = createMethod();\\r\\n\\r\\n    if (COMMON_JS) {\\r\\n        module.exports = exports;\\r\\n    } else {\\r\\n        /**\\r\\n         * @method md5\\b\\r\\n         * @description Md5 hash function, export to global in browsers.\\r\\n         * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\r\\n         * @returns {String} md5 hashes\\r\\n         * @example\\r\\n         * md5(\'\'); // d41d8cd98f00b204e9800998ecf8427e\\r\\n         * md5(\'The quick brown fox jumps over the lazy dog\'); // 9e107d9d372bb6826bd81d3542a419d6\\r\\n         * md5(\'The quick brown fox jumps over the lazy dog.\'); // e4d909c290d0fb1ca068ffaddf22cbd0\\r\\n         *\\r\\n         * // It also supports UTF-8 encoding\\r\\n         * md5(\'\\u4E2D\\u6587\'); // a7bac2239fcdcb3a067903d8077c4a07\\r\\n         *\\r\\n         * // It also supports byte `Array`, `Uint8Array`, `ArrayBuffer`\\r\\n         * md5([]); // d41d8cd98f00b204e9800998ecf8427e\\r\\n         * md5(new Uint8Array([])); // d41d8cd98f00b204e9800998ecf8427e\\r\\n         */\\r\\n        root.md5 = exports;\\r\\n        if (AMD) {\\r\\n            define(function () {\\r\\n                return exports;\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n}(this));";\n  return builder.string;\n}\n;\nvar Lgwt_material_design_addins_client_avatar_MaterialAvatarDebugClientBundle_1default_1InlineClientBundleGenerator$2_2_classLit = createForClass(\'gwt.material.design.addins.client.avatar\', \'MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator/2\', 2348);\nfunction $clinit_MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$jdenticonDebugJsInitializer(){\n  $clinit_MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$jdenticonDebugJsInitializer = emptyMethod;\n  jdenticonDebugJs = new MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$1;\n}\n\nfunction $clinit_MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$md5DebugJsInitializer(){\n  $clinit_MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$md5DebugJsInitializer = emptyMethod;\n  md5DebugJs = new MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$2;\n}\n\nfunction AvatarPresenter(eventBus, view, proxy){\n  $clinit_PresenterWidget();\n  Presenter.call(this, eventBus, view, proxy, ($clinit_ApplicationPresenter() , SLOT_MAIN));\n}\n\ndefineClass(828, 59, $intern_56, AvatarPresenter);\n_.onReveal = function onReveal_3(){\n  $clinit_SetPageTitleEvent();\n  $fireEvent_1(this, new SetPageTitleEvent(\'Avatar\', \'Generated avatar based on JDenticon that provides a unique avatar based on unique name.\', \'addins/avatar/AvatarView\', \'\'));\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_avatar_AvatarPresenter_2_classLit = createForClass(\'gwt.material.design.demo.client.application.addins.avatar\', \'AvatarPresenter\', 828);\nfunction $onUpdateAvatar(this$static){\n  $setName(this$static.avatar, $getText(this$static.txtAvatarName.valueBoxBase));\n  $initialize(this$static.avatar);\n}\n\nfunction AvatarView(){\n  ViewImpl.call(this);\n  $initWidget_0(this, $build_f_HTMLPanel1_2(new AvatarView_BinderImpl$Widgets(this)));\n}\n\ndefineClass(1055, 62, $intern_57, AvatarView);\nvar Lgwt_material_design_demo_client_application_addins_avatar_AvatarView_2_classLit = createForClass(\'gwt.material.design.demo.client.application.addins.avatar\', \'AvatarView\', 1055);\nfunction $build_f_HTMLPanel1_2(this$static){\n  var __attachRecord__, f_HTMLPanel1, f_MaterialRow2, f_MaterialRow6, f_MaterialTitle3, f_PrettyPre4, sb, f_avatar$MaterialAvatar5, f_MaterialTitle7, f_MaterialRow8, f_MaterialColumn9, f_MaterialCard10, avatar, txtAvatarName, f_PrettyPre11, sb_0;\n  f_HTMLPanel1 = new HTMLPanel($html3_0(this$static.domId0, this$static.domId1).html_0);\n  __attachRecord__ = attachToDom(($clinit_DOM() , f_HTMLPanel1.element_0));\n  $get_0(this$static.domId0Element);\n  $get_0(this$static.domId1Element);\n  __attachRecord__.origParent?$insertBefore(__attachRecord__.origParent, __attachRecord__.element, __attachRecord__.origSibling):orphan(__attachRecord__.element);\n  $addAndReplaceElement(f_HTMLPanel1, (f_MaterialRow2 = new MaterialRow , $add_14(f_MaterialRow2, (f_MaterialTitle3 = new MaterialTitle , $setInnerHTML($getElement(f_MaterialTitle3.header), ($clinit_SafeHtmlUtils() , (new SafeHtmlString(htmlEscape(\'Usage\'))).html_0)) , f_MaterialTitle3)) , $add_14(f_MaterialRow2, (f_PrettyPre4 = new PrettyPre , $setHTML_0(f_PrettyPre4, (sb = new StringBuilder , sb.string += \'\\u2003&lt;!-- Addin Import --&gt;<br> xmlns:ma="urn:import:gwt.material.design.addins.client"<br><br> &lt;!-- Addin Usage --&gt;<br> &lt;ma:avatar.MaterialAvatar name="kevzlou7979" width="150" height="150" /&gt;\' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb.string)).html_0) , setStyleName(f_PrettyPre4.element_0, \'lang-xml\', true) , f_PrettyPre4)) , $add_14(f_MaterialRow2, (f_avatar$MaterialAvatar5 = new MaterialAvatar , f_avatar$MaterialAvatar5.element_0.setAttribute(\'width\', \'150\') , f_avatar$MaterialAvatar5.name_0 = \'kevzlou7979\' , f_avatar$MaterialAvatar5.element_0.setAttribute(\'height\', \'150\') , f_avatar$MaterialAvatar5)) , setStyleName(f_MaterialRow2.element_0, \'code\', true) , f_MaterialRow2), $get_0(this$static.domId0Element));\n  $addAndReplaceElement(f_HTMLPanel1, (f_MaterialRow6 = new MaterialRow , $add_14(f_MaterialRow6, (f_MaterialTitle7 = new MaterialTitle , $setText_13(f_MaterialTitle7.paragraph, \'You can easily update the avatar during textbox key up events.\') , $setInnerHTML($getElement(f_MaterialTitle7.header), (new SafeHtmlString(htmlEscape(\'initialize()\'))).html_0) , f_MaterialTitle7)) , $add_14(f_MaterialRow6, (f_MaterialRow8 = new MaterialRow , $add_14(f_MaterialRow8, (f_MaterialColumn9 = new MaterialColumn , $add_14(f_MaterialColumn9, (f_MaterialCard10 = new MaterialCard , $add_14(f_MaterialCard10, (avatar = new MaterialAvatar , $setBackgroundColor(avatar, ($clinit_Color() , WHITE)) , $setShadow_0((!avatar.shadowMixin && (avatar.shadowMixin = new ShadowMixin(avatar)) , avatar.shadowMixin), 1) , avatar.element_0.setAttribute(\'width\', \'150\') , avatar.name_0 = \'marjorie\' , $setOn((!avatar.circleMixin && (avatar.circleMixin = new ToggleStyleMixin(avatar, \'circle\')) , avatar.circleMixin), true) , avatar.element_0.style[\'marginTop\'] = ($clinit_Style$Unit() , \'-100.0px\') , avatar.element_0.setAttribute(\'height\', \'150\') , this$static.owner.avatar = avatar , avatar)) , $add_14(f_MaterialCard10, (txtAvatarName = new MaterialTextBox , $setGrid_0((!txtAvatarName.gridMixin && (txtAvatarName.gridMixin = new GridMixin(txtAvatarName)) , txtAvatarName.gridMixin), \'s12\') , $setText_2(txtAvatarName.valueBoxBase, \'marjorie\') , \'marjorie\'.length != 0 && $addStyleName(txtAvatarName.label_1, \'active\') , $getElement(txtAvatarName.valueBoxBase).setAttribute(\'placeholder\', \'Avatar Name\') , $getText_1(txtAvatarName.label_1).length == 0 || $setStyleName(txtAvatarName.label_1, \'active\') , $addKeyUpHandler_0(txtAvatarName, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1) , this$static.owner.txtAvatarName = txtAvatarName , txtAvatarName)) , f_MaterialCard10.element_0.style[\'padding\'] = \'20.0px\' , $setTextAlign(f_MaterialCard10, ($clinit_TextAlign() , CENTER_5)) , f_MaterialCard10.element_0.style[\'marginTop\'] = \'100.0px\' , f_MaterialCard10.element_0.style[\'height\'] = \'200px\' , f_MaterialCard10)) , $setGrid_0((!f_MaterialColumn9.gridMixin && (f_MaterialColumn9.gridMixin = new GridMixin(f_MaterialColumn9)) , f_MaterialColumn9.gridMixin), \'l6 m6 s12\') , f_MaterialColumn9)) , f_MaterialRow8)) , $add_14(f_MaterialRow6, (f_PrettyPre11 = new PrettyPre , $setHTML_0(f_PrettyPre11, (sb_0 = new StringBuilder , sb_0.string += \'\\u2003@UiHandler("txtAvatarName")<br> void onUpdateAvatar(KeyUpEvent e) {<br> \\u2003avatar.setName(txtAvatarName.getText());<br> \\u2003avatar.initialize();<br> }\' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_0.string)).html_0) , setStyleName(f_PrettyPre11.element_0, \'lang-java\', true) , f_PrettyPre11)) , setStyleName(f_MaterialRow6.element_0, \'code\', true) , f_MaterialRow6), $get_0(this$static.domId1Element));\n  return f_HTMLPanel1;\n}\n\nfunction AvatarView_BinderImpl$Widgets(owner){\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1 = new AvatarView_BinderImpl$Widgets$1(this);\n  this.owner = owner;\n  this.domId0 = $createUniqueId($doc);\n  this.domId1 = $createUniqueId($doc);\n  this.domId0Element = new LazyDomElement(this.domId0);\n  this.domId1Element = new LazyDomElement(this.domId1);\n}\n\ndefineClass(1380, 1, {}, AvatarView_BinderImpl$Widgets);\nvar Lgwt_material_design_demo_client_application_addins_avatar_AvatarView_1BinderImpl$Widgets_2_classLit = createForClass(\'gwt.material.design.demo.client.application.addins.avatar\', \'AvatarView_BinderImpl/Widgets\', 1380);\nfunction AvatarView_BinderImpl$Widgets$1(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1381, 1, $intern_99, AvatarView_BinderImpl$Widgets$1);\n_.onKeyUp = function onKeyUp_3(event_0){\n  $onUpdateAvatar(this.this$11.owner);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_avatar_AvatarView_1BinderImpl$Widgets$1_2_classLit = createForClass(\'gwt.material.design.demo.client.application.addins.avatar\', \'AvatarView_BinderImpl/Widgets/1\', 1381);\nfunction $html3_0(arg0, arg1){\n  var sb;\n  sb = new StringBuilder;\n  sb.string += "<span id=\'";\n  $append_4(sb, htmlEscape(arg0));\n  sb.string += "\'><\\/span>  <span id=\'";\n  $append_4(sb, htmlEscape(arg1));\n  sb.string += "\'><\\/span>";\n  return new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb.string);\n}\n\nfunction $get_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarPresenter$_annotation$$none$$(this$static){\n  var result, result0;\n  if (!this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarPresenter$_annotation$$none$$) {\n    result0 = new AvatarPresenter($get_Key$type$com$google$web$bindery$event$shared$EventBus$_annotation$$none$$($getFragment_com_google_web_bindery_event_shared(this$static.injector)), (result = $get_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarView$_annotation$$none$$(this$static) , result), $get_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarPresenter$MyProxy$_annotation$$none$$(this$static));\n    $automaticBind(($getFragment_com_gwtplatform_mvp_client(this$static.injector) , result0), $get_Key$type$com$gwtplatform$mvp$client$AutobindDisable$_annotation$$none$$($getFragment_com_gwtplatform_mvp_client(this$static.injector)));\n    this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarPresenter$_annotation$$none$$ = result0;\n  }\n  return this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarPresenter$_annotation$$none$$;\n}\n\nfunction $get_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarView$_annotation$$none$$(this$static){\n  var result;\n  if (!this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarView$_annotation$$none$$) {\n    result = new AvatarView;\n    this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarView$_annotation$$none$$ = result;\n  }\n  return this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarView$_annotation$$none$$;\n}\n\ndefineClass(713, 1, $intern_108);\n_.onSuccess_0 = function onSuccess_3(){\n  $onSuccess(this.val$callback2, $get_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarPresenter$_annotation$$none$$(this.this$11.this$01));\n}\n;\n$entry(onLoad_0)(1);\n\n//# sourceURL=gwtmaterialdemo-1.js\n')
