$wnd.gwtmaterialdemo.runAsyncCallback2("function $setOpacity(this$static, opacity){\n  $cssSetOpacity(($clinit_DOM() , this$static.element).style, opacity);\n}\n\nfunction animate(source, target){\n  $wnd.cta(source, target);\n}\n\nfunction animate_0(source, target, callback){\n  $wnd.cta(source, target, function(){\n    callback != null && callback.run();\n  }\n  );\n}\n\nfunction PathAnimatorPresenter(eventBus, view, proxy){\n  $clinit_PathAnimatorPresenter();\n  Presenter.call(this, eventBus, view, proxy, ($clinit_ApplicationPresenter() , SLOT_MainContent));\n}\n\ndefineClass(557, 55, $intern_42, PathAnimatorPresenter);\n_.onReveal = function onReveal_3(){\n  $clinit_SetPageTitleEvent();\n  $fireEvent_1(this, new SetPageTitleEvent('Path Animator', 'Custom component that provides meaningfull transition between two elements to show visual continuity.'));\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_pathanimator_PathAnimatorPresenter_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.pathanimator', 'PathAnimatorPresenter', 557);\nfunction $onCardClose(this$static){\n  ($clinit_DOM() , this$static.panelTarget2.element).style['visibility'] = ($clinit_Style$Visibility() , 'hidden');\n  $setOpacity(this$static.panelTarget2, 0);\n  animate(this$static.panelTarget2.element, this$static.btnSource2.element);\n}\n\nfunction $onCardClose3(this$static){\n  ($clinit_DOM() , this$static.panelTarget3.element).style['visibility'] = ($clinit_Style$Visibility() , 'hidden');\n  $setOpacity(this$static.panelTarget3, 0);\n  animate(this$static.panelTarget3.element, this$static.btnSource3.element);\n}\n\nfunction $onClickCard(this$static){\n  var callback;\n  callback = new PathAnimatorView$2(this$static);\n  animate_0(($clinit_DOM() , this$static.card.element), this$static.panelTarget2.element, callback);\n}\n\nfunction $onClickCard3(this$static){\n  var callback;\n  callback = new PathAnimatorView$3(this$static);\n  animate_0(($clinit_DOM() , this$static.btnSource3.element), this$static.panelTarget3.element, callback);\n}\n\nfunction $onClose(this$static){\n  ($clinit_DOM() , this$static.panelTarget1.element).style['visibility'] = ($clinit_Style$Visibility() , 'hidden');\n  $setOpacity(this$static.panelTarget1, 0);\n  animate(this$static.panelTarget1.element, this$static.btnSource1.element);\n}\n\nfunction $onSource(this$static){\n  var callback;\n  callback = new PathAnimatorView$1(this$static);\n  animate_0(($clinit_DOM() , this$static.btnSource1.element), this$static.panelTarget1.element, callback);\n}\n\nfunction PathAnimatorView(){\n  ViewImpl.call(this);\n  $initWidget_0(this, $build_f_HTMLPanel1_1(new PathAnimatorView_BinderImpl$Widgets(this)));\n}\n\ndefineClass(700, 60, $intern_43, PathAnimatorView);\nvar Lgwt_material_design_demo_client_application_addins_pathanimator_PathAnimatorView_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.pathanimator', 'PathAnimatorView', 700);\nfunction PathAnimatorView$1(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(701, 1, $intern_41, PathAnimatorView$1);\n_.run = function run_2(){\n  ($clinit_DOM() , this.this$01.panelTarget1.element).style['visibility'] = ($clinit_Style$Visibility() , 'visible');\n  $setOpacity(this.this$01.panelTarget1, 1);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_pathanimator_PathAnimatorView$1_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.pathanimator', 'PathAnimatorView/1', 701);\nfunction PathAnimatorView$2(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(702, 1, $intern_41, PathAnimatorView$2);\n_.run = function run_3(){\n  ($clinit_DOM() , this.this$01.panelTarget2.element).style['visibility'] = ($clinit_Style$Visibility() , 'visible');\n  $setOpacity(this.this$01.panelTarget2, 1);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_pathanimator_PathAnimatorView$2_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.pathanimator', 'PathAnimatorView/2', 702);\nfunction PathAnimatorView$3(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(703, 1, $intern_41, PathAnimatorView$3);\n_.run = function run_4(){\n  ($clinit_DOM() , this.this$01.panelTarget3.element).style['visibility'] = ($clinit_Style$Visibility() , 'visible');\n  $setOpacity(this.this$01.panelTarget3, 1);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_pathanimator_PathAnimatorView$3_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.pathanimator', 'PathAnimatorView/3', 703);\nfunction PathAnimatorView_BinderImpl(){\n}\n\ndefineClass(889, 1, {}, PathAnimatorView_BinderImpl);\nvar Lgwt_material_design_demo_client_application_addins_pathanimator_PathAnimatorView_1BinderImpl_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.pathanimator', 'PathAnimatorView_BinderImpl', 889);\nfunction $build_f_HTMLPanel1_1(this$static){\n  var __attachRecord__, f_HTMLPanel1, f_MaterialTitle2, f_PrettyPre3, f_MaterialTitle4, f_PrettyPre5, f_MaterialTitle6, f_PrettyPre7, f_MaterialTitle8, btnSource1, f_MaterialTitle9, f_MaterialRow10, f_MaterialTitle15, btnSource3, f_MaterialRow16, panelTarget1, panelTarget2, sb, sb_0, sb_1, card, f_MaterialCardContent11, f_MaterialCardTitle12, f_MaterialLabel13, f_MaterialCardAction14, btnSource2, panelTarget3, f_MaterialCardContent17, f_MaterialCardTitle18, f_MaterialLabel19, f_MaterialCardAction20, btnClose3, f_MaterialTitle21, btnClose1, f_MaterialTitle22, btnClose2;\n  f_HTMLPanel1 = new HTMLPanel($html4_0(this$static.domId0, this$static.domId1, this$static.domId2, this$static.domId3, this$static.domId4, this$static.domId5, this$static.domId6, this$static.domId7, this$static.domId8, this$static.domId9, this$static.domId10, this$static.domId11, this$static.domId12, this$static.domId13, this$static.domId14).html);\n  __attachRecord__ = attachToDom(($clinit_DOM() , f_HTMLPanel1.element));\n  $get_0(this$static.domId0Element);\n  $get_0(this$static.domId1Element);\n  $get_0(this$static.domId2Element);\n  $get_0(this$static.domId3Element);\n  $get_0(this$static.domId4Element);\n  $get_0(this$static.domId5Element);\n  $get_0(this$static.domId6Element);\n  $get_0(this$static.domId7Element);\n  $get_0(this$static.domId8Element);\n  $get_0(this$static.domId9Element);\n  $get_0(this$static.domId10Element);\n  $get_0(this$static.domId11Element);\n  $get_0(this$static.domId12Element);\n  $get_0(this$static.domId13Element);\n  $get_0(this$static.domId14Element);\n  __attachRecord__.origParent?$insertBefore(__attachRecord__.origParent, __attachRecord__.element, __attachRecord__.origSibling):orphan(__attachRecord__.element);\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_MaterialTitle2 = new MaterialTitle , $setInnerHTML($getElement(f_MaterialTitle2.header), 'Markup Definition') , $setText_4(f_MaterialTitle2.paragraph, 'FIRST , Set your source and target components.') , f_MaterialTitle2), $get_0(this$static.domId0Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_PrettyPre3 = new PrettyPre , $setHTML(f_PrettyPre3, (sb = new StringBuilder , sb.string += '\\u2003&lt;!-- Source Component --&gt;<br> &lt;m:MaterialButton ui:field=\"btnSource\" text=\"Meaningful Transitions\" backgroundColor=\"blue\" size=\"LARGE\" /&gt;<br><br> &lt;!-- Target Component --&gt;<br> .overlayPanel{<br> \\u2003width: 100%;<br> \\u2003height: 100%;<br> \\u2003top: 0;<br> \\u2003left: 0;<br> \\u2003right: 0;<br> \\u2003bottom: 0;<br> \\u2003position: fixed;<br> \\u2003z-index: 1000;<br> \\u2003opacity: 0;<br> \\u2003visibility: hidden;<br> }<br><br> &lt;m:MaterialPanel ui:field=\"panelTarget\" textAlign=\"CENTER\" backgroundColor=\"blue\" addStyleNames=\"{style.overlayPanel}\"&gt;<br> \\u2003\\u2003&lt;m:MaterialTitle addStyleNames=\"{style.title}\" textColor=\"white\" title=\"Meaningful transitions\" description=\"Motion design can effectively guide the user\\u2019s attention in ways that both inform and delight. Use motion to smoothly transport users between navigational contexts, explain changes in the arrangement of elements on a screen, and reinforce element hierarchy.\"/&gt;<br> \\u2003&lt;m:MaterialButton ui:field=\"btnClose\" text=\"Back to Main Page\" backgroundColor=\"blue lighten-2\" textColor=\"white\" size=\"LARGE\" /&gt;<br> &lt;/m:MaterialPanel&gt;<br>' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb.string)).html) , setStyleName(f_PrettyPre3.element, 'lang-xml', true) , setStyleName(f_PrettyPre3.element, 'z-depth-1', true) , f_PrettyPre3), $get_0(this$static.domId1Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_MaterialTitle4 = new MaterialTitle , $setInnerHTML($getElement(f_MaterialTitle4.header), 'Source Logic') , $setText_4(f_MaterialTitle4.paragraph, 'SECOND , Add an event into your source component and inside that method you need to call MaterialPathAnimator.animate() method and include the callback method for your target component.') , f_MaterialTitle4), $get_0(this$static.domId2Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_PrettyPre5 = new PrettyPre , $setHTML(f_PrettyPre5, (sb_0 = new StringBuilder , sb_0.string += '\\u2003@UiHandler(\"btnSource\")<br> void onSource(ClickEvent e) {<br> \\u2003Runnable callback = new Runnable() {<br> \\u2003\\u2003@Override<br> \\u2003\\u2003\\u2003public void run() {<br> \\u2003\\u2003\\u2003panelTarget.getElement().getStyle().setVisibility(Style.Visibility.VISIBLE);<br> \\u2003\\u2003\\u2003panelTarget.setOpacity(1);<br> \\u2003\\u2003}<br> \\u2003};<br> \\u2003MaterialPathAnimator.animate(btnSource.getElement(), panelTarget.getElement(), callback);<br> }' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_0.string)).html) , setStyleName(f_PrettyPre5.element, 'lang-xml', true) , setStyleName(f_PrettyPre5.element, 'z-depth-1', true) , f_PrettyPre5), $get_0(this$static.domId3Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_MaterialTitle6 = new MaterialTitle , $setInnerHTML($getElement(f_MaterialTitle6.header), 'Target Logic') , $setText_4(f_MaterialTitle6.paragraph, 'THIRD , In order to go to the original position of Source component from Target component. You need to set the resting styles of target component and call MaterialPathAnimator.animate() method to apply the deslightful animation.') , f_MaterialTitle6), $get_0(this$static.domId4Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_PrettyPre7 = new PrettyPre , $setHTML(f_PrettyPre7, (sb_1 = new StringBuilder , sb_1.string += '\\u2003@UiHandler(\"btnClose\")<br> void onClose(ClickEvent e) {<br> \\u2003panelTarget.getElement().getStyle().setVisibility(Style.Visibility.HIDDEN);<br> \\u2003panelTarget.setOpacity(0);<br> \\u2003MaterialPathAnimator.animate(panelTarget.getElement(), btnSource.getElement());<br> }' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_1.string)).html) , setStyleName(f_PrettyPre7.element, 'lang-xml', true) , setStyleName(f_PrettyPre7.element, 'z-depth-1', true) , f_PrettyPre7), $get_0(this$static.domId5Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_MaterialTitle8 = new MaterialTitle , $setInnerHTML($getElement(f_MaterialTitle8.header), '1. Button to Overlay Panel') , $setText_4(f_MaterialTitle8.paragraph, 'Source Component : MaterialButton and Target Component : MaterialPanel') , f_MaterialTitle8), $get_0(this$static.domId6Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (btnSource1 = new MaterialButton , btnSource1.span_0.setText('Meaningful Transitions') , $add_13(btnSource1, btnSource1.span_0) , $setBackgroundColor((!btnSource1.colorsMixin && (btnSource1.colorsMixin = new ColorsMixin(btnSource1)) , btnSource1.colorsMixin), 'blue') , $setSize(btnSource1, ($clinit_ButtonSize() , LARGE)) , $addDomHandler(btnSource1, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1, ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_1)) , this$static.owner.btnSource1 = btnSource1 , btnSource1), $get_0(this$static.domId7Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_MaterialTitle9 = new MaterialTitle , $setInnerHTML($getElement(f_MaterialTitle9.header), '2. Card to Overlay Panel') , $setText_4(f_MaterialTitle9.paragraph, 'Source Component : Card and Target Component : Material Panel') , f_MaterialTitle9), $get_0(this$static.domId8Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_MaterialRow10 = new MaterialRow , $add_13(f_MaterialRow10, (card = new MaterialCard , $add_13(card, (f_MaterialCardContent11 = new MaterialCardContent , $add_13(f_MaterialCardContent11, (f_MaterialCardTitle12 = new MaterialCardTitle , $setIconPosition_0(f_MaterialCardTitle12, ($clinit_IconPosition() , RIGHT_5)) , f_MaterialCardTitle12.span_0.setText('Sample') , $add_13(f_MaterialCardTitle12, f_MaterialCardTitle12.span_0) , $setIconType_0(f_MaterialCardTitle12, ($clinit_IconType() , POLYMER)) , f_MaterialCardTitle12)) , $add_13(f_MaterialCardContent11, (f_MaterialLabel13 = new MaterialLabel , $setTextOrHtml(f_MaterialLabel13.directionalTextHelper, 'I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.') , f_MaterialLabel13)) , $setTextColor((!f_MaterialCardContent11.colorsMixin && (f_MaterialCardContent11.colorsMixin = new ColorsMixin(f_MaterialCardContent11)) , f_MaterialCardContent11.colorsMixin), 'white') , f_MaterialCardContent11)) , $add_13(card, (f_MaterialCardAction14 = new MaterialCardAction , $add_13(f_MaterialCardAction14, (btnSource2 = new MaterialLink , btnSource2.span_0.setText('Turn to overlay panel') , $add_13(btnSource2, btnSource2.span_0) , $setIconType(btnSource2, POLYMER) , $addDomHandler(btnSource2, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames2, (null , TYPE_1)) , this$static.owner.btnSource2 = btnSource2 , btnSource2)) , f_MaterialCardAction14)) , $setBackgroundColor((!card.colorsMixin && (card.colorsMixin = new ColorsMixin(card)) , card.colorsMixin), 'pink darken-1') , $setGrid_0(card, 'l4') , this$static.owner.card = card , card)) , f_MaterialRow10), $get_0(this$static.domId9Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_MaterialTitle15 = new MaterialTitle , $setInnerHTML($getElement(f_MaterialTitle15.header), '3. Button to Card') , $setText_4(f_MaterialTitle15.paragraph, 'Source Component : MaterialButton and Target Component : Material Card') , f_MaterialTitle15), $get_0(this$static.domId10Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (btnSource3 = new MaterialButton , btnSource3.span_0.setText('Meaningful Transitions') , $add_13(btnSource3, btnSource3.span_0) , $setBackgroundColor((!btnSource3.colorsMixin && (btnSource3.colorsMixin = new ColorsMixin(btnSource3)) , btnSource3.colorsMixin), 'blue') , $setSize(btnSource3, LARGE) , $addDomHandler(btnSource3, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames3, (null , TYPE_1)) , this$static.owner.btnSource3 = btnSource3 , btnSource3), $get_0(this$static.domId11Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_MaterialRow16 = new MaterialRow , $add_13(f_MaterialRow16, (panelTarget3 = new MaterialCard , $add_13(panelTarget3, (f_MaterialCardContent17 = new MaterialCardContent , $add_13(f_MaterialCardContent17, (f_MaterialCardTitle18 = new MaterialCardTitle , $setIconPosition_0(f_MaterialCardTitle18, RIGHT_5) , f_MaterialCardTitle18.span_0.setText('Sample') , $add_13(f_MaterialCardTitle18, f_MaterialCardTitle18.span_0) , $setIconType_0(f_MaterialCardTitle18, POLYMER) , f_MaterialCardTitle18)) , $add_13(f_MaterialCardContent17, (f_MaterialLabel19 = new MaterialLabel , $setTextOrHtml(f_MaterialLabel19.directionalTextHelper, 'I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.') , f_MaterialLabel19)) , $setTextColor((!f_MaterialCardContent17.colorsMixin && (f_MaterialCardContent17.colorsMixin = new ColorsMixin(f_MaterialCardContent17)) , f_MaterialCardContent17.colorsMixin), 'white') , f_MaterialCardContent17)) , $add_13(panelTarget3, (f_MaterialCardAction20 = new MaterialCardAction , $add_13(f_MaterialCardAction20, (btnClose3 = new MaterialLink , btnClose3.span_0.setText('Turn it back') , $add_13(btnClose3, btnClose3.span_0) , $setIconType(btnClose3, POLYMER) , $addDomHandler(btnClose3, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames6, (null , TYPE_1)) , btnClose3)) , f_MaterialCardAction20)) , $setBackgroundColor((!panelTarget3.colorsMixin && (panelTarget3.colorsMixin = new ColorsMixin(panelTarget3)) , panelTarget3.colorsMixin), 'pink darken-1') , $cssSetOpacity(panelTarget3.element.style, 0) , $setGrid_0(panelTarget3, 'l4') , this$static.owner.panelTarget3 = panelTarget3 , panelTarget3)) , f_MaterialRow16), $get_0(this$static.domId12Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (panelTarget1 = new MaterialPanel , $add_13(panelTarget1, (f_MaterialTitle21 = new MaterialTitle , setStyleName(f_MaterialTitle21.element, 'HPBM1FC-h-b', true) , $setTextColor((!f_MaterialTitle21.colorsMixin && (f_MaterialTitle21.colorsMixin = new ColorsMixin(f_MaterialTitle21)) , f_MaterialTitle21.colorsMixin), 'white') , $setInnerHTML($getElement(f_MaterialTitle21.header), 'Meaningful transitions') , $setText_4(f_MaterialTitle21.paragraph, 'Motion design can effectively guide the user\\u2019s attention in ways that both inform and delight. Use motion to smoothly transport users between navigational contexts, explain changes in the arrangement of elements on a screen, and reinforce element hierarchy.') , f_MaterialTitle21)) , $add_13(panelTarget1, (btnClose1 = new MaterialButton , btnClose1.span_0.setText('Back to Main Page') , $add_13(btnClose1, btnClose1.span_0) , $setTextColor((!btnClose1.colorsMixin && (btnClose1.colorsMixin = new ColorsMixin(btnClose1)) , btnClose1.colorsMixin), 'white') , $setBackgroundColor((!btnClose1.colorsMixin && (btnClose1.colorsMixin = new ColorsMixin(btnClose1)) , btnClose1.colorsMixin), 'blue lighten-2') , $setSize(btnClose1, LARGE) , $addDomHandler(btnClose1, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames4, (null , TYPE_1)) , btnClose1)) , setStyleName(panelTarget1.element, 'HPBM1FC-h-a', true) , $setBackgroundColor((!panelTarget1.colorsMixin && (panelTarget1.colorsMixin = new ColorsMixin(panelTarget1)) , panelTarget1.colorsMixin), 'blue') , $setTextAlign(panelTarget1, ($clinit_TextAlign() , CENTER_4)) , this$static.owner.panelTarget1 = panelTarget1 , panelTarget1), $get_0(this$static.domId13Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (panelTarget2 = new MaterialPanel , $add_13(panelTarget2, (f_MaterialTitle22 = new MaterialTitle , setStyleName(f_MaterialTitle22.element, 'HPBM1FC-h-b', true) , $setTextColor((!f_MaterialTitle22.colorsMixin && (f_MaterialTitle22.colorsMixin = new ColorsMixin(f_MaterialTitle22)) , f_MaterialTitle22.colorsMixin), 'white') , $setInnerHTML($getElement(f_MaterialTitle22.header), 'Meaningful transitions') , $setText_4(f_MaterialTitle22.paragraph, 'Motion design can effectively guide the user\\u2019s attention in ways that both inform and delight. Use motion to smoothly transport users between navigational contexts, explain changes in the arrangement of elements on a screen, and reinforce element hierarchy.') , f_MaterialTitle22)) , $add_13(panelTarget2, (btnClose2 = new MaterialButton , btnClose2.span_0.setText('Back to Main Page') , $add_13(btnClose2, btnClose2.span_0) , $setTextColor((!btnClose2.colorsMixin && (btnClose2.colorsMixin = new ColorsMixin(btnClose2)) , btnClose2.colorsMixin), 'white') , $setBackgroundColor((!btnClose2.colorsMixin && (btnClose2.colorsMixin = new ColorsMixin(btnClose2)) , btnClose2.colorsMixin), 'blue lighten-2') , $setSize(btnClose2, LARGE) , $addDomHandler(btnClose2, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames5, (null , TYPE_1)) , btnClose2)) , setStyleName(panelTarget2.element, 'HPBM1FC-h-a', true) , $setBackgroundColor((!panelTarget2.colorsMixin && (panelTarget2.colorsMixin = new ColorsMixin(panelTarget2)) , panelTarget2.colorsMixin), 'pink darken-1') , $setTextAlign(panelTarget2, CENTER_4) , this$static.owner.panelTarget2 = panelTarget2 , panelTarget2), $get_0(this$static.domId14Element));\n  return f_HTMLPanel1;\n}\n\nfunction PathAnimatorView_BinderImpl$Widgets(owner){\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1 = new PathAnimatorView_BinderImpl$Widgets$1(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames2 = new PathAnimatorView_BinderImpl$Widgets$2(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames3 = new PathAnimatorView_BinderImpl$Widgets$3(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames4 = new PathAnimatorView_BinderImpl$Widgets$4(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames5 = new PathAnimatorView_BinderImpl$Widgets$5(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames6 = new PathAnimatorView_BinderImpl$Widgets$6(this);\n  this.owner = owner;\n  this.style_0 = (new PathAnimatorView_BinderImpl_GenBundle_default_InlineClientBundleGenerator , $clinit_PathAnimatorView_BinderImpl_GenBundle_default_InlineClientBundleGenerator$styleInitializer() , style_3);\n  $ensureInjected_8(this.style_0);\n  this.domId0 = $createUniqueId($doc);\n  this.domId1 = $createUniqueId($doc);\n  this.domId2 = $createUniqueId($doc);\n  this.domId3 = $createUniqueId($doc);\n  this.domId4 = $createUniqueId($doc);\n  this.domId5 = $createUniqueId($doc);\n  this.domId6 = $createUniqueId($doc);\n  this.domId7 = $createUniqueId($doc);\n  this.domId8 = $createUniqueId($doc);\n  this.domId9 = $createUniqueId($doc);\n  this.domId10 = $createUniqueId($doc);\n  this.domId11 = $createUniqueId($doc);\n  this.domId12 = $createUniqueId($doc);\n  this.domId13 = $createUniqueId($doc);\n  this.domId14 = $createUniqueId($doc);\n  this.domId0Element = new LazyDomElement(this.domId0);\n  this.domId1Element = new LazyDomElement(this.domId1);\n  this.domId2Element = new LazyDomElement(this.domId2);\n  this.domId3Element = new LazyDomElement(this.domId3);\n  this.domId4Element = new LazyDomElement(this.domId4);\n  this.domId5Element = new LazyDomElement(this.domId5);\n  this.domId6Element = new LazyDomElement(this.domId6);\n  this.domId7Element = new LazyDomElement(this.domId7);\n  this.domId8Element = new LazyDomElement(this.domId8);\n  this.domId9Element = new LazyDomElement(this.domId9);\n  this.domId10Element = new LazyDomElement(this.domId10);\n  this.domId11Element = new LazyDomElement(this.domId11);\n  this.domId12Element = new LazyDomElement(this.domId12);\n  this.domId13Element = new LazyDomElement(this.domId13);\n  this.domId14Element = new LazyDomElement(this.domId14);\n}\n\ndefineClass(890, 1, {}, PathAnimatorView_BinderImpl$Widgets);\nvar Lgwt_material_design_demo_client_application_addins_pathanimator_PathAnimatorView_1BinderImpl$Widgets_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.pathanimator', 'PathAnimatorView_BinderImpl/Widgets', 890);\nfunction PathAnimatorView_BinderImpl$Widgets$1(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(891, 1, $intern_52, PathAnimatorView_BinderImpl$Widgets$1);\n_.onClick = function onClick_13(event_0){\n  $onSource(this.this$11.owner);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_pathanimator_PathAnimatorView_1BinderImpl$Widgets$1_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.pathanimator', 'PathAnimatorView_BinderImpl/Widgets/1', 891);\nfunction PathAnimatorView_BinderImpl$Widgets$2(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(892, 1, $intern_52, PathAnimatorView_BinderImpl$Widgets$2);\n_.onClick = function onClick_14(event_0){\n  $onClickCard(this.this$11.owner);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_pathanimator_PathAnimatorView_1BinderImpl$Widgets$2_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.pathanimator', 'PathAnimatorView_BinderImpl/Widgets/2', 892);\nfunction PathAnimatorView_BinderImpl$Widgets$3(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(893, 1, $intern_52, PathAnimatorView_BinderImpl$Widgets$3);\n_.onClick = function onClick_15(event_0){\n  $onClickCard3(this.this$11.owner);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_pathanimator_PathAnimatorView_1BinderImpl$Widgets$3_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.pathanimator', 'PathAnimatorView_BinderImpl/Widgets/3', 893);\nfunction PathAnimatorView_BinderImpl$Widgets$4(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(894, 1, $intern_52, PathAnimatorView_BinderImpl$Widgets$4);\n_.onClick = function onClick_16(event_0){\n  $onClose(this.this$11.owner);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_pathanimator_PathAnimatorView_1BinderImpl$Widgets$4_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.pathanimator', 'PathAnimatorView_BinderImpl/Widgets/4', 894);\nfunction PathAnimatorView_BinderImpl$Widgets$5(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(895, 1, $intern_52, PathAnimatorView_BinderImpl$Widgets$5);\n_.onClick = function onClick_17(event_0){\n  $onCardClose(this.this$11.owner);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_pathanimator_PathAnimatorView_1BinderImpl$Widgets$5_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.pathanimator', 'PathAnimatorView_BinderImpl/Widgets/5', 895);\nfunction PathAnimatorView_BinderImpl$Widgets$6(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(896, 1, $intern_52, PathAnimatorView_BinderImpl$Widgets$6);\n_.onClick = function onClick_18(event_0){\n  $onCardClose3(this.this$11.owner);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_pathanimator_PathAnimatorView_1BinderImpl$Widgets$6_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.pathanimator', 'PathAnimatorView_BinderImpl/Widgets/6', 896);\nfunction PathAnimatorView_BinderImpl_GenBundle_default_InlineClientBundleGenerator(){\n}\n\ndefineClass(1192, 1, {}, PathAnimatorView_BinderImpl_GenBundle_default_InlineClientBundleGenerator);\nvar style_3;\nvar Lgwt_material_design_demo_client_application_addins_pathanimator_PathAnimatorView_1BinderImpl_1GenBundle_1default_1InlineClientBundleGenerator_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.pathanimator', 'PathAnimatorView_BinderImpl_GenBundle_default_InlineClientBundleGenerator', 1192);\nfunction $ensureInjected_8(this$static){\n  if (!this$static.injected) {\n    this$static.injected = true;\n    $clinit_StyleInjector();\n    inject_0(($clinit_LocaleInfo() , '.HPBM1FC-h-a{width:100%;height:100%;top:0;left:0;right:0;bottom:0;position:fixed;z-index:1000;opacity:0;visibility:hidden}.HPBM1FC-h-b{width:50%;margin:auto;margin-bottom:50px}'));\n    return true;\n  }\n  return false;\n}\n\nfunction PathAnimatorView_BinderImpl_GenBundle_default_InlineClientBundleGenerator$1(){\n}\n\ndefineClass(1193, 1, {}, PathAnimatorView_BinderImpl_GenBundle_default_InlineClientBundleGenerator$1);\n_.getName = function getName_16(){\n  return 'style';\n}\n;\n_.injected = false;\nvar Lgwt_material_design_demo_client_application_addins_pathanimator_PathAnimatorView_1BinderImpl_1GenBundle_1default_1InlineClientBundleGenerator$1_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.pathanimator', 'PathAnimatorView_BinderImpl_GenBundle_default_InlineClientBundleGenerator/1', 1193);\nfunction $clinit_PathAnimatorView_BinderImpl_GenBundle_default_InlineClientBundleGenerator$styleInitializer(){\n  $clinit_PathAnimatorView_BinderImpl_GenBundle_default_InlineClientBundleGenerator$styleInitializer = emptyMethod;\n  style_3 = new PathAnimatorView_BinderImpl_GenBundle_default_InlineClientBundleGenerator$1;\n}\n\nfunction $html4_0(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14){\n  var sb;\n  sb = new StringBuilder;\n  sb.string += \"<span id='\";\n  $append_3(sb, htmlEscape(arg0));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg1));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg2));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg3));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg4));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg5));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg6));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg7));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg8));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg9));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg10));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg11));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg12));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg13));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg14));\n  sb.string += \"'><\\/span>\";\n  return new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb.string);\n}\n\nfunction $get_Key$type$gwt$material$design$demo$client$application$addins$pathanimator$PathAnimatorPresenter$_annotation$$none$$(this$static){\n  var result;\n  if (!this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$pathanimator$PathAnimatorPresenter$_annotation$$none$$) {\n    result = new PathAnimatorPresenter($get_Key$type$com$google$web$bindery$event$shared$EventBus$_annotation$$none$$($getFragment_com_google_web_bindery_event_shared(this$static.injector)), $get_Key$type$gwt$material$design$demo$client$application$addins$pathanimator$PathAnimatorView$_annotation$$none$$(this$static), $get_Key$type$gwt$material$design$demo$client$application$addins$pathanimator$PathAnimatorPresenter$MyProxy$_annotation$$none$$(this$static));\n    $automaticBind(($getFragment_com_gwtplatform_mvp_client(this$static.injector) , result), $get_Key$type$com$gwtplatform$mvp$client$AutobindDisable$_annotation$$none$$($getFragment_com_gwtplatform_mvp_client(this$static.injector)));\n    this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$pathanimator$PathAnimatorPresenter$_annotation$$none$$ = result;\n  }\n  return this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$pathanimator$PathAnimatorPresenter$_annotation$$none$$;\n}\n\nfunction $get_Key$type$gwt$material$design$demo$client$application$addins$pathanimator$PathAnimatorView$_annotation$$none$$(this$static){\n  var result;\n  if (!this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$pathanimator$PathAnimatorView$_annotation$$none$$) {\n    result = new PathAnimatorView(new PathAnimatorView_BinderImpl);\n    this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$pathanimator$PathAnimatorView$_annotation$$none$$ = result;\n  }\n  return this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$pathanimator$PathAnimatorView$_annotation$$none$$;\n}\n\ndefineClass(481, 1, $intern_57);\n_.onSuccess_0 = function onSuccess_1(){\n  $onSuccess_0(this.val$callback2, $get_Key$type$gwt$material$design$demo$client$application$addins$pathanimator$PathAnimatorPresenter$_annotation$$none$$(this.this$11.this$01));\n}\n;\n$entry(onLoad_0)(2);\n\n//# sourceURL=gwtmaterialdemo-2.js\n")
