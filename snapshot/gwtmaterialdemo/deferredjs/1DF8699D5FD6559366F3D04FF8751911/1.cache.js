$wnd.gwtmaterialdemo.runAsyncCallback1('function $clinit_MaterialAvatar(){\n  $clinit_MaterialAvatar = emptyMethod;\n  !startupState && (startupState = new StartupState$DebugState);\n  if (startupState) {\n    injectJs(($clinit_MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$jdenticonDebugJsInitializer() , jdenticonDebugJs), false, true);\n    injectJs(jdenticonDebugJs, false, true);\n  }\n   else {\n    injectJs(($clinit_MaterialAvatarClientBundle_default_InlineClientBundleGenerator$jdenticonJsInitializer() , jdenticonJs), true, false);\n    injectJs(($clinit_MaterialAvatarClientBundle_default_InlineClientBundleGenerator$md5JsInitializer() , md5Js), true, false);\n  }\n}\n\nfunction $initialize(this$static){\n  $setAttribute(($clinit_DOM() , this$static.element_0), \'data-jdenticon-hash\', $wnd.md5(this$static.name_0));\n  $wnd.jdenticon();\n}\n\nfunction $setName(this$static, name_0){\n  this$static.name_0 = name_0;\n}\n\nfunction MaterialAvatar(){\n  $clinit_MaterialAvatar();\n  MaterialWidget_0.call(this, $doc.createElement(\'canvas\'));\n}\n\ndefineClass(580, 22, $intern_64, MaterialAvatar);\n_.onLoad = function onLoad_9(){\n  $onLoad_0(this);\n  this.name_0 != null && ($setAttribute(($clinit_DOM() , this.element_0), \'data-jdenticon-hash\', $wnd.md5(this.name_0)) , $wnd.jdenticon());\n}\n;\n_.setHeight_0 = function setHeight_2(height){\n  $setAttribute(($clinit_DOM() , this.element_0), \'height\', height);\n}\n;\n_.setWidth_0 = function setWidth_2(width_0){\n  $setAttribute(($clinit_DOM() , this.element_0), \'width\', width_0);\n}\n;\nvar Lgwt_material_design_addins_client_avatar_MaterialAvatar_2_classLit = createForClass(\'gwt.material.design.addins.client.avatar\', \'MaterialAvatar\', 580);\nvar jdenticonJs, md5Js;\nfunction MaterialAvatarClientBundle_default_InlineClientBundleGenerator$1(){\n}\n\ndefineClass(2149, 1, {}, MaterialAvatarClientBundle_default_InlineClientBundleGenerator$1);\n_.getName = function getName_10(){\n  return \'jdenticonJs\';\n}\n;\n_.getText = function getText_1(){\n  return \'// Jdenticon 1.3.2 | jdenticon.com | zlib licensed | (c) 2014-2015 Daniel Mester Pirttij\\xE4rvi\\n(function(k,g,h){var l=h(k,k.jQuery);"undefined"!==typeof module&&"exports"in module?module.exports=l:"function"===typeof define&&define.amd?define([],function(){return l}):k[g]=l})(this,"jdenticon",function(k,g){function h(b,a){this.x=b;this.y=a}function l(b,a,c,d){this.o=b;this.s=a;this.f=c;this.l=d}function A(b){this.C=b;this.m=l.O}function m(b){b|=0;return 0>b?"00":16>b?"0"+b.toString(16):256>b?b.toString(16):"ff"}function q(b,a,c){c=0>c?c+6:6<c?c-6:c;return m(255*(1>c?b+(a-b)*c:3>c?a:4>c?b+(a-\\nb)*(4-c):b))}function D(b,a){return[n.w(0,0,a.H(0)),n.v(b,a.A,a.u(.5)),n.w(0,0,a.H(1)),n.v(b,a.A,a.u(1)),n.v(b,a.A,a.u(0))]}function r(b,a,c,d,t){var f=0,u=0;function v(c,d,t,e,g){e=e?parseInt(a.charAt(e),16):0;d=d[parseInt(a.charAt(t),16)%d.length];b.F(n[m[c]]);for(c=0;c<g.length;c++)k.m=new l(f+g[c][0]*h,u+g[c][1]*h,h,e++%4),d(k,h,c);b.G()}function e(a){if(0<=a.indexOf(g))for(var b=0;b<a.length;b++)if(0<=m.indexOf(a[b]))return!0}d=c*(void 0===d?.08:d)|0;c-=2*d;if(30>c)throw Error("Jdenticon cannot render identicons smaller than 30 pixels.");\\nif(!/^[0-9a-f]{11,}$/i.test(a))throw Error("Invalid hash passed to Jdenticon.");var k=new A(b),h=0|c/4,f=f+(0|d+c/2-2*h),u=u+(0|d+c/2-2*h),n=D(parseInt(a.substr(-7),16)/268435455,t),m=[],g;for(c=0;3>c;c++){g=parseInt(a.charAt(8+c),16)%n.length;if(e([0,4])||e([2,3]))g=1;m.push(g)}v(0,w.J,2,3,[[1,0],[2,0],[2,3],[1,3],[0,1],[3,1],[3,2],[0,2]]);v(1,w.J,4,5,[[0,0],[3,0],[3,3],[0,3]]);v(2,w.N,1,null,[[1,1],[2,1],[2,2],[1,2]])}function B(){this.i=""}function x(b,a){this.j={};this.f={M:b,I:a}}function y(b,\\na,c){this.h=b;b.clearRect(0,0,a,c)}function z(){function b(a,b,f){var e=c[a]instanceof Array?c[a]:[b,f];return function(a){a=e[0]+a*(e[1]-e[0]);return 0>a?0:1<a?1:a}}var a=e.config||k.jdenticon_config||{},c=a.lightness||{},a=a.saturation;return{A:"number"==typeof a?a:.5,u:b("color",.4,.8),H:b("grayscale",.3,.9)}}function p(b,a,c){if("string"===typeof b){if(C){b=document.querySelectorAll(b);for(var d=0;d<b.length;d++)p(b[d],a,c)}}else if(b&&b.tagName&&(a=a||b.getAttribute("data-jdenticon-hash"))){var e=\\n"svg"==b.tagName.toLowerCase(),d="canvas"==b.tagName.toLowerCase();if(e||d&&"getContext"in b){var d=Number(b.getAttribute("width"))||b.clientWidth||0,f=Number(b.getAttribute("height"))||b.clientHeight||0,g=e?new x(d,f):new y(b.getContext("2d"),d,f);r(g,a,Math.min(d,f),c,z());if(e){a=document.createElement("span");for(a.innerHTML=g.K(!1);b.firstChild;)b.removeChild(b.firstChild);for(a=a.firstChild.childNodes;a.length;)b.appendChild(a[0]);b.setAttribute("viewBox","0 0 "+d+" "+f)}}}}function e(){C&&\\np("svg[data-jdenticon-hash],canvas[data-jdenticon-hash]")}l.prototype={L:function(b,a,c,d){var e=this.o+this.f,f=this.s+this.f;return 1===this.l?new h(e-a-(d||0),this.s+b):2===this.l?new h(e-b-(c||0),f-a-(d||0)):3===this.l?new h(this.o+a,f-b-(c||0)):new h(this.o+b,this.s+a)}};l.O=new l(0,0,0,0);A.prototype={a:function(b,a){var c=a?-2:2,d=this.m,e=[],f;for(f=a?b.length-2:0;f<b.length&&0<=f;f+=c)e.push(d.L(b[f],b[f+1]));this.C.a(e)},b:function(b,a,c,d){this.C.b(this.m.L(b,a,c,c),c,d)},c:function(b,\\na,c,d,e){this.a([b,a,b+c,a,b+c,a+d,b,a+d],e)},g:function(b,a,c,d,e,f){b=[b+c,a,b+c,a+d,b,a+d,b,a];b.splice((e||0)%4*2,2);this.a(b,f)},D:function(b,a,c,d,e){this.a([b+c/2,a,b+c,a+d/2,b+c/2,a+d,b,a+d/2],e)}};var w={N:[function(b,a){var c=.42*a;b.a([0,0,a,0,a,a-2*c,a-c,a,0,a])},function(b,a){var c=0|.5*a;b.g(a-c,0,c,0|.8*a,2)},function(b,a){var c=0|a/3;b.c(c,c,a-c,a-c)},function(b,a){var c=0|.1*a,d=0|.25*a;b.c(d,d,a-c-d,a-c-d)},function(b,a){var c=0|.15*a,d=0|.5*a;b.b(a-d-c,a-d-c,d)},function(b,a){var c=\\n.1*a,d=4*c;b.c(0,0,a,a);b.a([d,d,a-c,d,d+(a-d-c)/2,a-c],!0)},function(b,a){b.a([0,0,a,0,a,.7*a,.4*a,.4*a,.7*a,a,0,a])},function(b,a){b.g(a/2,a/2,a/2,a/2,3)},function(b,a){b.c(0,0,a,a/2);b.c(0,a/2,a/2,a/2);b.g(a/2,a/2,a/2,a/2,1)},function(b,a){var c=0|.14*a,d=0|.35*a;b.c(0,0,a,a);b.c(d,d,a-d-c,a-d-c,!0)},function(b,a){var c=.12*a,d=3*c;b.c(0,0,a,a);b.b(d,d,a-c-d,!0)},function(b,a){b.g(a/2,a/2,a/2,a/2,3)},function(b,a){var c=.25*a;b.c(0,0,a,a);b.D(c,c,a-c,a-c,!0)},function(b,a,c){var d=.4*a;c||b.b(d,\\nd,1.2*a)}],J:[function(b,a){b.g(0,0,a,a,0)},function(b,a){b.g(0,a/2,a,a/2,0)},function(b,a){b.D(0,0,a,a)},function(b,a){var c=a/6;b.b(c,c,a-2*c)}]},n={P:function(b,a,c){return"#"+m(b)+m(a)+m(c)},w:function(b,a,c){if(0==a)return b=m(255*c),"#"+b+b+b;a=.5>=c?c*(a+1):c+a-c*a;c=2*c-a;return"#"+q(c,a,6*b+2)+q(c,a,6*b)+q(c,a,6*b-2)},v:function(b,a,c){var d=[.55,.5,.5,.46,.6,.55,.55][6*b+.5|0];return n.w(b,a,.5>c?c*d*2:d+(c-.5)*(1-d)*2)}};B.prototype={a:function(b){for(var a="M"+b[0].x+" "+b[0].y,c=1;c<\\nb.length;c++)a+="L"+b[c].x+" "+b[c].y;this.i+=a+"Z"},b:function(b,a,c){c=c?0:1;var d=a/2;this.i+="M"+b.x+" "+(b.y+d)+"a"+d+","+d+" 0 1,"+c+" "+a+",0a"+d+","+d+" 0 1,"+c+" "+-a+",0"}};x.prototype={F:function(b){this.B=this.j[b]||(this.j[b]=new B)},G:function(){},a:function(b){this.B.a(b)},b:function(b,a,c){this.B.b(b,a,c)},K:function(b){var a=b?"":\\\'<svg xmlns="http://www.w3.org/2000/svg" width="\\\'+this.f.M+\\\'" height="\\\'+this.f.I+\\\'" viewBox="0 0 \\\'+this.f.M+" "+this.f.I+\\\'" preserveAspectRatio="xMidYMid meet">\\\',\\nc;for(c in this.j)a+=\\\'<path fill="\\\'+c+\\\'" d="\\\'+this.j[c].i+\\\'"/>\\\';return b?a:a+"<\\/svg>"}};y.prototype={F:function(b){this.h.fillStyle=b;this.h.beginPath()},G:function(){this.h.fill()},a:function(b){var a=this.h,c;a.moveTo(b[0].x,b[0].y);for(c=1;c<b.length;c++)a.lineTo(b[c].x,b[c].y);a.closePath()},b:function(b,a,c){var d=this.h;a/=2;d.arc(b.x+a,b.y+a,a,0,2*Math.PI,c);d.closePath()}};var C="document"in k&&"querySelectorAll"in document;e.drawIcon=function(b,a,c){if(!b)throw Error("No canvas specified.");\\nb=new y(b,c,c);r(b,a,c,0,z())};e.toSvg=function(b,a,c){var d=new x(a,a);r(d,b,a,c,z());return d.K()};e.update=p;e.version="1.3.2";g&&(g.fn.jdenticon=function(b,a){this.each(function(c,d){p(d,b,a)});return this});"function"===typeof setTimeout&&setTimeout(e,0);return e});\';\n}\n;\nvar Lgwt_material_design_addins_client_avatar_MaterialAvatarClientBundle_1default_1InlineClientBundleGenerator$1_2_classLit = createForClass(\'gwt.material.design.addins.client.avatar\', \'MaterialAvatarClientBundle_default_InlineClientBundleGenerator/1\', 2149);\nfunction MaterialAvatarClientBundle_default_InlineClientBundleGenerator$2(){\n}\n\ndefineClass(2150, 1, {}, MaterialAvatarClientBundle_default_InlineClientBundleGenerator$2);\n_.getName = function getName_11(){\n  return \'md5Js\';\n}\n;\n_.getText = function getText_2(){\n  return \'!function(t){"use strict";function e(t){if(t)c[0]=c[16]=c[1]=c[2]=c[3]=c[4]=c[5]=c[6]=c[7]=c[8]=c[9]=c[10]=c[11]=c[12]=c[13]=c[14]=c[15]=0,this.blocks=c,this.buffer8=r;else if(n){var e=new ArrayBuffer(68);this.buffer8=new Uint8Array(e),this.blocks=new Uint32Array(e)}else this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];this.h0=this.h1=this.h2=this.h3=this.start=this.bytes=0,this.finalized=this.hashed=!1,this.first=!0}var h="object"==typeof process&&process.versions&&process.versions.node;h&&(t=global);var r,i=!t.JS_MD5_TEST&&"object"==typeof module&&module.exports,s="function"==typeof define&&define.amd,n=!t.JS_MD5_TEST&&"undefined"!=typeof ArrayBuffer,o="0123456789abcdef".split(""),f=[128,32768,8388608,-2147483648],a=[0,8,16,24],u=["hex","array","digest","buffer"],c=[];if(n){var d=new ArrayBuffer(68);r=new Uint8Array(d),c=new Uint32Array(d)}var l=function(t){return function(h){return new e(!0).update(h)[t]()}},y=function(){var t=l("hex");h&&(t=p(t)),t.create=function(){return new e},t.update=function(e){return t.create().update(e)};for(var r=0;r<u.length;++r){var i=u[r];t[i]=l(i)}return t},p=function(e){var h,r;try{if(t.JS_MD5_TEST)throw"JS_MD5_TEST";h=require("crypto"),r=require("buffer").Buffer}catch(i){return console.log(i),e}var s=function(t){if("string"==typeof t)return t.length<=s.utf8Threshold?e(t):t.length<=s.asciiThreshold&&!/[^\\\\x00-\\\\x7F]/.test(t)?e(t):h.createHash("md5").update(t,"utf8").digest("hex");if(t.constructor==ArrayBuffer)t=new Uint8Array(t);else if(void 0===t.length||t.length<=s.bytesThreshold)return e(t);return h.createHash("md5").update(new r(t)).digest("hex")};return s.utf8Threshold=18,s.asciiThreshold=60,s.bytesThreshold=245,s};e.prototype.update=function(e){if(!this.finalized){var h="string"!=typeof e;h&&e.constructor==t.ArrayBuffer&&(e=new Uint8Array(e));for(var r,i,s=0,o=e.length||0,f=this.blocks,u=this.buffer8;o>s;){if(this.hashed&&(this.hashed=!1,f[0]=f[16],f[16]=f[1]=f[2]=f[3]=f[4]=f[5]=f[6]=f[7]=f[8]=f[9]=f[10]=f[11]=f[12]=f[13]=f[14]=f[15]=0),h)if(n)for(i=this.start;o>s&&64>i;++s)u[i++]=e[s];else for(i=this.start;o>s&&64>i;++s)f[i>>2]|=e[s]<<a[3&i++];else if(n)for(i=this.start;o>s&&64>i;++s)r=e.charCodeAt(s),128>r?u[i++]=r:2048>r?(u[i++]=192|r>>6,u[i++]=128|63&r):55296>r||r>=57344?(u[i++]=224|r>>12,u[i++]=128|r>>6&63,u[i++]=128|63&r):(r=65536+((1023&r)<<10|1023&e.charCodeAt(++s)),u[i++]=240|r>>18,u[i++]=128|r>>12&63,u[i++]=128|r>>6&63,u[i++]=128|63&r);else for(i=this.start;o>s&&64>i;++s)r=e.charCodeAt(s),128>r?f[i>>2]|=r<<a[3&i++]:2048>r?(f[i>>2]|=(192|r>>6)<<a[3&i++],f[i>>2]|=(128|63&r)<<a[3&i++]):55296>r||r>=57344?(f[i>>2]|=(224|r>>12)<<a[3&i++],f[i>>2]|=(128|r>>6&63)<<a[3&i++],f[i>>2]|=(128|63&r)<<a[3&i++]):(r=65536+((1023&r)<<10|1023&e.charCodeAt(++s)),f[i>>2]|=(240|r>>18)<<a[3&i++],f[i>>2]|=(128|r>>12&63)<<a[3&i++],f[i>>2]|=(128|r>>6&63)<<a[3&i++],f[i>>2]|=(128|63&r)<<a[3&i++]);this.lastByteIndex=i,this.bytes+=i-this.start,i>=64?(this.start=i-64,this.hash(),this.hashed=!0):this.start=i}return this}},e.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var t=this.blocks,e=this.lastByteIndex;t[e>>2]|=f[3&e],e>=56&&(this.hashed||this.hash(),t[0]=t[16],t[16]=t[1]=t[2]=t[3]=t[4]=t[5]=t[6]=t[7]=t[8]=t[9]=t[10]=t[11]=t[12]=t[13]=t[14]=t[15]=0),t[14]=this.bytes<<3,this.hash()}},e.prototype.hash=function(){var t,e,h,r,i,s,n=this.blocks;this.first?(t=n[0]-680876937,t=(t<<7|t>>>25)-271733879<<0,r=(-1732584194^2004318071&t)+n[1]-117830708,r=(r<<12|r>>>20)+t<<0,h=(-271733879^r&(-271733879^t))+n[2]-1126478375,h=(h<<17|h>>>15)+r<<0,e=(t^h&(r^t))+n[3]-1316259209,e=(e<<22|e>>>10)+h<<0):(t=this.h0,e=this.h1,h=this.h2,r=this.h3,t+=(r^e&(h^r))+n[0]-680876936,t=(t<<7|t>>>25)+e<<0,r+=(h^t&(e^h))+n[1]-389564586,r=(r<<12|r>>>20)+t<<0,h+=(e^r&(t^e))+n[2]+606105819,h=(h<<17|h>>>15)+r<<0,e+=(t^h&(r^t))+n[3]-1044525330,e=(e<<22|e>>>10)+h<<0),t+=(r^e&(h^r))+n[4]-176418897,t=(t<<7|t>>>25)+e<<0,r+=(h^t&(e^h))+n[5]+1200080426,r=(r<<12|r>>>20)+t<<0,h+=(e^r&(t^e))+n[6]-1473231341,h=(h<<17|h>>>15)+r<<0,e+=(t^h&(r^t))+n[7]-45705983,e=(e<<22|e>>>10)+h<<0,t+=(r^e&(h^r))+n[8]+1770035416,t=(t<<7|t>>>25)+e<<0,r+=(h^t&(e^h))+n[9]-1958414417,r=(r<<12|r>>>20)+t<<0,h+=(e^r&(t^e))+n[10]-42063,h=(h<<17|h>>>15)+r<<0,e+=(t^h&(r^t))+n[11]-1990404162,e=(e<<22|e>>>10)+h<<0,t+=(r^e&(h^r))+n[12]+1804603682,t=(t<<7|t>>>25)+e<<0,r+=(h^t&(e^h))+n[13]-40341101,r=(r<<12|r>>>20)+t<<0,h+=(e^r&(t^e))+n[14]-1502002290,h=(h<<17|h>>>15)+r<<0,e+=(t^h&(r^t))+n[15]+1236535329,e=(e<<22|e>>>10)+h<<0,t+=(h^r&(e^h))+n[1]-165796510,t=(t<<5|t>>>27)+e<<0,r+=(e^h&(t^e))+n[6]-1069501632,r=(r<<9|r>>>23)+t<<0,h+=(t^e&(r^t))+n[11]+643717713,h=(h<<14|h>>>18)+r<<0,e+=(r^t&(h^r))+n[0]-373897302,e=(e<<20|e>>>12)+h<<0,t+=(h^r&(e^h))+n[5]-701558691,t=(t<<5|t>>>27)+e<<0,r+=(e^h&(t^e))+n[10]+38016083,r=(r<<9|r>>>23)+t<<0,h+=(t^e&(r^t))+n[15]-660478335,h=(h<<14|h>>>18)+r<<0,e+=(r^t&(h^r))+n[4]-405537848,e=(e<<20|e>>>12)+h<<0,t+=(h^r&(e^h))+n[9]+568446438,t=(t<<5|t>>>27)+e<<0,r+=(e^h&(t^e))+n[14]-1019803690,r=(r<<9|r>>>23)+t<<0,h+=(t^e&(r^t))+n[3]-187363961,h=(h<<14|h>>>18)+r<<0,e+=(r^t&(h^r))+n[8]+1163531501,e=(e<<20|e>>>12)+h<<0,t+=(h^r&(e^h))+n[13]-1444681467,t=(t<<5|t>>>27)+e<<0,r+=(e^h&(t^e))+n[2]-51403784,r=(r<<9|r>>>23)+t<<0,h+=(t^e&(r^t))+n[7]+1735328473,h=(h<<14|h>>>18)+r<<0,e+=(r^t&(h^r))+n[12]-1926607734,e=(e<<20|e>>>12)+h<<0,i=e^h,t+=(i^r)+n[5]-378558,t=(t<<4|t>>>28)+e<<0,r+=(i^t)+n[8]-2022574463,r=(r<<11|r>>>21)+t<<0,s=r^t,h+=(s^e)+n[11]+1839030562,h=(h<<16|h>>>16)+r<<0,e+=(s^h)+n[14]-35309556,e=(e<<23|e>>>9)+h<<0,i=e^h,t+=(i^r)+n[1]-1530992060,t=(t<<4|t>>>28)+e<<0,r+=(i^t)+n[4]+1272893353,r=(r<<11|r>>>21)+t<<0,s=r^t,h+=(s^e)+n[7]-155497632,h=(h<<16|h>>>16)+r<<0,e+=(s^h)+n[10]-1094730640,e=(e<<23|e>>>9)+h<<0,i=e^h,t+=(i^r)+n[13]+681279174,t=(t<<4|t>>>28)+e<<0,r+=(i^t)+n[0]-358537222,r=(r<<11|r>>>21)+t<<0,s=r^t,h+=(s^e)+n[3]-722521979,h=(h<<16|h>>>16)+r<<0,e+=(s^h)+n[6]+76029189,e=(e<<23|e>>>9)+h<<0,i=e^h,t+=(i^r)+n[9]-640364487,t=(t<<4|t>>>28)+e<<0,r+=(i^t)+n[12]-421815835,r=(r<<11|r>>>21)+t<<0,s=r^t,h+=(s^e)+n[15]+530742520,h=(h<<16|h>>>16)+r<<0,e+=(s^h)+n[2]-995338651,e=(e<<23|e>>>9)+h<<0,t+=(h^(e|~r))+n[0]-198630844,t=(t<<6|t>>>26)+e<<0,r+=(e^(t|~h))+n[7]+1126891415,r=(r<<10|r>>>22)+t<<0,h+=(t^(r|~e))+n[14]-1416354905,h=(h<<15|h>>>17)+r<<0,e+=(r^(h|~t))+n[5]-57434055,e=(e<<21|e>>>11)+h<<0,t+=(h^(e|~r))+n[12]+1700485571,t=(t<<6|t>>>26)+e<<0,r+=(e^(t|~h))+n[3]-1894986606,r=(r<<10|r>>>22)+t<<0,h+=(t^(r|~e))+n[10]-1051523,h=(h<<15|h>>>17)+r<<0,e+=(r^(h|~t))+n[1]-2054922799,e=(e<<21|e>>>11)+h<<0,t+=(h^(e|~r))+n[8]+1873313359,t=(t<<6|t>>>26)+e<<0,r+=(e^(t|~h))+n[15]-30611744,r=(r<<10|r>>>22)+t<<0,h+=(t^(r|~e))+n[6]-1560198380,h=(h<<15|h>>>17)+r<<0,e+=(r^(h|~t))+n[13]+1309151649,e=(e<<21|e>>>11)+h<<0,t+=(h^(e|~r))+n[4]-145523070,t=(t<<6|t>>>26)+e<<0,r+=(e^(t|~h))+n[11]-1120210379,r=(r<<10|r>>>22)+t<<0,h+=(t^(r|~e))+n[2]+718787259,h=(h<<15|h>>>17)+r<<0,e+=(r^(h|~t))+n[9]-343485551,e=(e<<21|e>>>11)+h<<0,this.first?(this.h0=t+1732584193<<0,this.h1=e-271733879<<0,this.h2=h-1732584194<<0,this.h3=r+271733878<<0,this.first=!1):(this.h0=this.h0+t<<0,this.h1=this.h1+e<<0,this.h2=this.h2+h<<0,this.h3=this.h3+r<<0)},e.prototype.hex=function(){this.finalize();var t=this.h0,e=this.h1,h=this.h2,r=this.h3;return o[t>>4&15]+o[15&t]+o[t>>12&15]+o[t>>8&15]+o[t>>20&15]+o[t>>16&15]+o[t>>28&15]+o[t>>24&15]+o[e>>4&15]+o[15&e]+o[e>>12&15]+o[e>>8&15]+o[e>>20&15]+o[e>>16&15]+o[e>>28&15]+o[e>>24&15]+o[h>>4&15]+o[15&h]+o[h>>12&15]+o[h>>8&15]+o[h>>20&15]+o[h>>16&15]+o[h>>28&15]+o[h>>24&15]+o[r>>4&15]+o[15&r]+o[r>>12&15]+o[r>>8&15]+o[r>>20&15]+o[r>>16&15]+o[r>>28&15]+o[r>>24&15]},e.prototype.toString=e.prototype.hex,e.prototype.digest=function(){this.finalize();var t=this.h0,e=this.h1,h=this.h2,r=this.h3;return[255&t,t>>8&255,t>>16&255,t>>24&255,255&e,e>>8&255,e>>16&255,e>>24&255,255&h,h>>8&255,h>>16&255,h>>24&255,255&r,r>>8&255,r>>16&255,r>>24&255]},e.prototype.array=e.prototype.digest,e.prototype.buffer=function(){this.finalize();var t=new ArrayBuffer(16),e=new Uint32Array(t);return e[0]=this.h0,e[1]=this.h1,e[2]=this.h2,e[3]=this.h3,t};var b=y();i?module.exports=b:(t.md5=b,s&&define(function(){return b}))}(this);\';\n}\n;\nvar Lgwt_material_design_addins_client_avatar_MaterialAvatarClientBundle_1default_1InlineClientBundleGenerator$2_2_classLit = createForClass(\'gwt.material.design.addins.client.avatar\', \'MaterialAvatarClientBundle_default_InlineClientBundleGenerator/2\', 2150);\nfunction $clinit_MaterialAvatarClientBundle_default_InlineClientBundleGenerator$jdenticonJsInitializer(){\n  $clinit_MaterialAvatarClientBundle_default_InlineClientBundleGenerator$jdenticonJsInitializer = emptyMethod;\n  jdenticonJs = new MaterialAvatarClientBundle_default_InlineClientBundleGenerator$1;\n}\n\nfunction $clinit_MaterialAvatarClientBundle_default_InlineClientBundleGenerator$md5JsInitializer(){\n  $clinit_MaterialAvatarClientBundle_default_InlineClientBundleGenerator$md5JsInitializer = emptyMethod;\n  md5Js = new MaterialAvatarClientBundle_default_InlineClientBundleGenerator$2;\n}\n\nvar jdenticonDebugJs;\nfunction MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$1(){\n}\n\ndefineClass(2148, 1, {}, MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$1);\n_.getName = function getName_12(){\n  return \'jdenticonDebugJs\';\n}\n;\n_.getText = function getText_3(){\n  var builder;\n  builder = new StringBuilder;\n  builder.string += \'/**\\n * Jdenticon 1.3.2\\n * http://jdenticon.com\\n *  \\n * Built: 2015-10-10T11:55:57.451Z\\n *\\n * Copyright (c) 2014-2015 Daniel Mester Pirttij\\xE4rvi\\n *\\n * This software is provided \\\'as-is\\\', without any express or implied\\n * warranty.  In no event will the authors be held liable for any damages\\n * arising from the use of this software.\\n * \\n * Permission is granted to anyone to use this software for any purpose,\\n * including commercial applications, and to alter it and redistribute it\\n * freely, subject to the following restrictions:\\n * \\n * 1. The origin of this software must not be misrepresented; you must not\\n *    claim that you wrote the original software. If you use this software\\n *    in a product, an acknowledgment in the product documentation would be\\n *    appreciated but is not required.\\n * \\n * 2. Altered source versions must be plainly marked as such, and must not be\\n *    misrepresented as being the original software.\\n * \\n * 3. This notice may not be removed or altered from any source distribution.\\n * \\n */\\n\\n/*jslint bitwise: true */\\n\\n(function (global, name, factory) {\\n    var jQuery = global["jQuery"],\\n        jdenticon = factory(global, jQuery);\\n\\n    // Node.js\\n    if (typeof module !== "undefined" && "exports" in module) {\\n        module["exports"] = jdenticon;\\n    }\\n    // RequireJS\\n    else if (typeof define === "function" && define["amd"]) {\\n        define([], function () { return jdenticon; });\\n    }\\n    // No module loader\\n    else {\\n        global[name] = jdenticon;\\n    }\\n})(this, "jdenticon", function (global, jQuery) {\\n    "use strict";\\n\\n\\n\\n    \\n    /**\\n     * Represents a point.\\n     * @private\\n     * @constructor\\n     */\\n    function Point(x, y) {\\n        this.x = x;\\n        this.y = y;\\n    };\\n    \\n    \\n    /**\\n     * Translates and rotates a point before being passed on to the canvas context. This was previously done by the canvas context itself, \\n     * but this caused a rendering issue in Chrome on sizes > 256 where the rotation transformation of inverted paths was not done properly.\\n     * @param {number} x The x-coordinate of the upper left corner of the transformed rectangle.\\n     * @param {number} y The y-coordinate of the upper left corner of the transformed rectangle.\\n     * @param {number} size The size of the transformed rectangle.\\n     * @param {number} rotation Rotation specified as 0 = 0 rad, 1 = 0.5\\u03C0 rad, 2 = \\u03C0 rad, 3 = 1.5\\u03C0 rad\\n     * @private\\n     * @constructor\\n     */\\n    function Transform(x, y, size, rotation) {\\n        this._x = x;\\n        this._y = y;\\n        this._size = size;\\n        this._rotation = rotation;\\n    }\\n    Transform.prototype = {\\n        /**\\n         * Transforms the specified point based on the translation and rotation specification for this Transform.\\n         * @param {number} x x-coordinate\\n         * @param {number} y y-coordinate\\n         * @param {number=} w The width of the transformed rectangle. If greater than 0, this will ensure the returned point is of the upper left corner of the transformed rectangle.\\n         * @param {number=} h The height of the transformed rectangle. If greater than 0, this will ensure the returned point is of the upper left corner of the transformed rectangle.\\n         */\\n        transformPoint: function (x, y, w, h) {\\n            var right = this._x + this._size,\\n                bottom = this._y + this._size;\\n            return this._rotation === 1 ? new Point(right - y - (h || 0), this._y + x) :\\n                   this._rotation === 2 ? new Point(right - x - (w || 0), bottom - y - (h || 0)) :\\n                   this._rotation === 3 ? new Point(this._x + y, bottom - x - (w || 0)) :\\n                   new Point(this._x + x, this._y + y);\\n        }\\n    };\\n    Transform.noTransform = new Transform(0, 0, 0, 0);\\n    \\n    \\n    \\n    /**\\n     * Provides helper functions for rendering common basic shapes.\\n     * @private\\n     * @constructor\\n     */\\n    function Graphics(renderer) {\\n        this._renderer = renderer;\\n        this._transform = Transform.noTransform;\\n    }\\n    Graphics.prototype = {\\n        /**\\n         * Adds a polygon to the underlying renderer.\\n         * @param {Array} points The points of the polygon clockwise on the format [ x0, y0, x1, y1, ..., xn, yn ]\\n         * @param {boolean=} invert Specifies if the polygon will be inverted.\\n         */\\n        addPolygon: function (points, invert) {\\n            var di = invert ? -2 : 2, \\n                transform = this._transform,\\n                transformedPoints = [],\\n                i;\\n            \\n            for (i = invert ? points.length - 2 : 0; i < points.length && i >= 0; i += di) {\\n                transformedPoints.push(transform.transformPoint(points[i], points[i + 1]));\\n            }\\n            \\n            this._renderer.addPolygon(transformedPoints);\\n        },\\n        \\n        /**\\n         * Adds a polygon to the underlying renderer.\\n         * Source: http://stackoverflow.com/a/2173084\\n         * @param {number} x The x-coordinate of the upper left corner of the rectangle holding the entire ellipse.\\n         * @param {number} y The y-coordinate of the upper left corner of the rectangle holding the entire ellipse.\\n         * @param {number} size The size of the ellipse.\\n         * @param {boolean=} invert Specifies if the ellipse will be inverted.\\n         */\\n        addCircle: function (x, y, size, invert) {\\n            var p = this._transform.transformPoint(x, y, size, size);\\n            this._renderer.addCircle(p, size, invert);\\n        },\\n\\n        /**\\n         * Adds a rectangle to the underlying renderer.\\n         * @param {number} x The x-coordinate of the upper left corner of the rectangle.\\n         * @param {number} y The y-coordinate of the upper left corner of the rectangle.\\n         * @param {number} w The width of the rectangle.\\n         * @param {number} h The height of the rectangle.\\n         * @param {boolean=} invert Specifies if the rectangle will be inverted.\\n         */\\n        addRectangle: function (x, y, w, h, invert) {\\n            this.addPolygon([\\n                x, y, \\n                x + w, y,\\n                x + w, y + h,\\n                x, y + h\\n            ], invert);\\n        },\\n\\n        /**\\n         * Adds a right triangle to the underlying renderer.\\n         * @param {number} x The x-coordinate of the upper left corner of the rectangle holding the triangle.\\n         * @param {number} y The y-coordinate of the upper left corner of the rectangle holding the triangle.\\n         * @param {number} w The width of the triangle.\\n         * @param {number} h The height of the triangle.\\n         * @param {number} r The rotation of the triangle (clockwise). 0 = right corner of the triangle in the lower left corner of the bounding rectangle.\\n         * @param {boolean=} invert Specifies if the triangle will be inverted.\\n         */\\n        addTriangle: function (x, y, w, h, r, invert) {\\n            var points = [\\n                x + w, y, \\n                x + w, y + h, \\n                x, y + h,\\n                x, y\\n            ];\\n            points.splice(((r || 0) % 4) * 2, 2);\\n            this.addPolygon(points, invert);\\n        },\\n\\n        /**\\n         * Adds a rhombus to the underlying renderer.\\n         * @param {number} x The x-coordinate of the upper left corner of the rectangle holding the rhombus.\\n         * @param {number} y The y-coordinate of the upper left corner of the rectangle holding the rhombus.\\n         * @param {number} w The width of the rhombus.\\n         * @param {number} h The height of the rhombus.\\n         * @param {boolean=} invert Specifies if the rhombus will be inverted.\\n         */\\n        addRhombus: function (x, y, w, h, invert) {\\n            this.addPolygon([\\n                x + w / 2, y,\\n                x + w, y + h / 2,\\n                x + w / 2, y + h,\\n                x, y + h / 2\\n            ], invert);\\n        }\\n    };\\n    \\n    \\n    \\n    \\n    var shapes = {\\n        center: [\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                var k = cell * 0.42;\\n                g.addPolygon([\\n                    0, 0,\\n                    cell, 0,\\n                    cell, cell - k * 2,\\n                    cell - k, cell,\\n                    0, cell\\n                ]);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                var w = 0 | (cell * 0.5), \\n                    h = 0 | (cell * 0.8);\\n                g.addTriangle(cell - w, 0, w, h, 2);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) { \\n                var s = 0 | (cell / 3);\\n                g.addRectangle(s, s, cell - s, cell - s);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) { \\n                var inner = 0 | (cell * 0.1),\\n                    outer = 0 | (cell * 0.25);\\n                g.addRectangle(outer, outer, cell - inner - outer, cell - inner - outer);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) { \\n                var m = 0 | (cell * 0.15),\\n                    s = 0 | (cell * 0.5);\\n                g.addCircle(cell - s - m, cell - s - m, s);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                var inner = cell * 0.1,\\n                    outer = inner * 4;\\n\\n                g.addRectangle(0, 0, cell, cell);\\n                g.addPolygon([\\n                    outer, outer,\\n                    cell - inner, outer,\\n                    outer + (cell - outer - inner) / 2, cell - inner\\n                ], true);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                g.addPolygon([\\n                    0, 0,\\n                    cell, 0,\\n                    cell, cell * 0.7,\\n                    cell * 0.4, cell * 0.4,\\n                    cell * 0.7, cell,\\n                    0, cell\\n                ]);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                g.addTriangle(cell / 2, cell / 2, cell / 2, cell / 2, 3);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                g.addRectangle(0, 0, cell, cell / 2);\\n                g.addRectangle(0, cell / 2, cell / 2, cell / 2);\\n                g.addTriangle(cell / 2, cell / 2, cell / 2, cell / 2, 1);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                var inner = 0 | (cell * 0.14),\\n                    outer = 0 | (cell * 0.35);\\n                g.addRectangle(0, 0, cell, cell);\\n                g.addRectangle(outer, outer, cell - outer - inner, cell - outer - inner, true);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                var inner = cell * 0.12,\\n                    outer = inner * 3;\\n\\n                g.addRectangle(0, 0, cell, cell);\\n                g.addCircle(outer, outer, cell - inner - outer, true);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                g.addTriangle(cell / 2, cell / 2, cell / 2, cell / 2, 3);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                var m = cell * 0.25;\\n                g.addRectangle(0, 0, cell, cell);\\n                g.addRhombus(m, m, cell - m, cell - m, true);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                var m = cell * 0.4, s = cell * 1.2;\\n                if (!index) {\\n                    g.addCircle(m, m, s);\\n                }\\n            }\\n        ],\\n        \\n        outer: [\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                g.addTriangle(0, 0, cell, cell, 0);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                g.addTriangle(0, cell / 2, cell, cell / 2, 0);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                g.addRhombus(0, 0, cell, cell);\\n            },\\n            /** @param {Graphics} g */\\n            function (g, cell, index) {\\n                var m = cell / 6;\\n                g.addCircle(m, m, cell - 2 * m);\\n            }\\n        ]\\n    };\\n\\n    \\n    \\n    \\n    function decToHex(v) {\\n        v |= 0; // Ensure integer value\\n        return v < 0 ? "00" :\\n            v < 16 ? "0" + v.toString(16) :\\n            v < 256 ? v.toString(16) :\\n            "ff";\\n    }\\n    \\n    function hueToRgb(m1, m2, h) {\\n        h = h < 0 ? h + 6 : h > 6 ? h - 6 : h;\\n        return decToHex(255 * (\\n            h < 1 ? m1 + (m2 - m1) * h :\\n            h < 3 ? m2 :\\n            h < 4 ? m1 + (m2 - m1) * (4 - h) :\\n            m1));\\n    }\\n        \\n    /**\\n     * Functions for converting colors to hex-rgb representations.\\n     * @private\\n     */\\n    var color = {\\n        /**\\n         * @param {number} r Red channel [0, 255]\\n         * @param {number} g Green channel [0, 255]\\n         * @param {number} b Blue channel [0, 255]\\n         */\\n        rgb: function (r, g, b) {\\n            return "#" + decToHex(r) + decToHex(g) + decToHex(b);\\n        },\\n        /**\\n         * @param h Hue [0, 1]\\n         * @param s Saturation [0, 1]\\n         * @param l Lightness [0, 1]\\n         */\\n        hsl: function (h, s, l) {\\n            // Based on http://www.w3.org/TR/2011/REC-css3-color-20110607/#hsl-color\\n            if (s == 0) {\\n                var partialHex = decToHex(l * 255);\\n                return "#" + partialHex + partialHex + partialHex;\\n            }\\n            else {\\n                var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s,\\n                    m1 = l * 2 - m2;\\n                return "#" +\\n                    hueToRgb(m1, m2, h * 6 + 2) +\\n                    hueToRgb(m1, m2, h * 6) +\\n                    hueToRgb(m1, m2, h * 6 - 2);\\n            }\\n        },\\n        // This function will correct the lightness for the "dark" hues\\n        correctedHsl: function (h, s, l) {\\n            // The corrector specifies the perceived middle lightnesses for each hue\\n            var correctors = [ 0.55, 0.5, 0.5, 0.46, 0.6, 0.55, 0.55 ],\\n                corrector = correctors[(h * 6 + 0.5) | 0];\\n            \\n            // Adjust the input lightness relative to the corrector\\n            l = l < 0.5 ? l * corrector * 2 : corrector + (l - 0.5) * (1 - corrector) * 2;\\n            \\n            return color.hsl(h, s, l);\\n        }\\n    };\\n\\n    \\n    \\n    \\n    /**\\n     * Gets a set of identicon color candidates for a specified hue and config.\\n     */\\n    function colorTheme(hue, config) {\\n        return [\\n            // Dark gray\\n            color.hsl(0, 0, config.grayscaleLightness(0)),\\n            // Mid color\\n            color.correctedHsl(hue, config.saturation, config.colorLightness(0.5)),\\n            // Light gray\\n            color.hsl(0, 0, config.grayscaleLightness(1)),\\n            // Light color\\n            color.correctedHsl(hue, config.saturation, config.colorLightness(1)),\\n            // Dark color\\n            color.correctedHsl(hue, config.saturation, config.colorLightness(0))\\n        ];\\n    }\\n\\n    \\n    \\n         \\n    /**\\n     * Draws an identicon to a specified renderer.\\n     */\\n    function iconGenerator(renderer, hash, x, y, size, padding, config) {\\n        var undefined;\\n        \\n        // Calculate padding\\n        padding = (size * (padding === undefined ? 0.08 : padding)) | 0;\\n        size -= padding * 2;\\n        \\n        // Sizes smaller than 30 px are not supported. If really needed, apply a scaling transformation \\n        // to the context before passing it to this function.\\n        if (size < 30) {\\n            throw new Error("Jdenticon cannot render identicons smaller than 30 pixels.");\\n        }\\n        if (!/^[0-9a-f]{11,}$/i.test(hash)) {\\n            throw new Error("Invalid hash passed to Jdenticon.");\\n        }\\n        \\n        var graphics = new Graphics(renderer);\\n        \\n        // Calculate cell size and ensure it is an integer\\n        var cell = 0 | (size / 4);\\n        \\n        // Since the cell size is integer based, the actual icon will be slightly smaller than specified => center icon\\n        x += 0 | (padding + size / 2 - cell * 2);\\n        y += 0 | (padd\';\n  builder.string += \'ing + size / 2 - cell * 2);\\n\\n        function renderShape(colorIndex, shapes, index, rotationIndex, positions) {\\n            var r = rotationIndex ? parseInt(hash.charAt(rotationIndex), 16) : 0,\\n                shape = shapes[parseInt(hash.charAt(index), 16) % shapes.length],\\n                i;\\n            \\n            renderer.beginShape(availableColors[selectedColorIndexes[colorIndex]]);\\n            \\n            for (i = 0; i < positions.length; i++) {\\n                graphics._transform = new Transform(x + positions[i][0] * cell, y + positions[i][1] * cell, cell, r++ % 4);\\n                shape(graphics, cell, i);\\n            }\\n            \\n            renderer.endShape();\\n        }\\n\\n        // AVAILABLE COLORS\\n        var hue = parseInt(hash.substr(-7), 16) / 0xfffffff,\\n        \\n            // Available colors for this icon\\n            availableColors = colorTheme(hue, config),\\n\\n            // The index of the selected colors\\n            selectedColorIndexes = [],\\n            index;\\n\\n        function isDuplicate(values) {\\n            if (values.indexOf(index) >= 0) {\\n                for (var i = 0; i < values.length; i++) {\\n                    if (selectedColorIndexes.indexOf(values[i]) >= 0) {\\n                        return true;\\n                    }\\n                }\\n            }\\n        }\\n\\n        for (var i = 0; i < 3; i++) {\\n            index = parseInt(hash.charAt(8 + i), 16) % availableColors.length;\\n            if (isDuplicate([0, 4]) || // Disallow dark gray and dark color combo\\n                isDuplicate([2, 3])) { // Disallow light gray and light color combo\\n                index = 1;\\n            }\\n            selectedColorIndexes.push(index);\\n        }\\n\\n        // ACTUAL RENDERING\\n        // Sides\\n        renderShape(0, shapes.outer, 2, 3, [[1, 0], [2, 0], [2, 3], [1, 3], [0, 1], [3, 1], [3, 2], [0, 2]]);\\n        // Corners\\n        renderShape(1, shapes.outer, 4, 5, [[0, 0], [3, 0], [3, 3], [0, 3]]);\\n        // Center\\n        renderShape(2, shapes.center, 1, null, [[1, 1], [2, 1], [2, 2], [1, 2]]);\\n    };\\n\\n    \\n    \\n    /**\\n     * Represents an SVG path element.\\n     * @private\\n     * @constructor\\n     */\\n    function SvgPath() {\\n        /**\\n         * This property holds the data string (path.d) of the SVG path.\\n         */\\n        this.dataString = "";\\n    }\\n    SvgPath.prototype = {\\n        /**\\n         * Adds a polygon with the current fill color to the SVG path.\\n         * @param points An array of Point objects.\\n         */\\n        addPolygon: function (points) {\\n            var dataString = "M" + points[0].x + " " + points[0].y;\\n            for (var i = 1; i < points.length; i++) {\\n                dataString += "L" + points[i].x + " " + points[i].y;\\n            }\\n            this.dataString += dataString + "Z";\\n        },\\n        /**\\n         * Adds a circle with the current fill color to the SVG path.\\n         * @param {Point} point The upper left corner of the circle bounding box.\\n         * @param {number} diameter The diameter of the circle.\\n         * @param {boolean} counterClockwise True if the circle is drawn counter-clockwise (will result in a hole if rendered on a clockwise path).\\n         */\\n        addCircle: function (point, diameter, counterClockwise) {\\n            var sweepFlag = counterClockwise ? 0 : 1,\\n                radius = diameter / 2;\\n            this.dataString += \\n                "M" + (point.x) + " " + (point.y + radius) +\\n                "a" + radius + "," + radius + " 0 1," + sweepFlag + " " + diameter + ",0" + \\n                "a" + radius + "," + radius + " 0 1," + sweepFlag + " " + (-diameter) + ",0";\\n        }\\n    };\\n    \\n    \\n    \\n    /**\\n     * Renderer producing SVG output.\\n     * @private\\n     * @constructor\\n     */\\n    function SvgRenderer(width, height) {\\n        this._pathsByColor = { };\\n        this._size = { w: width, h: height };\\n    }\\n    SvgRenderer.prototype = {\\n        /**\\n         * Marks the beginning of a new shape of the specified color. Should be ended with a call to endShape.\\n         * @param {string} color Fill color on format #xxxxxx.\\n         */\\n        beginShape: function (color) {\\n            this._path = this._pathsByColor[color] || (this._pathsByColor[color] = new SvgPath());\\n        },\\n        /**\\n         * Marks the end of the currently drawn shape.\\n         */\\n        endShape: function () { },\\n        /**\\n         * Adds a polygon with the current fill color to the SVG.\\n         * @param points An array of Point objects.\\n         */\\n        addPolygon: function (points) {\\n            this._path.addPolygon(points);\\n        },\\n        /**\\n         * Adds a circle with the current fill color to the SVG.\\n         * @param {Point} point The upper left corner of the circle bounding box.\\n         * @param {number} diameter The diameter of the circle.\\n         * @param {boolean} counterClockwise True if the circle is drawn counter-clockwise (will result in a hole if rendered on a clockwise path).\\n         */\\n        addCircle: function (point, diameter, counterClockwise) {\\n            this._path.addCircle(point, diameter, counterClockwise);\\n        },\\n        /**\\n         * Gets the rendered image as an SVG string.\\n         * @param {boolean=} fragment If true, the container svg element is not included in the result.\\n         */\\n        toSvg: function (fragment) {\\n            var svg = fragment ? \\\'\\\' : \\n                \\\'<svg xmlns="http://www.w3.org/2000/svg" width="\\\' + \\n                this._size.w + \\\'" height="\\\' + this._size.h + \\\'" viewBox="0 0 \\\' + \\n                this._size.w + \\\' \\\' + this._size.h + \\\'" preserveAspectRatio="xMidYMid meet">\\\';\\n            \\n            for (var color in this._pathsByColor) {\\n                svg += \\\'<path fill="\\\' + color + \\\'" d="\\\' + this._pathsByColor[color].dataString + \\\'"/>\\\';\\n            }\\n\\n            return fragment ? svg : \\n                svg + \\\'<\\/svg>\\\';\\n        }\\n    };\\n    \\n    \\n    \\n    /**\\n     * Renderer redirecting drawing commands to a canvas context.\\n     * @private\\n     * @constructor\\n     */\\n    function CanvasRenderer(ctx, width, height) {\\n        this._ctx = ctx;\\n        ctx.clearRect(0, 0, width, height);\\n    }\\n    CanvasRenderer.prototype = {\\n        /**\\n         * Marks the beginning of a new shape of the specified color. Should be ended with a call to endShape.\\n         * @param {string} color Fill color on format #xxxxxx.\\n         */\\n        beginShape: function (color) {\\n            this._ctx.fillStyle = color;\\n            this._ctx.beginPath();\\n        },\\n        /**\\n         * Marks the end of the currently drawn shape. This causes the queued paths to be rendered on the canvas.\\n         */\\n        endShape: function () {\\n            this._ctx.fill();\\n        },\\n        /**\\n         * Adds a polygon to the rendering queue.\\n         * @param points An array of Point objects.\\n         */\\n        addPolygon: function (points) {\\n            var ctx = this._ctx, i;\\n            ctx.moveTo(points[0].x, points[0].y);\\n            for (i = 1; i < points.length; i++) {\\n                ctx.lineTo(points[i].x, points[i].y);\\n            }\\n            ctx.closePath();\\n        },\\n        /**\\n         * Adds a circle to the rendering queue.\\n         * @param {Point} point The upper left corner of the circle bounding box.\\n         * @param {number} diameter The diameter of the circle.\\n         * @param {boolean} counterClockwise True if the circle is drawn counter-clockwise (will result in a hole if rendered on a clockwise path).\\n         */\\n        addCircle: function (point, diameter, counterClockwise) {\\n            var ctx = this._ctx,\\n                radius = diameter / 2;\\n            ctx.arc(point.x + radius, point.y + radius, radius, 0, Math.PI * 2, counterClockwise);\\n            ctx.closePath();\\n        }\\n    };\\n    \\n    \\n    \\n         \\n    \\n    \\n    var /** @const */\\n        HASH_ATTRIBUTE = "data-jdenticon-hash",\\n        supportsQuerySelectorAll = "document" in global && "querySelectorAll" in document;\\n    \\n    /**\\n     * Gets the normalized current Jdenticon color configuration. Missing fields have default values.\\n     */\\n    function getCurrentConfig() {\\n        var configObject = jdenticon["config"] || global["jdenticon_config"] || { },\\n            lightnessConfig = configObject["lightness"] || { },\\n            saturation = configObject["saturation"];\\n        \\n        /**\\n         * Creates a lightness range.\\n         */\\n        function lightness(configName, defaultMin, defaultMax) {\\n            var range = lightnessConfig[configName] instanceof Array ? lightnessConfig[configName] : [defaultMin, defaultMax];\\n            \\n            /**\\n             * Gets a lightness relative the specified value in the specified lightness range.\\n             */\\n            return function (value) {\\n                value = range[0] + value * (range[1] - range[0]);\\n                return value < 0 ? 0 : value > 1 ? 1 : value;\\n            };\\n        }\\n            \\n        return {\\n            saturation: typeof saturation == "number" ? saturation : 0.5,\\n            colorLightness: lightness("color", 0.4, 0.8),\\n            grayscaleLightness: lightness("grayscale", 0.3, 0.9)\\n        }\\n    }\\n    \\n    /**\\n     * Updates the identicon in the specified canvas or svg elements.\\n     * @param {string=} hash Optional hash to be rendered. If not specified, the hash specified by the data-jdenticon-hash is used.\\n     * @param {number=} padding Optional padding in percents. Extra padding might be added to center the rendered identicon.\\n     */\\n    function update(el, hash, padding) {\\n        if (typeof(el) === "string") {\\n            if (supportsQuerySelectorAll) {\\n                var elements = document.querySelectorAll(el);\\n                for (var i = 0; i < elements.length; i++) {\\n                    update(elements[i], hash, padding);\\n                }\\n            }\\n            return;\\n        }\\n        if (!el || !el["tagName"]) {\\n            // No element found\\n            return;\\n        }\\n        hash = hash || el.getAttribute(HASH_ATTRIBUTE);\\n        if (!hash) {\\n            // No hash specified\\n            return;\\n        }\\n        \\n        var isSvg = el["tagName"].toLowerCase() == "svg",\\n            isCanvas = el["tagName"].toLowerCase() == "canvas";\\n        \\n        // Ensure we have a supported element\\n        if (!isSvg && !(isCanvas && "getContext" in el)) {\\n            return;\\n        }\\n        \\n        var width = Number(el.getAttribute("width")) || el.clientWidth || 0,\\n            height = Number(el.getAttribute("height")) || el.clientHeight || 0,\\n            renderer = isSvg ? new SvgRenderer(width, height) : new CanvasRenderer(el.getContext("2d"), width, height),\\n            size = Math.min(width, height);\\n        \\n        // Draw icon\\n        iconGenerator(renderer, hash, 0, 0, size, padding, getCurrentConfig());\\n        \\n        // SVG needs postprocessing\\n        if (isSvg) {\\n            // Parse svg to a temporary span element.\\n            // Simply using innerHTML does unfortunately not work on IE.\\n            var wrapper = document.createElement("span");\\n            wrapper.innerHTML = renderer.toSvg(false);\\n            \\n            // Then replace the content of the target element with the parsed svg.\\n            while (el.firstChild) {\\n                el.removeChild(el.firstChild);\\n            }\\n            var newNodes = wrapper.firstChild.childNodes;\\n            while (newNodes.length) {\\n                el.appendChild(newNodes[0]);\\n            }\\n            \\n            // Set viewBox attribute to ensure the svg scales nicely.\\n            el.setAttribute("viewBox", "0 0 " + width + " " + height);\\n        }\\n    }\\n    \\n    /**\\n     * Draws an identicon to a context.\\n     */\\n    function drawIcon(ctx, hash, size) {\\n        if (!ctx) {\\n            throw new Error("No canvas specified.");\\n        }\\n        \\n        var renderer = new CanvasRenderer(ctx, size, size);\\n        iconGenerator(renderer, hash, 0, 0, size, 0, getCurrentConfig());\\n    }\\n    \\n    /**\\n     * Draws an identicon to a context.\\n     * @param {number=} padding Optional padding in percents. Extra padding might be added to center the rendered identicon.\\n     */\\n    function toSvg(hash, size, padding) {\\n        var renderer = new SvgRenderer(size, size);\\n        iconGenerator(renderer, hash, 0, 0, size, padding, getCurrentConfig());\\n        return renderer.toSvg();\\n    }\\n\\n    /**\\n     * Updates all canvas elements with the data-jdenticon-hash attribute.\\n     */\\n    function jdenticon() {\\n        if (supportsQuerySelectorAll) {\\n            update("svg[" + HASH_ATTRIBUTE + "],canvas[" + HASH_ATTRIBUTE + "]");\\n        }\\n    }\\n    \\n    // Public API\\n    jdenticon["drawIcon"] = drawIcon;\\n    jdenticon["toSvg"] = toSvg;\\n    jdenticon["update"] = update;\\n    jdenticon["version"] = "1.3.2";\\n    \\n    // Basic jQuery plugin\\n    if (jQuery) {\\n        jQuery["fn"]["jdenticon"] = function (hash, padding) {\\n            this["each"](function (index, el) {\\n                update(el, hash, padding);\\n            });\\n            return this;\\n        };\\n    }\\n    \\n    // Schedule to render all identicons on the page once it has been loaded.\\n    if (typeof setTimeout === "function") {\\n        setTimeout(jdenticon, 0);\\n    }\\n    \\n    return jdenticon;\\n\\n});\';\n  return builder.string;\n}\n;\nvar Lgwt_material_design_addins_client_avatar_MaterialAvatarDebugClientBundle_1default_1InlineClientBundleGenerator$1_2_classLit = createForClass(\'gwt.material.design.addins.client.avatar\', \'MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator/1\', 2148);\nfunction $clinit_MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$jdenticonDebugJsInitializer(){\n  $clinit_MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$jdenticonDebugJsInitializer = emptyMethod;\n  jdenticonDebugJs = new MaterialAvatarDebugClientBundle_default_InlineClientBundleGenerator$1;\n}\n\nfunction AvatarPresenter(eventBus, view, proxy){\n  $clinit_PresenterWidget();\n  Presenter.call(this, eventBus, view, proxy, ($clinit_ApplicationPresenter() , SLOT_MAIN));\n}\n\ndefineClass(791, 58, $intern_57, AvatarPresenter);\n_.onReveal = function onReveal_3(){\n  $clinit_SetPageTitleEvent();\n  $fireEvent_1(this, new SetPageTitleEvent(\'Avatar\', \'Generated avatar based on JDenticon that provides a unique avatar based on unique name.\', \'addins/avatar/AvatarView\'));\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_avatar_AvatarPresenter_2_classLit = createForClass(\'gwt.material.design.demo.client.application.addins.avatar\', \'AvatarPresenter\', 791);\nfunction $onUpdateAvatar(this$static){\n  $setName(this$static.avatar, $getText(this$static.txtAvatarName.valueBoxBase));\n  $initialize(this$static.avatar);\n}\n\nfunction AvatarView(){\n  ViewImpl.call(this);\n  $initWidget_0(this, $build_f_HTMLPanel1_2(new AvatarView_BinderImpl$Widgets(this)));\n}\n\ndefineClass(1004, 62, $intern_58, AvatarView);\nvar Lgwt_material_design_demo_client_application_addins_avatar_AvatarView_2_classLit = createForClass(\'gwt.material.design.demo.client.application.addins.avatar\', \'AvatarView\', 1004);\nfunction $build_f_HTMLPanel1_2(this$static){\n  var __attachRecord__, f_HTMLPanel1, f_MaterialRow2, f_MaterialRow6, f_MaterialTitle3, f_PrettyPre4, sb, f_avatar$MaterialAvatar5, f_MaterialTitle7, f_MaterialRow8, f_MaterialColumn9, f_MaterialCard10, avatar, txtAvatarName, f_PrettyPre11, sb_0;\n  f_HTMLPanel1 = new HTMLPanel($html3_0(this$static.domId0, this$static.domId1).html_0);\n  __attachRecord__ = attachToDom(($clinit_DOM() , f_HTMLPanel1.element_0));\n  $get_0(this$static.domId0Element);\n  $get_0(this$static.domId1Element);\n  __attachRecord__.origParent?$insertBefore(__attachRecord__.origParent, __attachRecord__.element, __attachRecord__.origSibling):orphan(__attachRecord__.element);\n  $addAndReplaceElement(f_HTMLPanel1, (f_MaterialRow2 = new MaterialRow , $add_14(f_MaterialRow2, (f_MaterialTitle3 = new MaterialTitle , $getElement(f_MaterialTitle3.header).innerHTML = \'Usage\' , f_MaterialTitle3)) , $add_14(f_MaterialRow2, (f_PrettyPre4 = new PrettyPre , $setHTML_0(f_PrettyPre4, (sb = new StringBuilder , sb.string += \'\\u2003&lt;!-- Addin Import --&gt;<br> xmlns:ma="urn:import:gwt.material.design.addins.client"<br><br> &lt;!-- Addin Usage --&gt;<br> &lt;ma:avatar.MaterialAvatar name="kevzlou7979" width="150" height="150" /&gt;\' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb.string)).html_0) , setStyleName(f_PrettyPre4.element_0, \'lang-xml\', true) , f_PrettyPre4)) , $add_14(f_MaterialRow2, (f_avatar$MaterialAvatar5 = new MaterialAvatar , f_avatar$MaterialAvatar5.element_0.setAttribute(\'width\', \'150\') , f_avatar$MaterialAvatar5.name_0 = \'kevzlou7979\' , f_avatar$MaterialAvatar5.element_0.setAttribute(\'height\', \'150\') , f_avatar$MaterialAvatar5)) , setStyleName(f_MaterialRow2.element_0, \'code\', true) , f_MaterialRow2), $get_0(this$static.domId0Element));\n  $addAndReplaceElement(f_HTMLPanel1, (f_MaterialRow6 = new MaterialRow , $add_14(f_MaterialRow6, (f_MaterialTitle7 = new MaterialTitle , $setText_12(f_MaterialTitle7.paragraph, \'You can easily update the avatar during textbox key up events.\') , $getElement(f_MaterialTitle7.header).innerHTML = \'initialize()\' , f_MaterialTitle7)) , $add_14(f_MaterialRow6, (f_MaterialRow8 = new MaterialRow , $add_14(f_MaterialRow8, (f_MaterialColumn9 = new MaterialColumn , $add_14(f_MaterialColumn9, (f_MaterialCard10 = new MaterialCard , $add_14(f_MaterialCard10, (avatar = new MaterialAvatar , $setBackgroundColor(avatar, ($clinit_Color() , WHITE)) , $setShadow_0((!avatar.shadowMixin && (avatar.shadowMixin = new ShadowMixin(avatar)) , avatar.shadowMixin), 1) , avatar.element_0.setAttribute(\'width\', \'150\') , avatar.name_0 = \'marjorie\' , $setOn((!avatar.circleMixin && (avatar.circleMixin = new ToggleStyleMixin(avatar, \'circle\')) , avatar.circleMixin), true) , avatar.element_0.style[\'marginTop\'] = ($clinit_Style$Unit() , \'-100.0px\') , avatar.element_0.setAttribute(\'height\', \'150\') , this$static.owner.avatar = avatar , avatar)) , $add_14(f_MaterialCard10, (txtAvatarName = new MaterialTextBox , $setText_2(txtAvatarName.valueBoxBase, \'marjorie\') , \'marjorie\'.length != 0 && $addStyleName(txtAvatarName.label_1, \'active\') , txtAvatarName.type_0 != ($clinit_InputType() , SEARCH_1)?$setText_9(txtAvatarName.lblName, \'Avatar Name\'):($getElement(txtAvatarName.valueBoxBase).setAttribute(\'placeholder\', \'Avatar Name\') , undefined) , $addKeyUpHandler_0(txtAvatarName, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1) , this$static.owner.txtAvatarName = txtAvatarName , txtAvatarName)) , f_MaterialCard10.element_0.style[\'padding\'] = \'20.0px\' , $setTextAlign(f_MaterialCard10, ($clinit_TextAlign() , CENTER_5)) , f_MaterialCard10.element_0.style[\'marginTop\'] = \'100.0px\' , f_MaterialCard10)) , $setGrid_0((!f_MaterialColumn9.gridMixin && (f_MaterialColumn9.gridMixin = new GridMixin(f_MaterialColumn9)) , f_MaterialColumn9.gridMixin), \'l6 m6 s12\') , f_MaterialColumn9)) , f_MaterialRow8)) , $add_14(f_MaterialRow6, (f_PrettyPre11 = new PrettyPre , $setHTML_0(f_PrettyPre11, (sb_0 = new StringBuilder , sb_0.string += \'\\u2003@UiHandler("txtAvatarName")<br> void onUpdateAvatar(KeyUpEvent e) {<br> \\u2003avatar.setName(txtAvatarName.getText());<br> \\u2003avatar.initialize();<br> }\' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_0.string)).html_0) , setStyleName(f_PrettyPre11.element_0, \'lang-java\', true) , f_PrettyPre11)) , setStyleName(f_MaterialRow6.element_0, \'code\', true) , f_MaterialRow6), $get_0(this$static.domId1Element));\n  return f_HTMLPanel1;\n}\n\nfunction AvatarView_BinderImpl$Widgets(owner){\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1 = new AvatarView_BinderImpl$Widgets$1(this);\n  this.owner = owner;\n  this.domId0 = $createUniqueId($doc);\n  this.domId1 = $createUniqueId($doc);\n  this.domId0Element = new LazyDomElement(this.domId0);\n  this.domId1Element = new LazyDomElement(this.domId1);\n}\n\ndefineClass(1302, 1, {}, AvatarView_BinderImpl$Widgets);\nvar Lgwt_material_design_demo_client_application_addins_avatar_AvatarView_1BinderImpl$Widgets_2_classLit = createForClass(\'gwt.material.design.demo.client.application.addins.avatar\', \'AvatarView_BinderImpl/Widgets\', 1302);\nfunction AvatarView_BinderImpl$Widgets$1(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1303, 1, $intern_98, AvatarView_BinderImpl$Widgets$1);\n_.onKeyUp = function onKeyUp_3(event_0){\n  $onUpdateAvatar(this.this$11.owner);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_avatar_AvatarView_1BinderImpl$Widgets$1_2_classLit = createForClass(\'gwt.material.design.demo.client.application.addins.avatar\', \'AvatarView_BinderImpl/Widgets/1\', 1303);\nfunction $html3_0(arg0, arg1){\n  var sb;\n  sb = new StringBuilder;\n  sb.string += "<span id=\'";\n  $append_4(sb, htmlEscape(arg0));\n  sb.string += "\'><\\/span>  <span id=\'";\n  $append_4(sb, htmlEscape(arg1));\n  sb.string += "\'><\\/span>";\n  return new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb.string);\n}\n\nfunction $get_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarPresenter$_annotation$$none$$(this$static){\n  var result, result0;\n  if (!this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarPresenter$_annotation$$none$$) {\n    result0 = new AvatarPresenter($get_Key$type$com$google$web$bindery$event$shared$EventBus$_annotation$$none$$($getFragment_com_google_web_bindery_event_shared(this$static.injector)), (result = $get_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarView$_annotation$$none$$(this$static) , result), $get_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarPresenter$MyProxy$_annotation$$none$$(this$static));\n    $automaticBind(($getFragment_com_gwtplatform_mvp_client(this$static.injector) , result0), $get_Key$type$com$gwtplatform$mvp$client$AutobindDisable$_annotation$$none$$($getFragment_com_gwtplatform_mvp_client(this$static.injector)));\n    this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarPresenter$_annotation$$none$$ = result0;\n  }\n  return this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarPresenter$_annotation$$none$$;\n}\n\nfunction $get_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarView$_annotation$$none$$(this$static){\n  var result;\n  if (!this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarView$_annotation$$none$$) {\n    result = new AvatarView;\n    this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarView$_annotation$$none$$ = result;\n  }\n  return this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarView$_annotation$$none$$;\n}\n\ndefineClass(681, 1, $intern_104);\n_.onSuccess_0 = function onSuccess_1(){\n  $onSuccess(this.val$callback2, $get_Key$type$gwt$material$design$demo$client$application$addins$avatar$AvatarPresenter$_annotation$$none$$(this.this$11.this$01));\n}\n;\n$entry(onLoad_0)(1);\n\n//# sourceURL=gwtmaterialdemo-1.js\n')
