$wnd.gwtmaterialdemo.runAsyncCallback35("var $intern_85 = {25:1, 10:1, 24:1, 34:1, 23:1, 32:1, 14:1, 22:1, 19:1, 161:1, 40:1, 36:1, 28:1, 108:1}, $intern_96 = {25:1, 10:1, 24:1, 34:1, 120:1, 23:1, 32:1, 14:1, 22:1, 19:1, 40:1, 36:1, 28:1, 187:1};\ndefineClass(1, null, {});\n_.getClass$ = function getClass_0(){\n  return this.___clazz$;\n}\n;\nfunction create(milliseconds){\n  return new Date(milliseconds);\n}\n\nfunction $createInputRadioElement(doc, name_0){\n  var elem = doc.createElement('INPUT');\n  elem.type = 'radio';\n  elem.name = name_0;\n  elem.value = 'on';\n  return elem;\n}\n\nfunction $setSrc(this$static, src_0){\n  this$static.src = src_0;\n}\n\nfunction $isChecked(this$static){\n  return !!this$static.checked;\n}\n\nfunction $isDefaultChecked(this$static){\n  return !!this$static.defaultChecked;\n}\n\nfunction $isDisabled(this$static){\n  return !!this$static.disabled;\n}\n\nfunction $setAccessKey(this$static, accessKey){\n  this$static.accessKey = accessKey;\n}\n\nfunction $setChecked(this$static, checked){\n  this$static.checked = checked;\n}\n\nfunction $setDefaultChecked(this$static, defaultChecked){\n  this$static.defaultChecked = defaultChecked;\n}\n\nfunction $setDisabled(this$static, disabled){\n  this$static.disabled = disabled;\n}\n\nfunction $setHtmlFor(this$static, htmlFor){\n  this$static.htmlFor = htmlFor;\n}\n\nfunction $name(this$static){\n  return this$static.name_1 != null?this$static.name_1:'' + this$static.ordinal;\n}\n\nfunction $clinit_KeyPressEvent(){\n  $clinit_KeyPressEvent = emptyMethod;\n  TYPE_4 = new DomEvent$Type('keypress', new KeyPressEvent);\n}\n\nfunction $dispatch(this$static){\n  !isDigit((this$static.nativeEvent.charCode || 0) & $intern_39) && $eventGetKeyCode(this$static.nativeEvent) != 9 && $eventGetKeyCode(this$static.nativeEvent) != 8 && $eventGetKeyCode(this$static.nativeEvent) != 190 && $cancelKey(dynamicCast(this$static.source, 226));\n}\n\nfunction KeyPressEvent(){\n}\n\ndefineClass(1446, 1574, {}, KeyPressEvent);\n_.dispatch = function dispatch_4(handler){\n  $dispatch(this, dynamicCast(handler, 1603));\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_5(){\n  return TYPE_4;\n}\n;\nvar TYPE_4;\nvar Lcom_google_gwt_event_dom_client_KeyPressEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'KeyPressEvent', 1446);\nfunction getDirectionOnElement(elem){\n  var dirPropertyValue;\n  dirPropertyValue = $getPropertyString(elem, 'dir');\n  if ($equalsIgnoreCase('rtl', dirPropertyValue)) {\n    return $clinit_HasDirection$Direction() , RTL;\n  }\n   else if ($equalsIgnoreCase('ltr', dirPropertyValue)) {\n    return $clinit_HasDirection$Direction() , LTR;\n  }\n  return $clinit_HasDirection$Direction() , DEFAULT_0;\n}\n\nfunction setDirectionOnElement(elem, direction){\n  switch (direction.ordinal) {\n    case 0:\n      {\n        $setPropertyString(elem, 'dir', 'rtl');\n        break;\n      }\n\n    case 1:\n      {\n        $setPropertyString(elem, 'dir', 'ltr');\n        break;\n      }\n\n    case 2:\n      {\n        getDirectionOnElement(elem) != ($clinit_HasDirection$Direction() , DEFAULT_0) && $setPropertyString(elem, 'dir', '');\n        break;\n      }\n\n  }\n}\n\nfunction $clinit_HasDirection$Direction(){\n  $clinit_HasDirection$Direction = emptyMethod;\n  RTL = new HasDirection$Direction('RTL', 0);\n  LTR = new HasDirection$Direction('LTR', 1);\n  DEFAULT_0 = new HasDirection$Direction('DEFAULT', 2);\n}\n\nfunction HasDirection$Direction(enum$name, enum$ordinal){\n  Enum.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_10(){\n  $clinit_HasDirection$Direction();\n  return initValues(getClassLiteralForArray(Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit, 1), $intern_6, 227, 0, [RTL, LTR, DEFAULT_0]);\n}\n\ndefineClass(227, 21, {227:1, 8:1, 29:1, 21:1}, HasDirection$Direction);\nvar DEFAULT_0, LTR, RTL;\nvar Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit = createForEnum('com.google.gwt.i18n.client', 'HasDirection/Direction', 227, values_10);\nfunction gt(a, b){\n  var signa, signb;\n  signa = a.h >> 19;\n  signb = b.h >> 19;\n  return signa == 0?signb != 0 || a.h > b.h || a.h == b.h && a.m > b.m || a.h == b.h && a.m == b.m && a.l > b.l:!(signb == 0 || a.h < b.h || a.h == b.h && a.m < b.m || a.h == b.h && a.m == b.m && a.l <= b.l);\n}\n\nfunction lt(a, b){\n  return !gte_0(a, b);\n}\n\nfunction toInt(a){\n  return a.l | a.m << 22;\n}\n\nfunction $getOffsetHeight(this$static){\n  return $getPropertyInt(($clinit_DOM() , this$static.element), 'offsetHeight');\n}\n\nfunction getEventsSunk(elem){\n  return $clinit_DOM() , elem.__eventBits || 0;\n}\n\nfunction sinkEvents_0(elem, eventBits){\n  $clinit_DOM();\n  $sinkEvents_0(elem, eventBits);\n}\n\nfunction ButtonBase(elem){\n  FocusWidget.call(this, elem);\n}\n\ndefineClass(1224, 299, $intern_37);\nvar Lcom_google_gwt_user_client_ui_ButtonBase_2_classLit = createForClass('com.google.gwt.user.client.ui', 'ButtonBase', 1224);\nfunction $replaceInputElement(this$static, elem){\n  var accessKey, checked, enabled, formValue, newInputElem, sunkEvents, tabIndex, uid;\n  newInputElem = elem;\n  tabIndex = this$static.inputElem.tabIndex;\n  checked = (this$static.attached?($clinit_Boolean() , $isChecked(this$static.inputElem)?TRUE:FALSE):($clinit_Boolean() , $isDefaultChecked(this$static.inputElem)?TRUE:FALSE)).value_0;\n  enabled = !$isDisabled(this$static.inputElem);\n  formValue = this$static.inputElem.value;\n  uid = this$static.inputElem.id;\n  accessKey = this$static.inputElem.accessKey;\n  sunkEvents = getEventsSunk(this$static.inputElem);\n  $clinit_DOM();\n  setEventListener_0(this$static.inputElem, null);\n  $replaceChild(this$static.element, newInputElem, this$static.inputElem);\n  sinkEvents_0(elem, getEventsSunk(this$static.inputElem));\n  sinkEvents_0(this$static.inputElem, 0);\n  this$static.inputElem = newInputElem;\n  sinkEvents_0(this$static.inputElem, sunkEvents);\n  $setId(this$static.inputElem, uid);\n  $equals_0('', accessKey) || $setAccessKey(this$static.inputElem, accessKey);\n  !!this$static.inputElem && $setTabIndex(this$static.inputElem, tabIndex);\n  $setValue(this$static, ($clinit_Boolean() , checked?TRUE:FALSE));\n  $setDisabled(this$static.inputElem, !enabled);\n  enabled?$setStyleName_0(this$static, getStylePrimaryName(this$static.element) + '-' + 'disabled', false):$setStyleName_0(this$static, getStylePrimaryName(this$static.element) + '-' + 'disabled', true);\n  $setAttribute(this$static.inputElem, 'value', formValue);\n  this$static.attached && setEventListener_0(this$static.inputElem, this$static);\n}\n\nfunction $setValue(this$static, value_0){\n  var oldValue;\n  !value_0 && (value_0 = ($clinit_Boolean() , FALSE));\n  oldValue = this$static.attached?($clinit_Boolean() , $isChecked(this$static.inputElem)?TRUE:FALSE):($clinit_Boolean() , $isDefaultChecked(this$static.inputElem)?TRUE:FALSE);\n  $setChecked(this$static.inputElem, value_0.value_0);\n  $setDefaultChecked(this$static.inputElem, value_0.value_0);\n  if (!!oldValue && oldValue.value_0 == value_0.value_0) {\n    return;\n  }\n}\n\nfunction CheckBox(elem){\n  var uid;\n  ButtonBase.call(this, ($clinit_DOM() , $doc.createElement('span')));\n  this.inputElem = elem;\n  this.labelElem = $doc.createElement('label');\n  $appendChild(this.element, this.inputElem);\n  $appendChild(this.element, this.labelElem);\n  uid = $createUniqueId($doc);\n  $setPropertyString(this.inputElem, 'id', uid);\n  $setHtmlFor(this.labelElem, uid);\n  this.directionalTextHelper = new DirectionalTextHelper(this.labelElem);\n  !!this.inputElem && $setTabIndex(this.inputElem, 0);\n}\n\ndefineClass(305, 1224, $intern_46);\n_.getTabIndex = function getTabIndex_0(){\n  return this.inputElem.tabIndex;\n}\n;\n_.getValue_0 = function getValue_1(){\n  return this.attached?($clinit_Boolean() , $isChecked(this.inputElem)?TRUE:FALSE):($clinit_Boolean() , $isDefaultChecked(this.inputElem)?TRUE:FALSE);\n}\n;\n_.isEnabled = function isEnabled_0(){\n  return !$isDisabled(this.inputElem);\n}\n;\n_.onLoad = function onLoad_3(){\n  $clinit_DOM();\n  setEventListener_0(this.inputElem, this);\n}\n;\n_.onUnload = function onUnload_1(){\n  $clinit_DOM();\n  setEventListener_0(this.inputElem, null);\n  $setValue(this, this.attached?($clinit_Boolean() , $isChecked(this.inputElem)?TRUE:FALSE):($clinit_Boolean() , $isDefaultChecked(this.inputElem)?TRUE:FALSE));\n}\n;\n_.setTabIndex = function setTabIndex_0(index_0){\n  !!this.inputElem && $setTabIndex(this.inputElem, index_0);\n}\n;\n_.setValue_0 = function setValue(value_0){\n  $setValue(this, dynamicCast(value_0, 116));\n}\n;\n_.sinkEvents = function sinkEvents_1(eventBitsToAdd){\n  this.eventsToSink == -1?sinkEvents_0(this.inputElem, eventBitsToAdd | getEventsSunk(this.inputElem)):this.eventsToSink == -1?($clinit_DOM() , $sinkEvents_0(this.element, eventBitsToAdd | (this.element.__eventBits || 0))):(this.eventsToSink |= eventBitsToAdd);\n}\n;\nvar Lcom_google_gwt_user_client_ui_CheckBox_2_classLit = createForClass('com.google.gwt.user.client.ui', 'CheckBox', 305);\nfunction $setTextOrHtml(this$static, content_0){\n  $setInnerText(this$static.element, content_0);\n  if (this$static.textDir != this$static.initialElementDir) {\n    this$static.textDir = this$static.initialElementDir;\n    setDirectionOnElement(this$static.element, this$static.initialElementDir);\n  }\n}\n\nfunction DirectionalTextHelper(element){\n  this.element = element;\n  this.initialElementDir = getDirectionOnElement(element);\n  this.textDir = this.initialElementDir;\n}\n\ndefineClass(424, 1, {}, DirectionalTextHelper);\nvar Lcom_google_gwt_user_client_ui_DirectionalTextHelper_2_classLit = createForClass('com.google.gwt.user.client.ui', 'DirectionalTextHelper', 424);\nfunction Frame_0(){\n  $setElement(this, $doc.createElement('iframe'));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-Frame');\n}\n\ndefineClass(425, 19, $intern_25, Frame_0);\nvar Lcom_google_gwt_user_client_ui_Frame_2_classLit = createForClass('com.google.gwt.user.client.ui', 'Frame', 425);\nfunction $sinkEvents_1(this$static, eventBitsToAdd){\n  if (this$static.eventsToSink == -1) {\n    sinkEvents_0(this$static.inputElem, eventBitsToAdd | getEventsSunk(this$static.inputElem));\n    sinkEvents_0(this$static.labelElem, eventBitsToAdd | getEventsSunk(this$static.labelElem));\n  }\n   else {\n    this$static.eventsToSink == -1?sinkEvents_0(this$static.inputElem, eventBitsToAdd | getEventsSunk(this$static.inputElem)):this$static.eventsToSink == -1?($clinit_DOM() , $sinkEvents_0(this$static.element, eventBitsToAdd | (this$static.element.__eventBits || 0))):(this$static.eventsToSink |= eventBitsToAdd);\n  }\n}\n\ndefineClass(1225, 305, $intern_46);\n_.onBrowserEvent_0 = function onBrowserEvent_7(event_0){\n  var target;\n  switch ($clinit_DOM() , $eventGetTypeInt(event_0.type)) {\n    case 8:\n    case 4096:\n    case 128:\n      this.oldValue_0 = this.attached?($clinit_Boolean() , $isChecked(this.inputElem)?TRUE:FALSE):($clinit_Boolean() , $isDefaultChecked(this.inputElem)?TRUE:FALSE);\n      break;\n    case 1:\n      target = event_0.target;\n      if (is_0(target) && $isOrHasChild(this.labelElem, target)) {\n        this.oldValue_0 = this.attached?($clinit_Boolean() , $isChecked(this.inputElem)?TRUE:FALSE):($clinit_Boolean() , $isDefaultChecked(this.inputElem)?TRUE:FALSE);\n        return;\n      }\n\n      $onBrowserEvent_0(this, event_0);\n      fireIfNotEqual(this, this.oldValue_0, this.attached?($clinit_Boolean() , $isChecked(this.inputElem)?TRUE:FALSE):($clinit_Boolean() , $isDefaultChecked(this.inputElem)?TRUE:FALSE));\n      return;\n  }\n  $onBrowserEvent_0(this, event_0);\n}\n;\n_.sinkEvents = function sinkEvents_2(eventBitsToAdd){\n  $sinkEvents_1(this, eventBitsToAdd);\n}\n;\nvar Lcom_google_gwt_user_client_ui_RadioButton_2_classLit = createForClass('com.google.gwt.user.client.ui', 'RadioButton', 1225);\nfunction $setValue_0(this$static, newValue){\n  $setValue_1(this$static.box, newValue, false);\n}\n\ndefineClass(406, $intern_26, $intern_45);\n_.getValue_0 = function getValue_2(){\n  return $getValue_1(this.box);\n}\n;\n_.setValue_0 = function setValue_0(newValue){\n  $setValue_0(this, dynamicCastToString(newValue));\n}\n;\nfunction $cancelKey(this$static){\n  !!this$static.currentEvent && $eventPreventDefault(this$static.currentEvent);\n}\n\ndefineClass(408, 299, $intern_46);\n_.setValue_0 = function setValue_1(value_0){\n  $setValue_1(this, value_0, false);\n}\n;\nfunction TextArea_0(){\n  $clinit_TextBoxBase();\n  TextBoxBase.call(this, $doc.createElement('textarea'));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-TextArea');\n}\n\ndefineClass(1416, 409, $intern_46, TextArea_0);\nvar Lcom_google_gwt_user_client_ui_TextArea_2_classLit = createForClass('com.google.gwt.user.client.ui', 'TextArea', 1416);\nfunction $setFocus_1(this$static){\n  $getElement((!this$static.focusableMixin && (this$static.focusableMixin = new FocusableMixin(this$static)) , this$static.focusableMixin).uiObject).focus();\n}\n\ndefineClass(28, 183, $intern_59);\n_.setBackgroundColor = function setBackgroundColor(bgColor){\n  $setBackgroundColor(this, bgColor);\n}\n;\n_.setId = function setId(id_0){\n  $setId_0(this, id_0);\n}\n;\nfunction $setValue_4(this$static, value_0){\n  var suggestion, suggestion$iterator;\n  $clear_3(this$static);\n  if (value_0) {\n    for (suggestion$iterator = value_0.iterator(); suggestion$iterator.hasNext();) {\n      suggestion = dynamicCast(suggestion$iterator.next_0(), 327);\n      $addItem_0(this$static, suggestion);\n    }\n  }\n}\n\ndefineClass(199, 28, $intern_60);\n_.getValue_0 = function getValue_5(){\n  return new ArrayList_1(new AbstractMap$1(this.suggestionMap));\n}\n;\n_.setValue_0 = function setValue_2(value_0){\n  $setValue_4(this, dynamicCast(value_0, 104));\n}\n;\nfunction $initTimePicker(e, orientation, autoClose, hour24){\n  $wnd.jQuery(e).lolliclock({autoclose:autoClose, orientation:orientation, hour24:hour24});\n  $wnd.jQuery(e).blur();\n}\n\nfunction MaterialTimePicker(){\n  MaterialWidget_0.call(this, $doc.createElement('div'));\n  this.panel = new MaterialPanel;\n  this.input_0 = new MaterialInput;\n  this.autoClose = true;\n  this.orientation = ($clinit_Orientation() , PORTRAIT_0);\n  this.lblError = new MaterialLabel;\n  this.errorMixin = new ErrorMixin(this, this.lblError, this.input_0);\n  $add_13(this.panel, this.lblError);\n  $setType_8(this.input_0, ($clinit_InputType() , TEXT_1));\n  $add_13(this.panel, this.input_0);\n  $add_13(this, this.panel);\n}\n\ndefineClass(304, 28, $intern_59, MaterialTimePicker);\n_.onLoad = function onLoad_13(){\n  $setAttribute($getElement(this.input_0), 'type', 'text');\n  $initTimePicker($getElement(this.input_0), this.orientation.cssClass, this.autoClose, this.hour24);\n}\n;\n_.autoClose = false;\n_.hour24 = false;\nvar Lgwt_material_design_addins_client_ui_MaterialTimePicker_2_classLit = createForClass('gwt.material.design.addins.client.ui', 'MaterialTimePicker', 304);\ndefineClass(1205, 19, $intern_25);\n_.setId = function setId_0(id_0){\n  $setId_1(this.idMixin, id_0);\n}\n;\nfunction TypeWidget(element){\n  MaterialWidget_0.call(this, element);\n}\n\ndefineClass(1418, 28, $intern_59, TypeWidget);\nvar Lgwt_material_design_client_base_TypeWidget_2_classLit = createForClass('gwt.material.design.client.base', 'TypeWidget', 1418);\nfunction ValueBoxBase_0(elem){\n  ValueBoxBase.call(this, elem);\n  this.idMixin = new IdMixin(this);\n  new ColorsMixin(this);\n  new GridMixin(this);\n}\n\ndefineClass(1391, 408, $intern_46);\n_.setId = function setId_1(id_0){\n  $setId_1(this.idMixin, id_0);\n}\n;\nvar Lgwt_material_design_client_base_ValueBoxBase_2_classLit = createForClass('gwt.material.design.client.base', 'ValueBoxBase', 1391);\nfunction getComputedBackgroundColor(e){\n  var cs = $wnd.document.defaultView.getComputedStyle(e, null);\n  return cs.getPropertyValue('background-color');\n}\n\nfunction setupComputedBackgroundColor(color_0){\n  var computed, temp;\n  temp = new MaterialWidget_0($doc.createElement('div'));\n  temp.setBackgroundColor(color_0);\n  $add_2(($clinit_RootPanel() , get_1(null)), temp);\n  computed = getComputedBackgroundColor(($clinit_DOM() , temp.element)).toLowerCase();\n  $removeFromParent_0(temp);\n  return computed;\n}\n\nfunction CounterMixin(widget){\n  AbstractMixin.call(this, widget);\n}\n\ndefineClass(1417, 101, {}, CounterMixin);\nvar Lgwt_material_design_client_base_mixin_CounterMixin_2_classLit = createForClass('gwt.material.design.client.base.mixin', 'CounterMixin', 1417);\nfunction FocusableMixin(uiObject){\n  this.uiObject = uiObject;\n}\n\ndefineClass(1207, 1, {}, FocusableMixin);\nvar Lgwt_material_design_client_base_mixin_FocusableMixin_2_classLit = createForClass('gwt.material.design.client.base.mixin', 'FocusableMixin', 1207);\ndefineClass(90, 101, {});\n_.setId = function setId_2(id_0){\n  $setId_1(this, id_0);\n}\n;\nfunction $setScrollspy(this$static, scrollspy){\n  $removeStyleName(this$static.uiObject, 'section scrollspy');\n  $addStyleName(this$static.uiObject, 'section scrollspy');\n  dynamicCast(this$static.uiObject, 40).setId(scrollspy);\n}\n\nfunction ScrollspyMixin(uiObject){\n  AbstractMixin.call(this, uiObject);\n}\n\ndefineClass(240, 101, {}, ScrollspyMixin);\n_.setId = function setId_3(id_0){\n  dynamicCast(this.uiObject, 40).setId(id_0);\n}\n;\nvar Lgwt_material_design_client_base_mixin_ScrollspyMixin_2_classLit = createForClass('gwt.material.design.client.base.mixin', 'ScrollspyMixin', 240);\nfunction $clinit_Axis(){\n  $clinit_Axis = emptyMethod;\n  VERTICAL = new Axis('VERTICAL', 0, 'vertical');\n  HORIZONTAL = new Axis('HORIZONTAL', 1, 'horizontal');\n}\n\nfunction Axis(enum$name, enum$ordinal, cssClass){\n  Enum.call(this, enum$name, enum$ordinal);\n  this.cssClass = cssClass;\n}\n\nfunction values_25(){\n  $clinit_Axis();\n  return initValues(getClassLiteralForArray(Lgwt_material_design_client_constants_Axis_2_classLit, 1), $intern_6, 237, 0, [VERTICAL, HORIZONTAL]);\n}\n\ndefineClass(237, 21, {33:1, 237:1, 8:1, 29:1, 21:1}, Axis);\n_.getCssName = function getCssName_65(){\n  return this.cssClass;\n}\n;\nvar HORIZONTAL, VERTICAL;\nvar Lgwt_material_design_client_constants_Axis_2_classLit = createForEnum('gwt.material.design.client.constants', 'Axis', 237, values_25);\nfunction $clinit_CheckBoxType(){\n  $clinit_CheckBoxType = emptyMethod;\n  FILLED = new CheckBoxType('FILLED', 0, 'filled');\n  INTERMEDIATE = new CheckBoxType('INTERMEDIATE', 1, 'intermediate');\n}\n\nfunction CheckBoxType(enum$name, enum$ordinal, cssClass){\n  Enum.call(this, enum$name, enum$ordinal);\n  this.cssClass = cssClass;\n}\n\nfunction values_28(){\n  $clinit_CheckBoxType();\n  return initValues(getClassLiteralForArray(Lgwt_material_design_client_constants_CheckBoxType_2_classLit, 1), $intern_6, 272, 0, [FILLED, INTERMEDIATE]);\n}\n\ndefineClass(272, 21, {33:1, 272:1, 125:1, 99:1, 8:1, 29:1, 21:1}, CheckBoxType);\n_.getCssName = function getCssName_68(){\n  return this.cssClass;\n}\n;\nvar FILLED, INTERMEDIATE;\nvar Lgwt_material_design_client_constants_CheckBoxType_2_classLit = createForEnum('gwt.material.design.client.constants', 'CheckBoxType', 272, values_28);\nfunction $clinit_CollapsibleType(){\n  $clinit_CollapsibleType = emptyMethod;\n  ACCORDION = new CollapsibleType('ACCORDION', 0, 'accordion');\n  EXPANDABLE = new CollapsibleType('EXPANDABLE', 1, 'expandable');\n  POPOUT = new CollapsibleType('POPOUT', 2, 'popout');\n}\n\nfunction CollapsibleType(enum$name, enum$ordinal, cssClass){\n  Enum.call(this, enum$name, enum$ordinal);\n  this.cssClass = cssClass;\n}\n\nfunction values_29(){\n  $clinit_CollapsibleType();\n  return initValues(getClassLiteralForArray(Lgwt_material_design_client_constants_CollapsibleType_2_classLit, 1), $intern_6, 236, 0, [ACCORDION, EXPANDABLE, POPOUT]);\n}\n\ndefineClass(236, 21, {33:1, 236:1, 125:1, 99:1, 8:1, 29:1, 21:1}, CollapsibleType);\n_.getCssName = function getCssName_69(){\n  return this.cssClass;\n}\n;\nvar ACCORDION, EXPANDABLE, POPOUT;\nvar Lgwt_material_design_client_constants_CollapsibleType_2_classLit = createForEnum('gwt.material.design.client.constants', 'CollapsibleType', 236, values_29);\nfunction $clinit_CollectionType(){\n  $clinit_CollectionType = emptyMethod;\n  AVATAR = new CollectionType('AVATAR', 0, 'avatar');\n  CHECKBOX_0 = new CollectionType('CHECKBOX', 1, 'checkbox');\n}\n\nfunction CollectionType(enum$name, enum$ordinal, cssClass){\n  Enum.call(this, enum$name, enum$ordinal);\n  this.cssClass = cssClass;\n}\n\nfunction values_30(){\n  $clinit_CollectionType();\n  return initValues(getClassLiteralForArray(Lgwt_material_design_client_constants_CollectionType_2_classLit, 1), $intern_6, 268, 0, [AVATAR, CHECKBOX_0]);\n}\n\ndefineClass(268, 21, {33:1, 268:1, 125:1, 99:1, 8:1, 29:1, 21:1}, CollectionType);\n_.getCssName = function getCssName_70(){\n  return this.cssClass;\n}\n;\nvar AVATAR, CHECKBOX_0;\nvar Lgwt_material_design_client_constants_CollectionType_2_classLit = createForEnum('gwt.material.design.client.constants', 'CollectionType', 268, values_30);\nfunction $clinit_InputType(){\n  $clinit_InputType = emptyMethod;\n  PASSWORD = new InputType('PASSWORD', 0, 'password');\n  DATETIME_0 = new InputType('DATETIME', 1, 'datetime');\n  DATETIME_LOCAL = new InputType('DATETIME_LOCAL', 2, 'datetime-local');\n  DATE_0 = new InputType('DATE', 3, 'date');\n  MONTH = new InputType('MONTH', 4, 'month');\n  TIME = new InputType('TIME', 5, 'time');\n  WEEK = new InputType('WEEK', 6, 'week');\n  NUMBER_0 = new InputType('NUMBER', 7, 'number');\n  EMAIL_0 = new InputType('EMAIL', 8, 'email');\n  FILE = new InputType('FILE', 9, 'file');\n  URL_0 = new InputType('URL', 10, 'url');\n  SEARCH_1 = new InputType('SEARCH', 11, 'search');\n  TEL = new InputType('TEL', 12, 'tel');\n  TEXT_1 = new InputType('TEXT', 13, 'text');\n  COLOR = new InputType('COLOR', 14, 'color');\n  CHECKBOX_1 = new InputType('CHECKBOX', 15, 'checkbox');\n  RANGE = new InputType('RANGE', 16, 'range');\n}\n\nfunction InputType(enum$name, enum$ordinal, type_0){\n  Enum.call(this, enum$name, enum$ordinal);\n  this.type_0 = type_0;\n}\n\nfunction values_40(){\n  $clinit_InputType();\n  return initValues(getClassLiteralForArray(Lgwt_material_design_client_constants_InputType_2_classLit, 1), $intern_6, 102, 0, [PASSWORD, DATETIME_0, DATETIME_LOCAL, DATE_0, MONTH, TIME, WEEK, NUMBER_0, EMAIL_0, FILE, URL_0, SEARCH_1, TEL, TEXT_1, COLOR, CHECKBOX_1, RANGE]);\n}\n\ndefineClass(102, 21, {102:1, 99:1, 8:1, 29:1, 21:1}, InputType);\nvar CHECKBOX_1, COLOR, DATE_0, DATETIME_0, DATETIME_LOCAL, EMAIL_0, FILE, MONTH, NUMBER_0, PASSWORD, RANGE, SEARCH_1, TEL, TEXT_1, TIME, URL_0, WEEK;\nvar Lgwt_material_design_client_constants_InputType_2_classLit = createForEnum('gwt.material.design.client.constants', 'InputType', 102, values_40);\nfunction $clinit_Orientation(){\n  $clinit_Orientation = emptyMethod;\n  LANDSCAPE_0 = new Orientation('LANDSCAPE', 0, 'landscape');\n  PORTRAIT_0 = new Orientation('PORTRAIT', 1, 'portrait');\n}\n\nfunction Orientation(enum$name, enum$ordinal, cssClass){\n  Enum.call(this, enum$name, enum$ordinal);\n  this.cssClass = cssClass;\n}\n\nfunction values_44(){\n  $clinit_Orientation();\n  return initValues(getClassLiteralForArray(Lgwt_material_design_client_constants_Orientation_2_classLit, 1), $intern_6, 269, 0, [LANDSCAPE_0, PORTRAIT_0]);\n}\n\ndefineClass(269, 21, {33:1, 269:1, 8:1, 29:1, 21:1}, Orientation);\n_.getCssName = function getCssName_81(){\n  return this.cssClass;\n}\n;\nvar LANDSCAPE_0, PORTRAIT_0;\nvar Lgwt_material_design_client_constants_Orientation_2_classLit = createForEnum('gwt.material.design.client.constants', 'Orientation', 269, values_44);\nfunction $setType_3(this$static, type_0){\n  var cb, input_0;\n  switch (type_0.ordinal) {\n    case 0:\n      cb = ($clinit_DOM() , this$static.element);\n      input_0 = $getChild_0(cb, 0);\n      $setAttribute(input_0, 'class', 'filled-in');\n      break;\n    case 1:\n      setStyleName(($clinit_DOM() , this$static.element), type_0 + '-checkbox', true);\n      break;\n    default:$addStyleName(this$static, type_0.cssClass);\n  }\n}\n\nfunction MaterialCheckBox(){\n  var e;\n  $clinit_FocusWidget();\n  CheckBox.call(this, ($clinit_DOM() , e = $doc.createElement('INPUT') , e.type = 'checkbox' , e.value = 'on' , e));\n  $setClassName(this.element, 'gwt-CheckBox');\n  new GridMixin(this);\n}\n\ndefineClass(113, 305, $intern_46, MaterialCheckBox);\n_.onAttach = function onAttach_8(){\n  $onAttach_0(this);\n  ($clinit_DOM() , this.element).style['display'] = ($clinit_Style$Display() , 'block');\n}\n;\nvar Lgwt_material_design_client_ui_MaterialCheckBox_2_classLit = createForClass('gwt.material.design.client.ui', 'MaterialCheckBox', 113);\nfunction $setType_4(this$static, type_0){\n  switch (type_0.ordinal) {\n    case 2:\n      $setAttribute(($clinit_DOM() , this$static.element), 'data-collapsible', 'accordion');\n      $addStyleName(this$static, type_0.cssClass);\n      break;\n    default:$setAttribute(($clinit_DOM() , this$static.element), 'data-collapsible', type_0.cssClass);\n  }\n}\n\nfunction $setType_5(this$static, type_0){\n  switch (type_0.ordinal) {\n    case 0:\n      $addStyleName(this$static, type_0.cssClass);\n      break;\n    case 1:\n      this$static.children.size_0 > 0 && ($getElement($get_3(this$static.children, 0)).style['display'] = 'inline' , undefined);\n      !!this$static.handlerReg && $removeHandler(this$static.handlerReg.real);\n      this$static.handlerReg = $addDomHandler(this$static, new MaterialCollectionItem$1(this$static), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_1));\n  }\n}\n\nfunction MaterialCollectionItem$1(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1286, 1, $intern_61, MaterialCollectionItem$1);\n_.onClick = function onClick_9(event_0){\n  var a, a$iterator, cb, w, w$iterator;\n  for (w$iterator = new WidgetCollection$WidgetIterator(this.this$01.children); w$iterator.index_0 < w$iterator.this$01.size_0;) {\n    w = $next_3(w$iterator);\n    if (instanceOf(w, 108)) {\n      for (a$iterator = new WidgetCollection$WidgetIterator(dynamicCast(w, 108).children); a$iterator.index_0 < a$iterator.this$01.size_0;) {\n        a = $next_3(a$iterator);\n        if (instanceOf(a, 120)) {\n          try {\n            cb = dynamicCast(a, 120);\n            dynamicCast(cb.getValue_0(), 116).value_0?cb.setValue_0(($clinit_Boolean() , $clinit_Boolean() , FALSE)):cb.setValue_0(($clinit_Boolean() , $clinit_Boolean() , TRUE));\n          }\n           catch ($e0) {\n            $e0 = wrap($e0);\n            if (!instanceOf($e0, 140))\n              throw unwrap($e0);\n          }\n        }\n      }\n    }\n  }\n}\n;\nvar Lgwt_material_design_client_ui_MaterialCollectionItem$1_2_classLit = createForClass('gwt.material.design.client.ui', 'MaterialCollectionItem/1', 1286);\ndefineClass(108, 28, $intern_85);\nfunction $clear_4(this$static){\n  if (this$static.initialized) {\n    $clearErrorOrSuccess_1(this$static.errorMixin);\n    $removeErrorModifiers(this$static);\n    $removeStyleName(this$static.label_0, 'active');\n    $removeStyleName(this$static.dateInput, 'valid');\n  }\n}\n\nfunction $initClickHandler(picker, parent_0){\n  picker.pickadate('picker').on({close:function(){\n    parent_0.onClose();\n  }\n  , open:function(){\n    parent_0.onOpen();\n  }\n  , set:function(thingSet){\n    thingSet.hasOwnProperty('clear')?parent_0.onClear():thingSet.select && parent_0.onSelect();\n  }\n  });\n}\n\nfunction $removeErrorModifiers(this$static){\n  $addStyleName(this$static.dateInput, 'valid');\n  $removeStyleName(this$static.dateInput, 'invalid');\n  $removeStyleName(this$static.lblName, 'green-text');\n  $removeStyleName(this$static.lblName, 'red-text');\n}\n\nfunction $setDate_0(this$static, date){\n  if (!date) {\n    return;\n  }\n  this$static.date = date;\n  if (this$static.initialized) {\n    $setPickerDate(create(toDouble(fromDouble(date.jsdate.getTime()))), this$static.pickatizedDateInput);\n    $addStyleName(this$static.label_0, 'active');\n  }\n}\n\nfunction $setDateMax(this$static, dateMax){\n  this$static.initialized && !!dateMax && $setPickerDateMax(create(toDouble(fromDouble(dateMax.jsdate.getTime()))), this$static.pickatizedDateInput);\n}\n\nfunction $setDateMin(this$static, dateMin){\n  this$static.dateMin = dateMin;\n  this$static.initialized && !!dateMin && $setPickerDateMin(create(toDouble(fromDouble(dateMin.jsdate.getTime()))), this$static.pickatizedDateInput);\n}\n\nfunction $setPickerDate(date, picker){\n  picker.pickadate('picker').set('select', date, {muted:true});\n}\n\nfunction $setPickerDateMax(date, picker){\n  picker.pickadate('picker').set('max', date);\n}\n\nfunction $setPickerDateMin(date, picker){\n  picker.pickadate('picker').set('min', date);\n}\n\nfunction $setPlaceholder(this$static, placeholder){\n  this$static.placeholder = placeholder;\n  this$static.initialized && placeholder != null && $setText_4(this$static.lblName, placeholder);\n}\n\nfunction MaterialDatePicker(){\n  MaterialWidget_0.call(this, $doc.createElement('div'));\n  this.format = 'dd mmmm yyyy';\n  this.label_0 = new Label_0;\n  this.lblName = new MaterialLabel;\n  this.lblError = new MaterialLabel;\n  this.orientation = ($clinit_Orientation() , PORTRAIT_0);\n  this.selectionType = ($clinit_MaterialDatePicker$MaterialDatePickerType() , DAY);\n  this.gridMixin = new GridMixin(this);\n  this.initialized = false;\n  setStyleName(($clinit_DOM() , this.element), 'input-field', true);\n  this.dateInput = new DateInput;\n  $add_13(this, this.dateInput);\n  $add_13(this.label_0, this.lblName);\n  $add_13(this, this.label_0);\n  $add_13(this, this.lblError);\n  this.errorMixin = new ErrorMixin(this, this.lblError, this.dateInput);\n}\n\nfunction initDatePicker(inputSrc, typeName, format){\n  var input_0;\n  typeName === 'MONTH_DAY'?(input_0 = $wnd.jQuery(inputSrc).pickadate({container:'body', selectYears:false, selectMonths:true, format:format})):typeName === 'YEAR_MONTH_DAY'?(input_0 = $wnd.jQuery(inputSrc).pickadate({container:'body', selectYears:true, selectMonths:true, format:format})):typeName === 'YEAR'?(input_0 = $wnd.jQuery(inputSrc).pickadate({container:'body', selectYears:true, format:format})):(input_0 = $wnd.jQuery(inputSrc).pickadate({container:'body', format:format}));\n  return input_0;\n}\n\ndefineClass(200, 28, $intern_59, MaterialDatePicker);\n_.clear_0 = function clear_6(){\n  $clear_4(this);\n}\n;\n_.onAttach = function onAttach_9(){\n  $onAttach(this);\n  $addStyleName(this, this.orientation.cssClass);\n  this.pickatizedDateInput = initDatePicker($getElement(this.dateInput), $name(this.selectionType), this.format);\n  $initClickHandler(this.pickatizedDateInput, this);\n  $setAttribute($getElement(this.label_0), 'for', this.pickatizedDateInput.pickadate('picker').get('id'));\n  this.initialized = true;\n  $setDate_0(this, this.date);\n  $setDateMin(this, this.dateMin);\n  $setDateMax(this, this.dateMin);\n  $setPlaceholder(this, this.placeholder);\n}\n;\n_.onClear = function onClear(){\n  $clear_4(this);\n}\n;\n_.onClose = function onClose(){\n}\n;\n_.onOpen = function onOpen(){\n  $addStyleName(this.label_0, 'active');\n  $setFocus_1(this.dateInput);\n}\n;\n_.onSelect = function onSelect(){\n  $addStyleName(this.label_0, 'active');\n  $addStyleName(this.dateInput, 'valid');\n}\n;\n_.initialized = false;\nvar Lgwt_material_design_client_ui_MaterialDatePicker_2_classLit = createForClass('gwt.material.design.client.ui', 'MaterialDatePicker', 200);\nfunction $clinit_MaterialDatePicker$MaterialDatePickerType(){\n  $clinit_MaterialDatePicker$MaterialDatePickerType = emptyMethod;\n  DAY = new MaterialDatePicker$MaterialDatePickerType('DAY', 0);\n  MONTH_DAY = new MaterialDatePicker$MaterialDatePickerType('MONTH_DAY', 1);\n  YEAR_MONTH_DAY = new MaterialDatePicker$MaterialDatePickerType('YEAR_MONTH_DAY', 2);\n  YEAR = new MaterialDatePicker$MaterialDatePickerType('YEAR', 3);\n}\n\nfunction MaterialDatePicker$MaterialDatePickerType(enum$name, enum$ordinal){\n  Enum.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_51(){\n  $clinit_MaterialDatePicker$MaterialDatePickerType();\n  return initValues(getClassLiteralForArray(Lgwt_material_design_client_ui_MaterialDatePicker$MaterialDatePickerType_2_classLit, 1), $intern_6, 201, 0, [DAY, MONTH_DAY, YEAR_MONTH_DAY, YEAR]);\n}\n\ndefineClass(201, 21, {201:1, 8:1, 29:1, 21:1}, MaterialDatePicker$MaterialDatePickerType);\nvar DAY, MONTH_DAY, YEAR, YEAR_MONTH_DAY;\nvar Lgwt_material_design_client_ui_MaterialDatePicker$MaterialDatePickerType_2_classLit = createForEnum('gwt.material.design.client.ui', 'MaterialDatePicker/MaterialDatePickerType', 201, values_51);\nfunction $setType_8(this$static, inputType){\n  $setAttribute(($clinit_DOM() , this$static.element), 'type', inputType.type_0);\n}\n\nfunction MaterialInput(){\n  $clinit_FocusWidget();\n  MaterialInput_0.call(this, (!INSTANCE_1 && (INSTANCE_1 = new PassthroughRenderer) , !INSTANCE_0 && (INSTANCE_0 = new PassthroughParser)));\n}\n\nfunction MaterialInput_0(){\n  ValueBoxBase_0.call(this, $doc.createElement('input'));\n}\n\ndefineClass(266, 1391, $intern_46, MaterialInput);\nvar Lgwt_material_design_client_ui_MaterialInput_2_classLit = createForClass('gwt.material.design.client.ui', 'MaterialInput', 266);\ndefineClass(7, 28, $intern_59);\n_.setBackgroundColor = function setBackgroundColor_1(bgColor){\n  $setBackgroundColor_0(this.colorsMixin, bgColor);\n}\n;\ndefineClass(232, 1223, $intern_37);\n_.setId = function setId_4(id_0){\n  $setId_2(this, id_0);\n}\n;\nfunction $clinit_MaterialLoader(){\n  $clinit_MaterialLoader = emptyMethod;\n  div_0 = new Div;\n  preLoader = new MaterialPreLoader;\n  progress_0 = new MaterialProgress;\n  $setStyleName(div_0, 'valign-wrapper loader-wrapper');\n  $setPropertyImpl($getElement(preLoader).style, 'margin', 'auto');\n  $add_13(preLoader, new MaterialSpinner_0('blue'));\n  $add_13(preLoader, new MaterialSpinner_0('red'));\n  $add_13(preLoader, new MaterialSpinner_0('yellow'));\n  $add_13(preLoader, new MaterialSpinner_0('green'));\n}\n\nfunction showLoading(isShow, con){\n  $clinit_MaterialLoader();\n  if (isShow) {\n    instanceOf(con, 202) || $setPropertyImpl($getElement(div_0).style, 'position', 'absolute');\n    $add_13(div_0, preLoader);\n    con.add_0(div_0);\n  }\n   else {\n    $removeFromParent_0(div_0);\n    $removeFromParent_0(preLoader);\n  }\n}\n\nvar div_0, preLoader, progress_0;\nfunction $closeModal(this$static, e, autoClosed){\n  var obj = this$static;\n  $wnd.jQuery(e).closeModal({complete:function(){\n    obj.onNativeClose(autoClosed);\n  }\n  });\n}\n\nfunction $closeModal_0(this$static){\n  $closeModal(this$static, ($clinit_DOM() , this$static.element), false);\n}\n\nfunction $openModal(this$static){\n  if (!this$static.parent_1) {\n    throw new IllegalStateException_0('The MaterialModal must be added to the document before calling openModal().');\n  }\n  $openModal_0(this$static, ($clinit_DOM() , this$static.element), this$static.opacity_0, this$static.dismissable, this$static.inDuration, this$static.outDuration);\n}\n\nfunction $openModal_0(this$static, e, opacity, dismissable, inDuration, outDuration){\n  var obj = this$static;\n  $wnd.jQuery(e).openModal({opacity:opacity, dismissible:dismissable, in_duration:inDuration, out_duration:outDuration, complete:function(){\n    obj.onNativeClose(true);\n  }\n  });\n}\n\nfunction MaterialModal(){\n  MaterialWidget_0.call(this, $doc.createElement('div'));\n  this.typeMixin = new CssTypeMixin(this);\n  this.inDuration = 300;\n  this.outDuration = 200;\n  this.dismissable = false;\n  this.opacity_0 = 0.5;\n  $setClassName(($clinit_DOM() , this.element), 'modal');\n}\n\ndefineClass(230, 28, $intern_59, MaterialModal);\n_.onNativeClose = function onNativeClose(autoClosed){\n  fire_1(this);\n}\n;\n_.dismissable = false;\n_.inDuration = 0;\n_.opacity_0 = 0;\n_.outDuration = 0;\nvar Lgwt_material_design_client_ui_MaterialModal_2_classLit = createForClass('gwt.material.design.client.ui', 'MaterialModal', 230);\nfunction MaterialModalContent(){\n  MaterialPanel.call(this);\n  $setClassName(($clinit_DOM() , this.element), 'modal-content');\n}\n\ndefineClass(235, 9, $intern_59, MaterialModalContent);\n_.setHeight_0 = function setHeight_2(height){\n  ($clinit_DOM() , this.element).style['height'] = height + 'px';\n}\n;\nvar Lgwt_material_design_client_ui_MaterialModalContent_2_classLit = createForClass('gwt.material.design.client.ui', 'MaterialModalContent', 235);\nfunction $setPosition_3(this$static, position){\n  $setCssName(this$static.posMixin, position);\n}\n\nfunction MaterialPreLoader(){\n  MaterialWidget_0.call(this, $doc.createElement('div'));\n  this.sizeMixin = new CssNameMixin(this);\n  $setClassName(($clinit_DOM() , this.element), 'preloader-wrapper active');\n}\n\ndefineClass(270, 28, $intern_59, MaterialPreLoader);\nvar Lgwt_material_design_client_ui_MaterialPreLoader_2_classLit = createForClass('gwt.material.design.client.ui', 'MaterialPreLoader', 270);\nfunction MaterialRadioButton(){\n  $clinit_FocusWidget();\n  CheckBox.call(this, ($clinit_DOM() , $createInputRadioElement($doc, '')));\n  $setClassName(this.element, 'gwt-RadioButton');\n  $sinkEvents_1(this, 1);\n  $sinkEvents_1(this, 8);\n  $sinkEvents_1(this, 4096);\n  $sinkEvents_1(this, 128);\n  new GridMixin(this);\n  new CssTypeMixin(new TypeWidget($getChild_0(this.element, 0)));\n}\n\ndefineClass(168, 1225, $intern_46, MaterialRadioButton);\nvar Lgwt_material_design_client_ui_MaterialRadioButton_2_classLit = createForClass('gwt.material.design.client.ui', 'MaterialRadioButton', 168);\nfunction MaterialRange(){\n  var value_0;\n  MaterialWidget_0.call(this, $doc.createElement('form'));\n  this.paragraph = new Paragraph;\n  this.input_0 = new MaterialInput;\n  this.thumb = new Span;\n  this.lblError = new MaterialLabel;\n  this.rangeElement = null;\n  this.errorMixin = new ErrorMixin(this, this.lblError, null);\n  $setAttribute(($clinit_DOM() , this.element), 'action', '#');\n  $setVisible_0(this.lblError, false);\n  $setStyleName(this.paragraph, 'range-field');\n  $setType_8(this.input_0, ($clinit_InputType() , RANGE));\n  $add_13(this.paragraph, this.input_0);\n  $setClassName($getElement(this.thumb), 'thumb');\n  value_0 = new Span;\n  $setClassName(value_0.element, 'value');\n  $add_13(this.thumb, value_0);\n  $add_13(this.paragraph, this.thumb);\n  $add_13(this, this.paragraph);\n  $getElement(this.lblError).style['marginTop'] = ($clinit_Style$Unit() , '-10.0px');\n  $add_13(this, this.lblError);\n}\n\ndefineClass(418, 28, $intern_59, MaterialRange);\nvar Lgwt_material_design_client_ui_MaterialRange_2_classLit = createForClass('gwt.material.design.client.ui', 'MaterialRange', 418);\nfunction MaterialSpinner(){\n  MaterialWidget_0.call(this, $doc.createElement('div'));\n  this.circleClipperLeft = new Div;\n  this.circleClipperRight = new Div;\n  this.circle1 = new Div;\n  this.circle2 = new Div;\n  this.circle3 = new Div;\n  this.gapPatch = new Div;\n  $setClassName(($clinit_DOM() , this.element), 'spinner-layer');\n  $add_13(this, this.circleClipperLeft);\n  $add_13(this.circleClipperLeft, this.circle1);\n  $add_13(this, this.gapPatch);\n  $add_13(this.gapPatch, this.circle2);\n  $add_13(this, this.circleClipperRight);\n  $add_13(this.circleClipperRight, this.circle3);\n  $setStyleName(this.circleClipperLeft, 'circle-clipper left');\n  $setStyleName(this.gapPatch, 'gap-patch');\n  $setStyleName(this.circleClipperRight, 'circle-clipper right');\n  $setStyleName(this.circle1, 'circle');\n  $setStyleName(this.circle2, 'circle');\n  $setStyleName(this.circle3, 'circle');\n}\n\nfunction MaterialSpinner_0(color_0){\n  MaterialSpinner.call(this);\n  setStyleName(($clinit_DOM() , this.element), 'spinner-' + color_0, true);\n}\n\ndefineClass(172, 28, $intern_59, MaterialSpinner, MaterialSpinner_0);\nvar Lgwt_material_design_client_ui_MaterialSpinner_2_classLit = createForClass('gwt.material.design.client.ui', 'MaterialSpinner', 172);\nfunction $addClickHandler(this$static, handler){\n  return $addDomHandler(this$static, new MaterialSwitch$2(this$static, handler), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_1));\n}\n\nfunction $getValue_2(this$static){\n  return $clinit_Boolean() , $getElement(this$static.input_0).hasAttribute('checked')?TRUE:FALSE;\n}\n\nfunction $setValue_6(this$static, value_0){\n  var oldValue;\n  oldValue = ($clinit_Boolean() , $getElement(this$static.input_0).hasAttribute('checked')?TRUE:FALSE).value_0;\n  value_0.value_0?$setAttribute($getElement(this$static.input_0), 'checked', 'true'):$removeAttribute($getElement(this$static.input_0), 'checked');\n  oldValue != value_0.value_0 && fire_4(this$static, $getElement(this$static.input_0).hasAttribute('checked')?TRUE:FALSE);\n}\n\nfunction MaterialSwitch(){\n  MaterialWidget_0.call(this, $doc.createElement('div'));\n  this.input_0 = new MaterialInput;\n  this.span_0 = new Span;\n  this.label_0 = new Label_0;\n  this.lblError = new MaterialLabel;\n  this.errorMixin = new ErrorMixin(this, this.lblError, null);\n  $setClassName(($clinit_DOM() , this.element), 'switch');\n  $setStyleName(this.span_0, 'lever');\n  $setType_8(this.input_0, ($clinit_InputType() , CHECKBOX_1));\n  $add_13(this.label_0, this.input_0);\n  $add_13(this.label_0, this.span_0);\n  $add_13(this, this.label_0);\n  $add_13(this, this.lblError);\n  $getElement(this.lblError).style['marginTop'] = ($clinit_Style$Unit() , '16.0px');\n  $addClickHandler(this, new MaterialSwitch$1(this));\n}\n\ndefineClass(169, 28, $intern_60, MaterialSwitch);\n_.getValue_0 = function getValue_6(){\n  return $clinit_Boolean() , $getElement(this.input_0).hasAttribute('checked')?TRUE:FALSE;\n}\n;\n_.onLoad = function onLoad_24(){\n}\n;\n_.setValue_0 = function setValue_3(value_0){\n  $setValue_6(this, dynamicCast(value_0, 116));\n}\n;\nvar Lgwt_material_design_client_ui_MaterialSwitch_2_classLit = createForClass('gwt.material.design.client.ui', 'MaterialSwitch', 169);\nfunction $onClick(this$static, event_0){\n  $setValue_6(this$static.this$01, ($clinit_Boolean() , $getValue_2(this$static.this$01).value_0?FALSE:TRUE));\n  $eventPreventDefault(event_0.nativeEvent);\n}\n\nfunction MaterialSwitch$1(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1226, 1, $intern_61, MaterialSwitch$1);\n_.onClick = function onClick_11(event_0){\n  $onClick(this, event_0);\n}\n;\nvar Lgwt_material_design_client_ui_MaterialSwitch$1_2_classLit = createForClass('gwt.material.design.client.ui', 'MaterialSwitch/1', 1226);\nfunction MaterialSwitch$2(this$0, val$handler){\n  this.this$01 = this$0;\n  this.val$handler2 = val$handler;\n}\n\ndefineClass(1227, 1, $intern_61, MaterialSwitch$2);\n_.onClick = function onClick_12(event_0){\n  $isEnabled_0(this.this$01) && $onClick(this.val$handler2, event_0);\n}\n;\nvar Lgwt_material_design_client_ui_MaterialSwitch$2_2_classLit = createForClass('gwt.material.design.client.ui', 'MaterialSwitch/2', 1227);\nfunction $removeErrorModifiers_0(this$static){\n  $removeClassName($getElement(this$static.valueBoxBase), 'valid');\n  $removeClassName($getElement(this$static.valueBoxBase), 'invalid');\n  $removeStyleName(this$static.lblName, 'green-text');\n  $removeStyleName(this$static.lblName, 'red-text');\n}\n\nfunction $setType_12(this$static, type_0){\n  $setAttribute($getElement(this$static.valueBoxBase), 'type', type_0.type_0);\n  type_0 == ($clinit_InputType() , NUMBER_0) && $addDomHandler(this$static.valueBoxBase, new MaterialValueBox$1, ($clinit_KeyPressEvent() , $clinit_KeyPressEvent() , TYPE_4));\n}\n\nfunction MaterialValueBox(tValueBox){\n  MaterialWidget_0.call(this, $doc.createElement('div'));\n  $clinit_InputType();\n  this.lblError = new MaterialLabel;\n  this.label_0 = new Label_0;\n  this.lblName = new MaterialLabel;\n  this.icon_0 = new MaterialIcon;\n  this.counterMixin = new CounterMixin(this);\n  this.errorMixin = new ErrorMixin(this, this.lblError, this.valueBoxBase);\n  $setClassName(($clinit_DOM() , this.element), 'input-field');\n  $add_13(this, this.icon_0);\n  this.valueBoxBase = tValueBox;\n  $add_13(this, this.valueBoxBase);\n  $setStyleName(this.valueBoxBase, 'validate');\n  $add_13(this, this.label_0);\n  $add_13(this.label_0, this.lblName);\n  $setVisible_0(this.lblError, false);\n  $add_13(this, this.lblError);\n}\n\ndefineClass(187, 28, $intern_96);\n_.clear_0 = function clear_7(){\n  $setText_2(this.valueBoxBase, '');\n  $clearErrorOrSuccess_1(this.errorMixin);\n  $removeErrorModifiers_0(this);\n  $removeStyleName(this.label_0, 'active');\n}\n;\n_.getValue_0 = function getValue_7(){\n  return $getValue_1(this.valueBoxBase);\n}\n;\n_.onLoad = function onLoad_27(){\n  var id_0;\n  id_0 = ($clinit_DOM() , $createUniqueId($doc));\n  $setId($getElement(this.valueBoxBase), id_0);\n  $setAttribute($getElement(this.label_0), 'for', id_0);\n}\n;\n_.setValue_0 = function setValue_4(value_0){\n  this.setValue_1(value_0, false);\n}\n;\n_.setValue_1 = function setValue_5(value_0, fireEvents){\n  $setValue_1(this.valueBoxBase, value_0, fireEvents);\n  value_0 != null && !!(isJavaString(value_0)?value_0:hasJavaObjectVirtualDispatch(value_0)?value_0.toString$():isJavaArray(value_0)?$toString(value_0):toStringSimple(value_0)).length && $addStyleName(this.label_0, 'active');\n}\n;\nvar Lgwt_material_design_client_ui_MaterialValueBox_2_classLit = createForClass('gwt.material.design.client.ui', 'MaterialValueBox', 187);\nfunction $setValue_7(this$static, value_0, fireEvents){\n  $setValue_1(this$static.valueBoxBase, value_0, fireEvents);\n  value_0 != null && !!value_0.length && $addStyleName(this$static.label_0, 'active');\n  fireEvents && fire_4(this$static, value_0);\n}\n\nfunction MaterialTextArea(){\n  MaterialValueBox.call(this, new TextArea_0);\n  $setStyleName(this.valueBoxBase, 'materialize-textarea');\n}\n\ndefineClass(258, 187, $intern_96, MaterialTextArea);\n_.setValue_1 = function setValue_6(value_0, fireEvents){\n  $setValue_7(this, dynamicCastToString(value_0), fireEvents);\n}\n;\nvar Lgwt_material_design_client_ui_MaterialTextArea_2_classLit = createForClass('gwt.material.design.client.ui', 'MaterialTextArea', 258);\nfunction MaterialTextBox(){\n  MaterialValueBox.call(this, new TextBox);\n  $setType_12(this, ($clinit_InputType() , TEXT_1));\n}\n\ndefineClass(206, 187, $intern_96, MaterialTextBox);\nvar Lgwt_material_design_client_ui_MaterialTextBox_2_classLit = createForClass('gwt.material.design.client.ui', 'MaterialTextBox', 206);\nfunction fireToast(msg){\n  $toast(new MaterialToast_0(initValues(getClassLiteralForArray(Lcom_google_gwt_user_client_ui_Widget_2_classLit, 1), $intern_3, 19, 0, [])), msg, $intern_73, null);\n}\n\ndefineClass(139, 1, $intern_70);\n_.setId = function setId_5(id_0){\n  !!this.widget && $setId($getElement(this.widget), id_0);\n}\n;\nfunction MaterialValueBox$1(){\n}\n\ndefineClass(1222, 1, {1603:1, 20:1}, MaterialValueBox$1);\nvar Lgwt_material_design_client_ui_MaterialValueBox$1_2_classLit = createForClass('gwt.material.design.client.ui', 'MaterialValueBox/1', 1222);\nfunction DateInput(){\n  MaterialWidget_0.call(this, $createInputElement($doc, 'text'));\n  $setAttribute(($clinit_DOM() , this.element), 'type', 'date');\n}\n\ndefineClass(1419, 28, $intern_59, DateInput);\nvar Lgwt_material_design_client_ui_html_DateInput_2_classLit = createForClass('gwt.material.design.client.ui.html', 'DateInput', 1419);\nfunction Label_0(){\n  MaterialWidget_0.call(this, ($clinit_DOM() , $doc.createElement('label')));\n}\n\ndefineClass(314, 28, $intern_59, Label_0);\nvar Lgwt_material_design_client_ui_html_Label_2_classLit = createForClass('gwt.material.design.client.ui.html', 'Label', 314);\nfunction $clinit_MaterialResources_0(){\n  $clinit_MaterialResources_0 = emptyMethod;\n  $clinit_MaterialResources_default_InlineClientBundleGenerator_0();\n}\n\nfunction MaterialResources_default_InlineClientBundleGenerator_0(){\n  $clinit_MaterialResources_default_InlineClientBundleGenerator_0();\n}\n\ndefineClass(413, 1, {}, MaterialResources_default_InlineClientBundleGenerator_0);\nvar Lgwt_material_design_demo_client_resources_MaterialResources_1default_1InlineClientBundleGenerator_2_classLit = createForClass('gwt.material.design.demo.client.resources', 'MaterialResources_default_InlineClientBundleGenerator', 413);\nfunction isDigit(c){\n  return null != String.fromCharCode(c).match(/\\d/);\n}\n\nfunction compare_6(x_0, y_0){\n  return lt(x_0, y_0)?-1:gt(x_0, y_0)?1:0;\n}\n\nfunction $equalsIgnoreCase(this$static, other){\n  if (other == null) {\n    return false;\n  }\n  if (this$static == other) {\n    return true;\n  }\n  return this$static.length == other.length && this$static.toLowerCase() == other.toLowerCase();\n}\n\n$entry(onLoad_0)(35);\n\n//# sourceURL=gwtmaterialdemo-35.js\n")
