$wnd.gwtmaterialdemo.runAsyncCallback21("var $intern_91 = {6:1, 10:1, 1485:1}, $intern_92 = 1900, $intern_93 = {6:1, 28:1, 100:1};\nfunction $printStackTrace(this$static){\n  var element$array, element$index, element$max, t, stackTrace;\n  for (t = this$static; t; t = t.cause) {\n    for (element$array = (t.stackTrace == null && (t.stackTrace = ($clinit_StackTraceCreator() , stackTrace = collector.getStackTrace(t) , dropInternalFrames(stackTrace))) , t.stackTrace) , element$index = 0 , element$max = element$array.length; element$index < element$max; ++element$index)\n    ;\n  }\n}\n\nfunction $setDate(this$static, dayOfMonth){\n  this$static.setDate(dayOfMonth);\n  return this$static.getTime();\n}\n\nfunction $setFullYear(this$static, year){\n  this$static.setFullYear(year);\n  return this$static.getTime();\n}\n\nfunction $setFullYear_0(this$static, year, month, day){\n  this$static.setFullYear(year, month, day);\n  return this$static.getTime();\n}\n\nfunction $setHours(this$static, hours){\n  this$static.setHours(hours);\n  return this$static.getTime();\n}\n\nfunction $setHours_0(this$static, hours, mins, secs, ms){\n  this$static.setHours(hours, mins, secs, ms);\n  return this$static.getTime();\n}\n\nfunction $setMinutes(this$static, minutes){\n  this$static.setMinutes(minutes);\n  return this$static.getTime();\n}\n\nfunction $setMonth(this$static, month){\n  this$static.setMonth(month);\n  return this$static.getTime();\n}\n\nfunction $setSeconds(this$static, seconds){\n  this$static.setSeconds(seconds);\n  return this$static.getTime();\n}\n\nfunction $setTime(this$static, milliseconds){\n  this$static.setTime(milliseconds);\n  return this$static.getTime();\n}\n\nfunction create(milliseconds){\n  return new Date(milliseconds);\n}\n\nfunction create_0(year, month, dayOfMonth, hours, minutes, seconds, millis){\n  return new Date(year, month, dayOfMonth, hours, minutes, seconds, millis);\n}\n\nfunction dropInternalFrames(stackTrace){\n  var dropFrameUntilFnName, i, numberOfFrameToSearch;\n  dropFrameUntilFnName = 'captureStackTrace';\n  numberOfFrameToSearch = min_1(stackTrace.length, 5);\n  for (i = 0; i < numberOfFrameToSearch; i++) {\n    if ($equals_0(stackTrace[i].methodName, dropFrameUntilFnName)) {\n      return dynamicCast((stackTrace.length >= i + 1 && stackTrace.splice(0, i + 1) , stackTrace), 1485);\n    }\n  }\n  return stackTrace;\n}\n\nfunction parseInt_0(number){\n  $clinit_StackTraceCreator();\n  return parseInt(number) || -1;\n}\n\ndefineClass(445, 1509, {});\n_.getStackTrace = function getStackTrace(t){\n  var i, length_0, stack_0, stackTrace;\n  stack_0 = ($clinit_StackTraceCreator() , t && t.fnStack && t.fnStack instanceof Array?t.fnStack:[]);\n  length_0 = stack_0.length;\n  stackTrace = initDim(Ljava_lang_StackTraceElement_2_classLit, $intern_91, 164, length_0, 0, 1);\n  for (i = 0; i < length_0; i++) {\n    stackTrace[i] = new StackTraceElement(stack_0[i], null, -1);\n  }\n  return stackTrace;\n}\n;\nfunction $parse(this$static, stString){\n  var closeParen, col, endFileUrlIndex, fileName, index_0, lastColonIndex, line, location_0, toReturn;\n  if (!stString.length) {\n    return this$static.createSte('Unknown', 'anonymous', -1, -1);\n  }\n  toReturn = $trim(stString);\n  $equals_0(toReturn.substr(0, 3), 'at ') && (toReturn = __substr(toReturn, 3, toReturn.length - 3));\n  toReturn = toReturn.replace(/\\[.*?\\]/g, '');\n  index_0 = toReturn.indexOf('(');\n  if (index_0 == -1) {\n    index_0 = toReturn.indexOf('@');\n    if (index_0 == -1) {\n      location_0 = toReturn;\n      toReturn = '';\n    }\n     else {\n      location_0 = $trim(__substr(toReturn, index_0 + 1, toReturn.length - (index_0 + 1)));\n      toReturn = $trim(toReturn.substr(0, index_0));\n    }\n  }\n   else {\n    closeParen = toReturn.indexOf(')', index_0);\n    location_0 = toReturn.substr(index_0 + 1, closeParen - (index_0 + 1));\n    toReturn = $trim(toReturn.substr(0, index_0));\n  }\n  index_0 = $indexOf_0(toReturn, fromCodePoint(46));\n  index_0 != -1 && (toReturn = __substr(toReturn, index_0 + 1, toReturn.length - (index_0 + 1)));\n  (!toReturn.length || $equals_0(toReturn, 'Anonymous function')) && (toReturn = 'anonymous');\n  lastColonIndex = $lastIndexOf(location_0, fromCodePoint(58));\n  endFileUrlIndex = $lastIndexOf_0(location_0, fromCodePoint(58), lastColonIndex - 1);\n  line = -1;\n  col = -1;\n  fileName = 'Unknown';\n  if (lastColonIndex != -1 && endFileUrlIndex != -1) {\n    fileName = location_0.substr(0, endFileUrlIndex);\n    line = parseInt_0(location_0.substr(endFileUrlIndex + 1, lastColonIndex - (endFileUrlIndex + 1)));\n    col = parseInt_0(__substr(location_0, lastColonIndex + 1, location_0.length - (lastColonIndex + 1)));\n  }\n  return this$static.createSte(fileName, toReturn, line, col);\n}\n\ndefineClass(1510, 1509, {});\n_.createSte = function createSte(fileName, method, line, col){\n  return new StackTraceElement(method, fileName + '@' + col, line < 0?-1:line);\n}\n;\n_.getStackTrace = function getStackTrace_0(t){\n  var addIndex, i, length_0, stack_0, stackTrace, ste, e;\n  stack_0 = ($clinit_StackTraceCreator() , e = t.__gwt$backingJsError , e && e.stack?e.stack.split('\\n'):[]);\n  stackTrace = initDim(Ljava_lang_StackTraceElement_2_classLit, $intern_91, 164, 0, 0, 1);\n  addIndex = 0;\n  length_0 = stack_0.length;\n  if (length_0 == 0) {\n    return stackTrace;\n  }\n  ste = $parse(this, stack_0[0]);\n  $equals_0(ste.methodName, 'anonymous') || (stackTrace[addIndex++] = ste);\n  for (i = 1; i < length_0; i++) {\n    stackTrace[addIndex++] = $parse(this, stack_0[i]);\n  }\n  return stackTrace;\n}\n;\ndefineClass(446, 1510, {});\n_.createSte = function createSte_0(fileName, method, line, col){\n  return new StackTraceElement(method, fileName, -1);\n}\n;\nfunction $clinit_DateTimeFormat(){\n  $clinit_DateTimeFormat = emptyMethod;\n  new HashMap;\n}\n\nfunction $addPart(this$static, buf, count){\n  var oldLength;\n  if (buf.string.length > 0) {\n    $add_32(this$static.patternParts, new DateTimeFormat$PatternPart(buf.string, count));\n    oldLength = buf.string.length;\n    0 < oldLength?(buf.string = $substring_0(buf.string, 0, 0)):0 > oldLength && (buf.string += valueOf_4(initDim(C_classLit, $intern_5, 0, -oldLength, 7, 1)));\n  }\n}\n\nfunction $format(this$static, date, timeZone){\n  var ch_0, diff, i, j, keepDate, keepTime, n, toAppendTo, trailQuote;\n  !timeZone && (timeZone = createTimeZone(date.jsdate.getTimezoneOffset()));\n  diff = (date.jsdate.getTimezoneOffset() - timeZone.standardOffset) * 60000;\n  keepDate = new Date_2(add_1(fromDouble(date.jsdate.getTime()), fromInt(diff)));\n  keepTime = keepDate;\n  if (keepDate.jsdate.getTimezoneOffset() != date.jsdate.getTimezoneOffset()) {\n    diff > 0?(diff -= 86400000):(diff += 86400000);\n    keepTime = new Date_2(add_1(fromDouble(date.jsdate.getTime()), fromInt(diff)));\n  }\n  toAppendTo = new StringBuilder_0;\n  n = this$static.pattern.length;\n  for (i = 0; i < n;) {\n    ch_0 = $charAt_0(this$static.pattern, i);\n    if (ch_0 >= 97 && ch_0 <= 122 || ch_0 >= 65 && ch_0 <= 90) {\n      for (j = i + 1; j < n && $charAt_0(this$static.pattern, j) == ch_0; ++j)\n      ;\n      $subFormat(toAppendTo, ch_0, j - i, keepDate, keepTime, timeZone);\n      i = j;\n    }\n     else if (ch_0 == 39) {\n      ++i;\n      if (i < n && $charAt_0(this$static.pattern, i) == 39) {\n        toAppendTo.string += \"'\";\n        ++i;\n        continue;\n      }\n      trailQuote = false;\n      while (!trailQuote) {\n        j = i;\n        while (j < n && $charAt_0(this$static.pattern, j) != 39) {\n          ++j;\n        }\n        if (j >= n) {\n          throw new IllegalArgumentException(\"Missing trailing '\");\n        }\n        j + 1 < n && $charAt_0(this$static.pattern, j + 1) == 39?++j:(trailQuote = true);\n        $append_3(toAppendTo, $substring_0(this$static.pattern, i, j));\n        i = j + 1;\n      }\n    }\n     else {\n      toAppendTo.string += charToString(ch_0);\n      ++i;\n    }\n  }\n  return toAppendTo.string;\n}\n\nfunction $formatFractionalSeconds(buf, count, date){\n  var time, value_0;\n  time = fromDouble(date.jsdate.getTime());\n  if (lt(time, {l:0, m:0, h:0})) {\n    value_0 = 1000 - toInt(mod(neg(time), {l:1000, m:0, h:0}));\n    value_0 == 1000 && (value_0 = 0);\n  }\n   else {\n    value_0 = toInt(mod(time, {l:1000, m:0, h:0}));\n  }\n  if (count == 1) {\n    value_0 = ~~((value_0 + 50) / 100) < 9?~~((value_0 + 50) / 100):9;\n    buf.string += String.fromCharCode(48 + value_0 & $intern_6);\n  }\n   else if (count == 2) {\n    value_0 = ~~((value_0 + 5) / 10) < 99?~~((value_0 + 5) / 10):99;\n    $zeroPaddingNumber(buf, value_0, 2);\n  }\n   else {\n    $zeroPaddingNumber(buf, value_0, 3);\n    count > 3 && $zeroPaddingNumber(buf, 0, count - 3);\n  }\n}\n\nfunction $formatMonth(buf, count, date){\n  var value_0;\n  value_0 = date.jsdate.getMonth();\n  switch (count) {\n    case 5:\n      $append_3(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'])[value_0]);\n      break;\n    case 4:\n      $append_3(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'])[value_0]);\n      break;\n    case 3:\n      $append_3(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])[value_0]);\n      break;\n    default:$zeroPaddingNumber(buf, value_0 + 1, count);\n  }\n}\n\nfunction $formatYear(buf, count, date){\n  var value_0;\n  value_0 = date.jsdate.getFullYear() - $intern_92 + $intern_92;\n  value_0 < 0 && (value_0 = -value_0);\n  switch (count) {\n    case 1:\n      buf.string += value_0;\n      break;\n    case 2:\n      $zeroPaddingNumber(buf, value_0 % 100, 2);\n      break;\n    default:$zeroPaddingNumber(buf, value_0, count);\n  }\n}\n\nfunction $getNextCharCountInPattern(pattern, start_0){\n  var ch_0, next;\n  ch_0 = pattern.charCodeAt(start_0);\n  next = start_0 + 1;\n  while (next < pattern.length && pattern.charCodeAt(next) == ch_0) {\n    ++next;\n  }\n  return next - start_0;\n}\n\nfunction $identifyAbutStart(this$static){\n  var abut, i, len;\n  abut = false;\n  len = this$static.patternParts.array.length;\n  for (i = 0; i < len; i++) {\n    if ($isNumeric(dynamicCast($get_6(this$static.patternParts, i), 214))) {\n      if (!abut && i + 1 < len && $isNumeric(dynamicCast($get_6(this$static.patternParts, i + 1), 214))) {\n        abut = true;\n        dynamicCast($get_6(this$static.patternParts, i), 214).abutStart = true;\n      }\n    }\n     else {\n      abut = false;\n    }\n  }\n}\n\nfunction $isNumeric(part){\n  var i;\n  if (part.count <= 0) {\n    return false;\n  }\n  i = $indexOf_0('MLydhHmsSDkK', fromCodePoint(part.text_0.charCodeAt(0)));\n  return i > 1 || i >= 0 && part.count < 3;\n}\n\nfunction $matchString(text_0, start_0, data_0, pos){\n  var bestMatch, bestMatchLength, count, i, length_0, textInLowerCase;\n  count = data_0.length;\n  bestMatchLength = 0;\n  bestMatch = -1;\n  textInLowerCase = __substr(text_0, start_0, text_0.length - start_0).toLowerCase();\n  for (i = 0; i < count; ++i) {\n    length_0 = data_0[i].length;\n    if (length_0 > bestMatchLength && $startsWith(textInLowerCase, data_0[i].toLowerCase())) {\n      bestMatch = i;\n      bestMatchLength = length_0;\n    }\n  }\n  bestMatch >= 0 && (pos[0] = start_0 + bestMatchLength);\n  return bestMatch;\n}\n\nfunction $parse_0(this$static, text_0, date){\n  var abutPass, abutPat, abutStart, cal, count, i, parsePos, part, s;\n  cal = new DateRecord;\n  parsePos = initValues(getClassLiteralForArray(I_classLit, 1), $intern_3, 0, 7, [0]);\n  abutPat = -1;\n  abutStart = 0;\n  abutPass = 0;\n  for (i = 0; i < this$static.patternParts.array.length; ++i) {\n    part = dynamicCast($get_6(this$static.patternParts, i), 214);\n    if (part.count > 0) {\n      if (abutPat < 0 && part.abutStart) {\n        abutPat = i;\n        abutStart = parsePos[0];\n        abutPass = 0;\n      }\n      if (abutPat >= 0) {\n        count = part.count;\n        if (i == abutPat) {\n          count -= abutPass++;\n          if (count == 0) {\n            return 0;\n          }\n        }\n        if (!$subParse(text_0, parsePos, part, count, cal)) {\n          i = abutPat - 1;\n          parsePos[0] = abutStart;\n          continue;\n        }\n      }\n       else {\n        abutPat = -1;\n        if (!$subParse(text_0, parsePos, part, 0, cal)) {\n          return 0;\n        }\n      }\n    }\n     else {\n      abutPat = -1;\n      if (part.text_0.charCodeAt(0) == 32) {\n        s = parsePos[0];\n        $skipSpace(text_0, parsePos);\n        if (parsePos[0] > s) {\n          continue;\n        }\n      }\n       else if ($startsWith_0(text_0, part.text_0, parsePos[0])) {\n        parsePos[0] += part.text_0.length;\n        continue;\n      }\n      return 0;\n    }\n  }\n  if (!$calcDate(cal, date)) {\n    return 0;\n  }\n  return parsePos[0];\n}\n\nfunction $parse_1(this$static, text_0){\n  var charsConsumed, curDate, date;\n  curDate = new Date_0;\n  date = new Date_1(curDate.jsdate.getFullYear() - $intern_92, curDate.jsdate.getMonth(), curDate.jsdate.getDate());\n  charsConsumed = $parse_0(this$static, text_0, date);\n  if (charsConsumed == 0 || charsConsumed < text_0.length) {\n    throw new IllegalArgumentException(text_0);\n  }\n  return date;\n}\n\nfunction $parseInt(text_0, pos){\n  var ch_0, ind, ret;\n  ret = 0;\n  ind = pos[0];\n  if (ind >= text_0.length) {\n    return -1;\n  }\n  ch_0 = text_0.charCodeAt(ind);\n  while (ch_0 >= 48 && ch_0 <= 57) {\n    ret = ret * 10 + (ch_0 - 48);\n    ++ind;\n    if (ind >= text_0.length) {\n      break;\n    }\n    ch_0 = text_0.charCodeAt(ind);\n  }\n  ind > pos[0]?(pos[0] = ind):(ret = -1);\n  return ret;\n}\n\nfunction $parsePattern(this$static, pattern){\n  var buf, ch_0, count, i, inQuote;\n  buf = new StringBuilder_0;\n  inQuote = false;\n  for (i = 0; i < pattern.length; i++) {\n    ch_0 = pattern.charCodeAt(i);\n    if (ch_0 == 32) {\n      $addPart(this$static, buf, 0);\n      buf.string += ' ';\n      $addPart(this$static, buf, 0);\n      while (i + 1 < pattern.length && pattern.charCodeAt(i + 1) == 32) {\n        ++i;\n      }\n      continue;\n    }\n    if (inQuote) {\n      if (ch_0 == 39) {\n        if (i + 1 < pattern.length && pattern.charCodeAt(i + 1) == 39) {\n          buf.string += \"'\";\n          ++i;\n        }\n         else {\n          inQuote = false;\n        }\n      }\n       else {\n        buf.string += charToString(ch_0);\n      }\n      continue;\n    }\n    if ($indexOf_0('GyMLdkHmsSEcDahKzZv', fromCodePoint(ch_0)) > 0) {\n      $addPart(this$static, buf, 0);\n      buf.string += charToString(ch_0);\n      count = $getNextCharCountInPattern(pattern, i);\n      $addPart(this$static, buf, count);\n      i += count - 1;\n      continue;\n    }\n    if (ch_0 == 39) {\n      if (i + 1 < pattern.length && pattern.charCodeAt(i + 1) == 39) {\n        buf.string += \"'\";\n        ++i;\n      }\n       else {\n        inQuote = true;\n      }\n    }\n     else {\n      buf.string += charToString(ch_0);\n    }\n  }\n  $addPart(this$static, buf, 0);\n  $identifyAbutStart(this$static);\n}\n\nfunction $parseTimeZoneOffset(text_0, pos, cal){\n  var offset, sign, st, value_0;\n  if (pos[0] >= text_0.length) {\n    cal.tzOffset = 0;\n    return true;\n  }\n  switch (text_0.charCodeAt(pos[0])) {\n    case 43:\n      sign = 1;\n      break;\n    case 45:\n      sign = -1;\n      break;\n    default:cal.tzOffset = 0;\n      return true;\n  }\n  ++pos[0];\n  st = pos[0];\n  value_0 = $parseInt(text_0, pos);\n  if (value_0 == 0 && pos[0] == st) {\n    return false;\n  }\n  if (pos[0] < text_0.length && text_0.charCodeAt(pos[0]) == 58) {\n    offset = value_0 * 60;\n    ++pos[0];\n    st = pos[0];\n    value_0 = $parseInt(text_0, pos);\n    if (value_0 == 0 && pos[0] == st) {\n      return false;\n    }\n    offset += value_0;\n  }\n   else {\n    offset = value_0;\n    value_0 < 24 && pos[0] - st <= 2?(offset *= 60):(offset = value_0 % 100 + ~~(value_0 / 100) * 60);\n  }\n  offset *= sign;\n  cal.tzOffset = -offset;\n  return true;\n}\n\nfunction $skipSpace(text_0, pos){\n  while (pos[0] < text_0.length && $indexOf_0(' \\t\\r\\n', fromCodePoint(text_0.charCodeAt(pos[0]))) >= 0) {\n    ++pos[0];\n  }\n}\n\nfunction $subFormat(buf, ch_0, count, adjustedDate, adjustedTime, timezone){\n  var value_0, value_1, value_2, value_3, value_4, value_5, value_6, value_7, value_8, value_9, value_10, value_11;\n  switch (ch_0) {\n    case 71:\n      value_0 = adjustedDate.jsdate.getFullYear() - $intern_92 >= -1900?1:0;\n      count >= 4?$append_3(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['Before Christ', 'Anno Domini'])[value_0]):$append_3(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['BC', 'AD'])[value_0]);\n      break;\n    case 121:\n      $formatYear(buf, count, adjustedDate);\n      break;\n    case 77:\n      $formatMonth(buf, count, adjustedDate);\n      break;\n    case 107:\n      value_1 = adjustedTime.jsdate.getHours();\n      value_1 == 0?$zeroPaddingNumber(buf, 24, count):$zeroPaddingNumber(buf, value_1, count);\n      break;\n    case 83:\n      $formatFractionalSeconds(buf, count, adjustedTime);\n      break;\n    case 69:\n      value_2 = adjustedDate.jsdate.getDay();\n      count == 5?$append_3(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['S', 'M', 'T', 'W', 'T', 'F', 'S'])[value_2]):count == 4?$append_3(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'])[value_2]):$append_3(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'])[value_2]);\n      break;\n    case 97:\n      adjustedTime.jsdate.getHours() >= 12 && adjustedTime.jsdate.getHours() < 24?$append_3(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['AM', 'PM'])[1]):$append_3(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['AM', 'PM'])[0]);\n      break;\n    case 104:\n      value_3 = adjustedTime.jsdate.getHours() % 12;\n      value_3 == 0?$zeroPaddingNumber(buf, 12, count):$zeroPaddingNumber(buf, value_3, count);\n      break;\n    case 75:\n      value_4 = adjustedTime.jsdate.getHours() % 12;\n      $zeroPaddingNumber(buf, value_4, count);\n      break;\n    case 72:\n      value_5 = adjustedTime.jsdate.getHours();\n      $zeroPaddingNumber(buf, value_5, count);\n      break;\n    case 99:\n      value_6 = adjustedDate.jsdate.getDay();\n      count == 5?$append_3(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['S', 'M', 'T', 'W', 'T', 'F', 'S'])[value_6]):count == 4?$append_3(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'])[value_6]):count == 3?$append_3(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'])[value_6]):$zeroPaddingNumber(buf, value_6, 1);\n      break;\n    case 76:\n      value_7 = adjustedDate.jsdate.getMonth();\n      count == 5?$append_3(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'])[value_7]):count == 4?$append_3(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'])[value_7]):count == 3?$append_3(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])[value_7]):$zeroPaddingNumber(buf, value_7 + 1, count);\n      break;\n    case 81:\n      value_8 = ~~(adjustedDate.jsdate.getMonth() / 3);\n      count < 4?$append_3(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['Q1', 'Q2', 'Q3', 'Q4'])[value_8]):$append_3(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'])[value_8]);\n      break;\n    case 100:\n      value_9 = adjustedDate.jsdate.getDate();\n      $zeroPaddingNumber(buf, value_9, count);\n      break;\n    case 109:\n      value_10 = adjustedTime.jsdate.getMinutes();\n      $zeroPaddingNumber(buf, value_10, count);\n      break;\n    case 115:\n      value_11 = adjustedTime.jsdate.getSeconds();\n      $zeroPaddingNumber(buf, value_11, count);\n      break;\n    case 122:\n      count < 4?$append_3(buf, timezone.tzNames[0]):$append_3(buf, timezone.tzNames[1]);\n      break;\n    case 118:\n      $append_3(buf, timezone.timezoneID);\n      break;\n    case 90:\n      count < 3?$append_3(buf, $getRFCTimeZoneString(timezone)):count == 3?$append_3(buf, $getISOTimeZoneString(timezone)):$append_3(buf, composeGMTString(timezone.standardOffset));\n      break;\n    default:return false;\n  }\n  return true;\n}\n\nfunction $subParse(text_0, pos, part, digitCount, cal){\n  var ch_0, start_0, value_0;\n  $skipSpace(text_0, pos);\n  start_0 = pos[0];\n  ch_0 = part.text_0.charCodeAt(0);\n  value_0 = -1;\n  if ($isNumeric(part)) {\n    if (digitCount > 0) {\n      if (start_0 + digitCount > text_0.length) {\n        return false;\n      }\n      value_0 = $parseInt(text_0.substr(0, start_0 + digitCount), pos);\n    }\n     else {\n      value_0 = $parseInt(text_0, pos);\n    }\n  }\n  switch (ch_0) {\n    case 71:\n      value_0 = $matchString(text_0, start_0, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['Before Christ', 'Anno Domini']), pos);\n      cal.era = value_0;\n      return true;\n    case 77:\n      return $subParseMonth(text_0, pos, cal, value_0, start_0);\n    case 76:\n      return $subParseStandaloneMonth(text_0, pos, cal, value_0, start_0);\n    case 69:\n      return $subParseDayOfWeek(text_0, pos, start_0, cal);\n    case 99:\n      return $subParseStandaloneDay(text_0, pos, start_0, cal);\n    case 97:\n      value_0 = $matchString(text_0, start_0, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['AM', 'PM']), pos);\n      cal.ampm = value_0;\n      return true;\n    case 121:\n      return $subParseYear(text_0, pos, start_0, value_0, part, cal);\n    case 100:\n      if (value_0 <= 0) {\n        return false;\n      }\n\n      cal.dayOfMonth = value_0;\n      return true;\n    case 83:\n      if (value_0 < 0) {\n        return false;\n      }\n\n      return $subParseFractionalSeconds(value_0, start_0, pos[0], cal);\n    case 104:\n      value_0 == 12 && (value_0 = 0);\n    case 75:\n    case 72:\n      if (value_0 < 0) {\n        return false;\n      }\n\n      cal.hours = value_0;\n      cal.midnightIs24 = false;\n      return true;\n    case 107:\n      if (value_0 < 0) {\n        return false;\n      }\n\n      cal.hours = value_0;\n      cal.midnightIs24 = true;\n      return true;\n    case 109:\n      if (value_0 < 0) {\n        return false;\n      }\n\n      cal.minutes = value_0;\n      return true;\n    case 115:\n      if (value_0 < 0) {\n        return false;\n      }\n\n      cal.seconds = value_0;\n      return true;\n    case 90:\n      if (start_0 < text_0.length && text_0.charCodeAt(start_0) == 90) {\n        ++pos[0];\n        cal.tzOffset = 0;\n        return true;\n      }\n\n    case 122:\n    case 118:\n      return $subParseTimeZoneInGMT(text_0, start_0, pos, cal);\n    default:return false;\n  }\n}\n\nfunction $subParseDayOfWeek(text_0, pos, start_0, cal){\n  var value_0;\n  value_0 = $matchString(text_0, start_0, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']), pos);\n  value_0 < 0 && (value_0 = $matchString(text_0, start_0, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']), pos));\n  if (value_0 < 0) {\n    return false;\n  }\n  cal.dayOfWeek = value_0;\n  return true;\n}\n\nfunction $subParseFractionalSeconds(value_0, start_0, end, cal){\n  var a, i;\n  i = end - start_0;\n  if (i < 3) {\n    while (i < 3) {\n      value_0 *= 10;\n      ++i;\n    }\n  }\n   else {\n    a = 1;\n    while (i > 3) {\n      a *= 10;\n      --i;\n    }\n    value_0 = ~~((value_0 + (a >> 1)) / a);\n  }\n  cal.milliseconds = value_0;\n  return true;\n}\n\nfunction $subParseMonth(text_0, pos, cal, value_0, start_0){\n  if (value_0 < 0) {\n    value_0 = $matchString(text_0, start_0, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']), pos);\n    value_0 < 0 && (value_0 = $matchString(text_0, start_0, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']), pos));\n    if (value_0 < 0) {\n      return false;\n    }\n    cal.month = value_0;\n    return true;\n  }\n   else if (value_0 > 0) {\n    cal.month = value_0 - 1;\n    return true;\n  }\n  return false;\n}\n\nfunction $subParseStandaloneDay(text_0, pos, start_0, cal){\n  var value_0;\n  value_0 = $matchString(text_0, start_0, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']), pos);\n  value_0 < 0 && (value_0 = $matchString(text_0, start_0, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']), pos));\n  if (value_0 < 0) {\n    return false;\n  }\n  cal.dayOfWeek = value_0;\n  return true;\n}\n\nfunction $subParseStandaloneMonth(text_0, pos, cal, value_0, start_0){\n  if (value_0 < 0) {\n    value_0 = $matchString(text_0, start_0, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']), pos);\n    value_0 < 0 && (value_0 = $matchString(text_0, start_0, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_4, 2, 4, ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']), pos));\n    if (value_0 < 0) {\n      return false;\n    }\n    cal.month = value_0;\n    return true;\n  }\n   else if (value_0 > 0) {\n    cal.month = value_0 - 1;\n    return true;\n  }\n  return false;\n}\n\nfunction $subParseTimeZoneInGMT(text_0, start_0, pos, cal){\n  if (start_0 >= 0 && $equals_0(text_0.substr(start_0, 3), 'GMT')) {\n    pos[0] = start_0 + 3;\n    return $parseTimeZoneOffset(text_0, pos, cal);\n  }\n  if (start_0 >= 0 && $equals_0(text_0.substr(start_0, 3), 'UTC')) {\n    pos[0] = start_0 + 3;\n    return $parseTimeZoneOffset(text_0, pos, cal);\n  }\n  return $parseTimeZoneOffset(text_0, pos, cal);\n}\n\nfunction $subParseYear(text_0, pos, start_0, value_0, part, cal){\n  var ambiguousTwoDigitYear, ch_0, date, defaultCenturyStartYear;\n  ch_0 = 32;\n  if (value_0 < 0) {\n    if (pos[0] >= text_0.length) {\n      return false;\n    }\n    ch_0 = text_0.charCodeAt(pos[0]);\n    if (ch_0 != 43 && ch_0 != 45) {\n      return false;\n    }\n    ++pos[0];\n    value_0 = $parseInt(text_0, pos);\n    if (value_0 < 0) {\n      return false;\n    }\n    ch_0 == 45 && (value_0 = -value_0);\n  }\n  if (ch_0 == 32 && pos[0] - start_0 == 2 && part.count == 2) {\n    date = new Date_0;\n    defaultCenturyStartYear = date.jsdate.getFullYear() - $intern_92 + $intern_92 - 80;\n    ambiguousTwoDigitYear = defaultCenturyStartYear % 100;\n    cal.ambiguousYear = value_0 == ambiguousTwoDigitYear;\n    value_0 += ~~(defaultCenturyStartYear / 100) * 100 + (value_0 < ambiguousTwoDigitYear?100:0);\n  }\n  cal.year = value_0;\n  return true;\n}\n\nfunction $zeroPaddingNumber(buf, value_0, minWidth){\n  var b, i;\n  b = 10;\n  for (i = 0; i < minWidth - 1; i++) {\n    value_0 < b && (buf.string += '0' , buf);\n    b *= 10;\n  }\n  buf.string += value_0;\n}\n\ndefineClass(1385, 1, {});\nvar Lcom_google_gwt_i18n_shared_DateTimeFormat_2_classLit = createForClass('com.google.gwt.i18n.shared', 'DateTimeFormat', 1385);\nfunction $clinit_DateTimeFormat_0(){\n  $clinit_DateTimeFormat_0 = emptyMethod;\n  $clinit_DateTimeFormat();\n  cache = new HashMap;\n}\n\nfunction DateTimeFormat(pattern){\n  $clinit_DateTimeFormat();\n  this.patternParts = new ArrayList;\n  this.pattern = pattern;\n  $parsePattern(this, pattern);\n}\n\nfunction getFormat(pattern, dtfi){\n  $clinit_DateTimeFormat_0();\n  var defaultDtfi, dtf;\n  defaultDtfi = $getDateTimeFormatInfo(($clinit_LocaleInfo() , $clinit_LocaleInfo() , instance_2));\n  dtf = null;\n  dtfi == defaultDtfi && (dtf = dynamicCast(cache.get_3(pattern), 312));\n  if (!dtf) {\n    dtf = new DateTimeFormat(pattern);\n    dtfi == defaultDtfi && cache.put(pattern, dtf);\n  }\n  return dtf;\n}\n\ndefineClass(312, 1385, {312:1}, DateTimeFormat);\nvar cache;\nvar Lcom_google_gwt_i18n_client_DateTimeFormat_2_classLit = createForClass('com.google.gwt.i18n.client', 'DateTimeFormat', 312);\ndefineClass(1539, 1, {});\nvar Lcom_google_gwt_i18n_shared_DefaultDateTimeFormatInfo_2_classLit = createForClass('com.google.gwt.i18n.shared', 'DefaultDateTimeFormatInfo', 1539);\ndefineClass(1540, 1539, {});\nvar Lcom_google_gwt_i18n_client_DefaultDateTimeFormatInfo_2_classLit = createForClass('com.google.gwt.i18n.client', 'DefaultDateTimeFormatInfo', 1540);\nfunction $getDateTimeFormatInfo(this$static){\n  !this$static.dateTimeFormatInfo && (this$static.dateTimeFormatInfo = new DateTimeFormatInfoImpl);\n  return this$static.dateTimeFormatInfo;\n}\n\nfunction $getISOTimeZoneString(this$static){\n  var data_0, offset;\n  offset = -this$static.standardOffset;\n  data_0 = initValues(getClassLiteralForArray(C_classLit, 1), $intern_5, 0, 7, [43, 48, 48, 58, 48, 48]);\n  if (offset < 0) {\n    data_0[0] = 45;\n    offset = -offset;\n  }\n  data_0[1] = data_0[1] + ~~(~~(offset / 60) / 10) & $intern_6;\n  data_0[2] = data_0[2] + ~~(offset / 60) % 10 & $intern_6;\n  data_0[4] = data_0[4] + ~~(offset % 60 / 10) & $intern_6;\n  data_0[5] = data_0[5] + offset % 10 & $intern_6;\n  return __valueOf(data_0, 0, data_0.length);\n}\n\nfunction $getRFCTimeZoneString(this$static){\n  var data_0, offset;\n  offset = -this$static.standardOffset;\n  data_0 = initValues(getClassLiteralForArray(C_classLit, 1), $intern_5, 0, 7, [43, 48, 48, 48, 48]);\n  if (offset < 0) {\n    data_0[0] = 45;\n    offset = -offset;\n  }\n  data_0[1] = data_0[1] + ~~(~~(offset / 60) / 10) & $intern_6;\n  data_0[2] = data_0[2] + ~~(offset / 60) % 10 & $intern_6;\n  data_0[3] = data_0[3] + ~~(offset % 60 / 10) & $intern_6;\n  data_0[4] = data_0[4] + offset % 10 & $intern_6;\n  return __valueOf(data_0, 0, data_0.length);\n}\n\nfunction TimeZone(){\n}\n\nfunction composeGMTString(offset){\n  var data_0;\n  data_0 = initValues(getClassLiteralForArray(C_classLit, 1), $intern_5, 0, 7, [71, 77, 84, 45, 48, 48, 58, 48, 48]);\n  if (offset <= 0) {\n    data_0[3] = 43;\n    offset = -offset;\n  }\n  data_0[4] = data_0[4] + ~~(~~(offset / 60) / 10) & $intern_6;\n  data_0[5] = data_0[5] + ~~(offset / 60) % 10 & $intern_6;\n  data_0[7] = data_0[7] + ~~(offset % 60 / 10) & $intern_6;\n  data_0[8] = data_0[8] + offset % 10 & $intern_6;\n  return __valueOf(data_0, 0, data_0.length);\n}\n\nfunction composePOSIXTimeZoneID(offset){\n  var str;\n  if (offset == 0) {\n    return 'Etc/GMT';\n  }\n  if (offset < 0) {\n    offset = -offset;\n    str = 'Etc/GMT-';\n  }\n   else {\n    str = 'Etc/GMT+';\n  }\n  return str + offsetDisplay(offset);\n}\n\nfunction composeUTCString(offset){\n  var str;\n  if (offset == 0) {\n    return 'UTC';\n  }\n  if (offset < 0) {\n    offset = -offset;\n    str = 'UTC+';\n  }\n   else {\n    str = 'UTC-';\n  }\n  return str + offsetDisplay(offset);\n}\n\nfunction createTimeZone(timeZoneOffsetInMinutes){\n  var tz;\n  tz = new TimeZone;\n  tz.standardOffset = timeZoneOffsetInMinutes;\n  tz.timezoneID = composePOSIXTimeZoneID(timeZoneOffsetInMinutes);\n  tz.tzNames = initDim(Ljava_lang_String_2_classLit, $intern_4, 2, 2, 4, 1);\n  tz.tzNames[0] = composeUTCString(timeZoneOffsetInMinutes);\n  tz.tzNames[1] = composeUTCString(timeZoneOffsetInMinutes);\n  return tz;\n}\n\nfunction offsetDisplay(offset){\n  var hour, mins;\n  hour = ~~(offset / 60);\n  mins = offset % 60;\n  if (mins == 0) {\n    return '' + hour;\n  }\n  return '' + hour + ':' + ('' + mins);\n}\n\ndefineClass(1434, 1, {}, TimeZone);\n_.standardOffset = 0;\nvar Lcom_google_gwt_i18n_client_TimeZone_2_classLit = createForClass('com.google.gwt.i18n.client', 'TimeZone', 1434);\nfunction DateTimeFormatInfoImpl(){\n}\n\ndefineClass(1433, 1540, {}, DateTimeFormatInfoImpl);\nvar Lcom_google_gwt_i18n_client_impl_cldr_DateTimeFormatInfoImpl_2_classLit = createForClass('com.google.gwt.i18n.client.impl.cldr', 'DateTimeFormatInfoImpl', 1433);\nfunction DateTimeFormat$PatternPart(txt, cnt){\n  this.text_0 = txt;\n  this.count = cnt;\n  this.abutStart = false;\n}\n\ndefineClass(214, 1, {214:1}, DateTimeFormat$PatternPart);\n_.abutStart = false;\n_.count = 0;\nvar Lcom_google_gwt_i18n_shared_DateTimeFormat$PatternPart_2_classLit = createForClass('com.google.gwt.i18n.shared', 'DateTimeFormat/PatternPart', 214);\nfunction $compareTo_0(this$static, other){\n  return compare_6(fromDouble(this$static.jsdate.getTime()), fromDouble(other.jsdate.getTime()));\n}\n\nfunction $fixDaylightSavings(this$static, requestedHours){\n  var badHours, copy, day, hours, newTime, originalTimeInMillis, timeDiff, timeDiffHours, timeDiffMinutes;\n  hours = this$static.jsdate.getHours();\n  if (hours % 24 != requestedHours % 24) {\n    copy = create(this$static.jsdate.getTime());\n    $setDate(copy, copy.getDate() + 1);\n    timeDiff = this$static.jsdate.getTimezoneOffset() - copy.getTimezoneOffset();\n    if (timeDiff > 0) {\n      timeDiffHours = ~~(timeDiff / 60);\n      timeDiffMinutes = timeDiff % 60;\n      day = this$static.jsdate.getDate();\n      badHours = this$static.jsdate.getHours();\n      badHours + timeDiffHours >= 24 && ++day;\n      newTime = create_0(this$static.jsdate.getFullYear(), this$static.jsdate.getMonth(), day, requestedHours + timeDiffHours, this$static.jsdate.getMinutes() + timeDiffMinutes, this$static.jsdate.getSeconds(), this$static.jsdate.getMilliseconds());\n      $setTime(this$static.jsdate, newTime.getTime());\n    }\n    return;\n  }\n  originalTimeInMillis = this$static.jsdate.getTime();\n  $setTime(this$static.jsdate, originalTimeInMillis + 3600000);\n  hours != this$static.jsdate.getHours() && $setTime(this$static.jsdate, originalTimeInMillis);\n}\n\nfunction $setDate_0(this$static, date){\n  var hours;\n  hours = this$static.jsdate.getHours();\n  $setDate(this$static.jsdate, date);\n  $fixDaylightSavings(this$static, hours);\n}\n\nfunction $setTime_0(this$static, time){\n  $setTime(this$static.jsdate, toDouble(time));\n}\n\nfunction Date_0(){\n  this.jsdate = new Date;\n}\n\nfunction Date_1(year, month, date){\n  this.jsdate = new Date;\n  $setFullYear_0(this.jsdate, year + $intern_92, month, date);\n  $setHours_0(this.jsdate, 0, 0, 0, 0);\n  $fixDaylightSavings(this, 0);\n}\n\nfunction Date_2(date){\n  this.jsdate = create(toDouble(date));\n}\n\ndefineClass(100, 1, $intern_93, Date_0, Date_1, Date_2);\n_.compareTo = function compareTo_0(other){\n  return $compareTo_0(this, dynamicCast(other, 100));\n}\n;\n_.equals$ = function equals_1(obj){\n  return instanceOf(obj, 100) && eq(fromDouble(this.jsdate.getTime()), fromDouble(dynamicCast(obj, 100).jsdate.getTime()));\n}\n;\n_.hashCode$ = function hashCode_3(){\n  var time;\n  time = fromDouble(this.jsdate.getTime());\n  return toInt(xor(time, shru(time, 32)));\n}\n;\n_.setHours_0 = function setHours(hours){\n  $setHours(this.jsdate, hours);\n  $fixDaylightSavings(this, hours);\n}\n;\n_.setMinutes_0 = function setMinutes(minutes){\n  var hours;\n  hours = this.jsdate.getHours() + ~~(minutes / 60);\n  $setMinutes(this.jsdate, minutes);\n  $fixDaylightSavings(this, hours);\n}\n;\n_.setMonth_0 = function setMonth(month){\n  var hours;\n  hours = this.jsdate.getHours();\n  $setMonth(this.jsdate, month);\n  $fixDaylightSavings(this, hours);\n}\n;\n_.setSeconds_0 = function setSeconds(seconds){\n  var hours;\n  hours = this.jsdate.getHours() + ~~(seconds / 3600);\n  $setSeconds(this.jsdate, seconds);\n  $fixDaylightSavings(this, hours);\n}\n;\n_.setYear = function setYear(year){\n  var hours;\n  hours = this.jsdate.getHours();\n  $setFullYear(this.jsdate, year + $intern_92);\n  $fixDaylightSavings(this, hours);\n}\n;\n_.toString$ = function toString_5(){\n  return $toString_0(this);\n}\n;\nvar Ljava_util_Date_2_classLit = createForClass('java.util', 'Date', 100);\nfunction $calcDate(this$static, date){\n  var adjustment, daysInCurrentMonth, defaultCenturyStart, offset, orgDayOfMonth, orgMonth, tmp;\n  this$static.era == 0 && this$static.year > 0 && (this$static.year = -(this$static.year - 1));\n  this$static.year > $intern_90 && date.setYear(this$static.year - $intern_92);\n  orgDayOfMonth = date.jsdate.getDate();\n  $setDate_0(date, 1);\n  this$static.month >= 0 && date.setMonth_0(this$static.month);\n  if (this$static.dayOfMonth >= 0) {\n    $setDate_0(date, this$static.dayOfMonth);\n  }\n   else if (this$static.month >= 0) {\n    tmp = new Date_1(date.jsdate.getFullYear() - $intern_92, date.jsdate.getMonth(), 35);\n    daysInCurrentMonth = 35 - tmp.jsdate.getDate();\n    $setDate_0(date, daysInCurrentMonth < orgDayOfMonth?daysInCurrentMonth:orgDayOfMonth);\n  }\n   else {\n    $setDate_0(date, orgDayOfMonth);\n  }\n  this$static.hours < 0 && (this$static.hours = date.jsdate.getHours());\n  this$static.ampm > 0 && this$static.hours < 12 && (this$static.hours += 12);\n  date.setHours_0(this$static.hours == 24 && this$static.midnightIs24?0:this$static.hours);\n  this$static.minutes >= 0 && date.setMinutes_0(this$static.minutes);\n  this$static.seconds >= 0 && date.setSeconds_0(this$static.seconds);\n  this$static.milliseconds >= 0 && $setTime_0(date, add_1(mul(div_0(fromDouble(date.jsdate.getTime()), {l:1000, m:0, h:0}), {l:1000, m:0, h:0}), fromInt(this$static.milliseconds)));\n  if (this$static.ambiguousYear) {\n    defaultCenturyStart = new Date_0;\n    defaultCenturyStart.setYear(defaultCenturyStart.jsdate.getFullYear() - $intern_92 - 80);\n    lt(fromDouble(date.jsdate.getTime()), fromDouble(defaultCenturyStart.jsdate.getTime())) && date.setYear(defaultCenturyStart.jsdate.getFullYear() - $intern_92 + 100);\n  }\n  if (this$static.dayOfWeek >= 0) {\n    if (this$static.dayOfMonth == -1) {\n      adjustment = (7 + this$static.dayOfWeek - date.jsdate.getDay()) % 7;\n      adjustment > 3 && (adjustment -= 7);\n      orgMonth = date.jsdate.getMonth();\n      $setDate_0(date, date.jsdate.getDate() + adjustment);\n      date.jsdate.getMonth() != orgMonth && $setDate_0(date, date.jsdate.getDate() + (adjustment > 0?-7:7));\n    }\n     else {\n      if (date.jsdate.getDay() != this$static.dayOfWeek) {\n        return false;\n      }\n    }\n  }\n  if (this$static.tzOffset > $intern_90) {\n    offset = date.jsdate.getTimezoneOffset();\n    $setTime_0(date, add_1(fromDouble(date.jsdate.getTime()), fromInt((this$static.tzOffset - offset) * 60 * 1000)));\n  }\n  return true;\n}\n\nfunction DateRecord(){\n  Date_0.call(this);\n  this.era = -1;\n  this.ambiguousYear = false;\n  this.year = $intern_90;\n  this.month = -1;\n  this.dayOfMonth = -1;\n  this.ampm = -1;\n  this.midnightIs24 = false;\n  this.hours = -1;\n  this.minutes = -1;\n  this.seconds = -1;\n  this.milliseconds = -1;\n  this.dayOfWeek = -1;\n  this.tzOffset = $intern_90;\n}\n\ndefineClass(1445, 100, $intern_93, DateRecord);\n_.setHours_0 = function setHours_0(hours){\n  this.hours = hours;\n}\n;\n_.setMinutes_0 = function setMinutes_0(minutes){\n  this.minutes = minutes;\n}\n;\n_.setMonth_0 = function setMonth_0(month){\n  this.month = month;\n}\n;\n_.setSeconds_0 = function setSeconds_0(seconds){\n  this.seconds = seconds;\n}\n;\n_.setYear = function setYear_0(value_0){\n  this.year = value_0;\n}\n;\n_.ambiguousYear = false;\n_.ampm = 0;\n_.dayOfMonth = 0;\n_.dayOfWeek = 0;\n_.era = 0;\n_.hours = 0;\n_.midnightIs24 = false;\n_.milliseconds = 0;\n_.minutes = 0;\n_.month = 0;\n_.seconds = 0;\n_.tzOffset = 0;\n_.year = 0;\nvar Lcom_google_gwt_i18n_shared_impl_DateRecord_2_classLit = createForClass('com.google.gwt.i18n.shared.impl', 'DateRecord', 1445);\nfunction add_1(a, b){\n  var sum0, sum1, sum2;\n  sum0 = a.l + b.l;\n  sum1 = a.m + b.m + (sum0 >> 22);\n  sum2 = a.h + b.h + (sum1 >> 22);\n  return {l:sum0 & $intern_18, m:sum1 & $intern_18, h:sum2 & $intern_19};\n}\n\nfunction div_0(a, b){\n  return divMod(a, b, false);\n}\n\nfunction mod(a, b){\n  divMod(a, b, true);\n  return remainder_0;\n}\n\nfunction mul(a, b){\n  var a0, a1, a2, a3, a4, b0, b1, b2, b3, b4, c0, c00, c01, c1, c10, c11, c12, c13, c2, c22, c23, c24, p0, p1, p2, p3, p4;\n  a0 = a.l & 8191;\n  a1 = a.l >> 13 | (a.m & 15) << 9;\n  a2 = a.m >> 4 & 8191;\n  a3 = a.m >> 17 | (a.h & 255) << 5;\n  a4 = (a.h & 1048320) >> 8;\n  b0 = b.l & 8191;\n  b1 = b.l >> 13 | (b.m & 15) << 9;\n  b2 = b.m >> 4 & 8191;\n  b3 = b.m >> 17 | (b.h & 255) << 5;\n  b4 = (b.h & 1048320) >> 8;\n  p0 = a0 * b0;\n  p1 = a1 * b0;\n  p2 = a2 * b0;\n  p3 = a3 * b0;\n  p4 = a4 * b0;\n  if (b1 != 0) {\n    p1 += a0 * b1;\n    p2 += a1 * b1;\n    p3 += a2 * b1;\n    p4 += a3 * b1;\n  }\n  if (b2 != 0) {\n    p2 += a0 * b2;\n    p3 += a1 * b2;\n    p4 += a2 * b2;\n  }\n  if (b3 != 0) {\n    p3 += a0 * b3;\n    p4 += a1 * b3;\n  }\n  b4 != 0 && (p4 += a0 * b4);\n  c00 = p0 & $intern_18;\n  c01 = (p1 & 511) << 13;\n  c0 = c00 + c01;\n  c10 = p0 >> 22;\n  c11 = p1 >> 9;\n  c12 = (p2 & 262143) << 4;\n  c13 = (p3 & 31) << 17;\n  c1 = c10 + c11 + c12 + c13;\n  c22 = p2 >> 18;\n  c23 = p3 >> 5;\n  c24 = (p4 & 4095) << 8;\n  c2 = c22 + c23 + c24;\n  c1 += c0 >> 22;\n  c0 &= $intern_18;\n  c2 += c1 >> 22;\n  c1 &= $intern_18;\n  c2 &= $intern_19;\n  return create0(c0, c1, c2);\n}\n\nfunction shru(a, n){\n  var a2, res0, res1, res2;\n  n &= 63;\n  a2 = a.h & $intern_19;\n  if (n < 22) {\n    res2 = a2 >>> n;\n    res1 = a.m >> n | a2 << 22 - n;\n    res0 = a.l >> n | a.m << 22 - n;\n  }\n   else if (n < 44) {\n    res2 = 0;\n    res1 = a2 >>> n - 22;\n    res0 = a.m >> n - 22 | a.h << 44 - n;\n  }\n   else {\n    res2 = 0;\n    res1 = 0;\n    res0 = a2 >>> n - 44;\n  }\n  return {l:res0 & $intern_18, m:res1 & $intern_18, h:res2 & $intern_19};\n}\n\nfunction xor(a, b){\n  return {l:a.l ^ b.l, m:a.m ^ b.m, h:a.h ^ b.h};\n}\n\nfunction $getPickerDate(this$static){\n  var e, sdf;\n  try {\n    sdf = ($clinit_DateTimeFormat_0() , getFormat('mm/dd/yyyy', $getDateTimeFormatInfo(($clinit_LocaleInfo() , $clinit_LocaleInfo() , instance_2))));\n    this$static.date = $parse_1(sdf, getDatePickerValue(this$static.id_0));\n    return this$static.date;\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, 76)) {\n      e = $e0;\n      $printStackTrace(e);\n      return null;\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n\nfunction $setDate_1(this$static, date){\n  var sdf;\n  this$static.date = date;\n  sdf = ($clinit_DateTimeFormat_0() , getFormat(this$static.format, $getDateTimeFormatInfo(($clinit_LocaleInfo() , $clinit_LocaleInfo() , instance_2))));\n  $setPickerDate($format(sdf, date, null), this$static.id_0);\n}\n\nfunction $setDateLimit(this$static, dateMin, dateMax){\n  this$static.dateMin = dateMin;\n  this$static.dateMax = dateMax;\n}\n\nfunction $setPickerDate(date, id_0){\n  var input_0 = $wnd.jQuery('#' + id_0).pickadate();\n  var picker = input_0.pickadate('picker');\n  picker.set('select', date);\n}\n\nfunction $setSelectionType(this$static, selectionType){\n  this$static.selectionType = selectionType;\n}\n\nfunction getDatePickerValue(id_0){\n  function pad(n){\n    return n < 10?'0' + n:n;\n  }\n\n  var picker = $wnd.jQuery('#' + id_0).pickadate('picker');\n  var formattedDate = new Date(picker.get('value'));\n  var d = pad(formattedDate.getDate());\n  var m = pad(formattedDate.getMonth());\n  m += 1;\n  var y_0 = formattedDate.getFullYear();\n  return m + '/' + d + '/' + y_0;\n}\n\nfunction PickersPresenter(eventBus, view, proxy){\n  $clinit_PresenterWidget();\n  Presenter.call(this, eventBus, view, proxy, ($clinit_ApplicationPresenter() , SLOT_MainContent));\n}\n\ndefineClass(596, 56, $intern_45, PickersPresenter);\n_.onReveal = function onReveal_28(){\n  $clinit_SetPageTitleEvent();\n  $fireEvent_1(this, new SetPageTitleEvent('Date Picker', 'A dialog picker is used to select a single date on mobile. The selected day is indicated by a filled circle. The current day is indicated by a different color and type weight.'));\n}\n;\nvar Lgwt_material_design_demo_client_application_components_pickers_PickersPresenter_2_classLit = createForClass('gwt.material.design.demo.client.application.components.pickers', 'PickersPresenter', 596);\nfunction PickersView(){\n  ViewImpl.call(this);\n  $initWidget_0(this, $build_f_HTMLPanel1_17(new PickersView_BinderImpl$Widgets(this)));\n  $setDateLimit(this.dpLimit, new Date_1(117, 0, 1), new Date_1(117, 0, 15));\n}\n\ndefineClass(772, 59, $intern_46, PickersView);\nvar Lgwt_material_design_demo_client_application_components_pickers_PickersView_2_classLit = createForClass('gwt.material.design.demo.client.application.components.pickers', 'PickersView', 772);\nfunction PickersView_BinderImpl(){\n}\n\ndefineClass(1052, 1, {}, PickersView_BinderImpl);\nvar Lgwt_material_design_demo_client_application_components_pickers_PickersView_1BinderImpl_2_classLit = createForClass('gwt.material.design.demo.client.application.components.pickers', 'PickersView_BinderImpl', 1052);\nfunction $build_f_HTMLPanel1_17(this$static){\n  var __attachRecord__, f_HTMLPanel1, f_MaterialTitle2, f_MaterialDatePicker3, f_PrettyPre4, f_MaterialTitle5, f_MaterialDatePicker6, f_PrettyPre7, f_MaterialTitle8, dp, btnSetDate, btnGetDate, f_PrettyPre9, f_PrettyPre10, f_MaterialTitle11, dpFormat, btnSetFormat, f_PrettyPre12, f_MaterialTitle13, dpLimit, f_PrettyPre14, sb, sb_0, sb_1, sb_2, sb_3, sb_4;\n  f_HTMLPanel1 = new HTMLPanel($html7_2(this$static.domId0, this$static.domId1, this$static.domId2, this$static.domId3, this$static.domId4, this$static.domId5, this$static.domId6, this$static.domId7, this$static.domId8, this$static.domId9, this$static.domId10, this$static.domId11, this$static.domId12, this$static.domId13, this$static.domId14, this$static.domId15, this$static.domId16, this$static.domId17, this$static.domId18).html);\n  __attachRecord__ = attachToDom(($clinit_DOM() , f_HTMLPanel1.element));\n  $get_0(this$static.domId0Element);\n  $get_0(this$static.domId1Element);\n  $get_0(this$static.domId2Element);\n  $get_0(this$static.domId3Element);\n  $get_0(this$static.domId4Element);\n  $get_0(this$static.domId5Element);\n  $get_0(this$static.domId6Element);\n  $get_0(this$static.domId7Element);\n  $get_0(this$static.domId8Element);\n  $get_0(this$static.domId9Element);\n  $get_0(this$static.domId10Element);\n  $get_0(this$static.domId11Element);\n  $get_0(this$static.domId12Element);\n  $get_0(this$static.domId13Element);\n  $get_0(this$static.domId14Element);\n  $get_0(this$static.domId15Element);\n  $get_0(this$static.domId16Element);\n  $get_0(this$static.domId17Element);\n  $get_0(this$static.domId18Element);\n  __attachRecord__.origParent?$insertBefore(__attachRecord__.origParent, __attachRecord__.element, __attachRecord__.origSibling):orphan(__attachRecord__.element);\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_MaterialTitle2 = new MaterialTitle , $setInnerHTML($getElement(f_MaterialTitle2.header), 'Date Picker') , $setText_5(f_MaterialTitle2.paragraph, 'Material Datepicker') , f_MaterialTitle2), $get_0(this$static.domId0Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_MaterialDatePicker3 = new MaterialDatePicker , f_MaterialDatePicker3.placeholder = 'Date' , f_MaterialDatePicker3), $get_0(this$static.domId1Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_PrettyPre4 = new PrettyPre , $setHTML(f_PrettyPre4, (sb = new StringBuilder , sb.string += '&lt;m:MaterialDatePicker ui:field=\"dp\" placeholder=\"Date\" /&gt;' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb.string)).html) , setStyleName(f_PrettyPre4.element, 'lang-xml', true) , setStyleName(f_PrettyPre4.element, 'z-depth-1', true) , f_PrettyPre4), $get_0(this$static.domId2Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_MaterialTitle5 = new MaterialTitle , $setInnerHTML($getElement(f_MaterialTitle5.header), 'Date Picker Selection Types') , $setText_5(f_MaterialTitle5.paragraph, \"You can set easily the selection type of your datepicker by adding an attribute, selectionType='YEAR'. Here is the available formats [DAY, MONTH_DAY, YEAR_MONTH_DAY, YEAR]\") , f_MaterialTitle5), $get_0(this$static.domId3Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_MaterialDatePicker6 = new MaterialDatePicker , f_MaterialDatePicker6.placeholder = 'Date' , $setSelectionType(f_MaterialDatePicker6, ($clinit_MaterialDatePicker$MaterialDatePickerType() , YEAR)) , f_MaterialDatePicker6), $get_0(this$static.domId4Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_PrettyPre7 = new PrettyPre , $setHTML(f_PrettyPre7, (sb_0 = new StringBuilder , sb_0.string += '&lt;m:MaterialDatePicker placeholder=\"Date\" selectionType=\"YEAR\"/&gt;' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_0.string)).html) , setStyleName(f_PrettyPre7.element, 'lang-xml', true) , setStyleName(f_PrettyPre7.element, 'z-depth-1', true) , f_PrettyPre7), $get_0(this$static.domId5Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_MaterialTitle8 = new MaterialTitle , $setInnerHTML($getElement(f_MaterialTitle8.header), 'setDate() and getDate()') , f_MaterialTitle8), $get_0(this$static.domId6Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (dp = new MaterialDatePicker , dp.placeholder = 'Date' , $setSelectionType(dp, YEAR) , this$static.owner.dp = dp , dp), $get_0(this$static.domId7Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (btnSetDate = new MaterialButton , btnSetDate.span_0.setText('Set Date to January 1 2020') , $add_13(btnSetDate, btnSetDate.span_0) , $addDomHandler(btnSetDate, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1, ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_1)) , btnSetDate), $get_0(this$static.domId8Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (btnGetDate = new MaterialButton , btnGetDate.span_0.setText('Get the date') , $add_13(btnGetDate, btnGetDate.span_0) , $addDomHandler(btnGetDate, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames2, (null , TYPE_1)) , btnGetDate), $get_0(this$static.domId9Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_PrettyPre9 = new PrettyPre , $setHTML(f_PrettyPre9, (sb_1 = new StringBuilder , sb_1.string += '\\u2003// setDate();<br> dp.setDate(new Date(116, 0,1));' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_1.string)).html) , setStyleName(f_PrettyPre9.element, 'lang-java', true) , setStyleName(f_PrettyPre9.element, 'z-depth-1', true) , f_PrettyPre9), $get_0(this$static.domId10Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_PrettyPre10 = new PrettyPre , $setHTML(f_PrettyPre10, (sb_2 = new StringBuilder , sb_2.string += '\\u2003// getDate();<br> dp.getDate();' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_2.string)).html) , setStyleName(f_PrettyPre10.element, 'lang-java', true) , setStyleName(f_PrettyPre10.element, 'z-depth-1', true) , f_PrettyPre10), $get_0(this$static.domId11Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_MaterialTitle11 = new MaterialTitle , $setInnerHTML($getElement(f_MaterialTitle11.header), 'Formats') , $setText_5(f_MaterialTitle11.paragraph, \"You can set the format of the date picker by adding format='FORMAT'\") , f_MaterialTitle11), $get_0(this$static.domId12Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (dpFormat = new MaterialDatePicker , dpFormat.placeholder = 'Custom Format' , dpFormat.format = 'Yehey yyyy mm dd' , this$static.owner.dpFormat = dpFormat , dpFormat), $get_0(this$static.domId13Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (btnSetFormat = new MaterialButton , btnSetFormat.span_0.setText('Set Date with custom format') , $add_13(btnSetFormat, btnSetFormat.span_0) , $addDomHandler(btnSetFormat, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames3, (null , TYPE_1)) , btnSetFormat), $get_0(this$static.domId14Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_PrettyPre12 = new PrettyPre , $setHTML(f_PrettyPre12, (sb_3 = new StringBuilder , sb_3.string += '\\u2003&lt;m:MaterialDatePicker ui:field=\"dpFormat\" placeholder=\"Custom Format\" format=\"yyyy mm dd\"/&gt;' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_3.string)).html) , setStyleName(f_PrettyPre12.element, 'lang-xml', true) , setStyleName(f_PrettyPre12.element, 'z-depth-1', true) , f_PrettyPre12), $get_0(this$static.domId15Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_MaterialTitle13 = new MaterialTitle , $setInnerHTML($getElement(f_MaterialTitle13.header), 'Date Limit') , $setText_5(f_MaterialTitle13.paragraph, 'You can limit the date by calling setDateLimit(Date min, Date max) method.') , f_MaterialTitle13), $get_0(this$static.domId16Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (dpLimit = new MaterialDatePicker , dpLimit.placeholder = 'With Limit' , this$static.owner.dpLimit = dpLimit , dpLimit), $get_0(this$static.domId17Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_PrettyPre14 = new PrettyPre , $setHTML(f_PrettyPre14, (sb_4 = new StringBuilder , sb_4.string += '\\u2003setDateLimit(Date dateMin, Date dateMax);' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_4.string)).html) , setStyleName(f_PrettyPre14.element, 'lang-java', true) , setStyleName(f_PrettyPre14.element, 'z-depth-1', true) , f_PrettyPre14), $get_0(this$static.domId18Element));\n  return f_HTMLPanel1;\n}\n\nfunction PickersView_BinderImpl$Widgets(owner){\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1 = new PickersView_BinderImpl$Widgets$1(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames2 = new PickersView_BinderImpl$Widgets$2(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames3 = new PickersView_BinderImpl$Widgets$3(this);\n  this.owner = owner;\n  this.domId0 = $createUniqueId($doc);\n  this.domId1 = $createUniqueId($doc);\n  this.domId2 = $createUniqueId($doc);\n  this.domId3 = $createUniqueId($doc);\n  this.domId4 = $createUniqueId($doc);\n  this.domId5 = $createUniqueId($doc);\n  this.domId6 = $createUniqueId($doc);\n  this.domId7 = $createUniqueId($doc);\n  this.domId8 = $createUniqueId($doc);\n  this.domId9 = $createUniqueId($doc);\n  this.domId10 = $createUniqueId($doc);\n  this.domId11 = $createUniqueId($doc);\n  this.domId12 = $createUniqueId($doc);\n  this.domId13 = $createUniqueId($doc);\n  this.domId14 = $createUniqueId($doc);\n  this.domId15 = $createUniqueId($doc);\n  this.domId16 = $createUniqueId($doc);\n  this.domId17 = $createUniqueId($doc);\n  this.domId18 = $createUniqueId($doc);\n  this.domId0Element = new LazyDomElement(this.domId0);\n  this.domId1Element = new LazyDomElement(this.domId1);\n  this.domId2Element = new LazyDomElement(this.domId2);\n  this.domId3Element = new LazyDomElement(this.domId3);\n  this.domId4Element = new LazyDomElement(this.domId4);\n  this.domId5Element = new LazyDomElement(this.domId5);\n  this.domId6Element = new LazyDomElement(this.domId6);\n  this.domId7Element = new LazyDomElement(this.domId7);\n  this.domId8Element = new LazyDomElement(this.domId8);\n  this.domId9Element = new LazyDomElement(this.domId9);\n  this.domId10Element = new LazyDomElement(this.domId10);\n  this.domId11Element = new LazyDomElement(this.domId11);\n  this.domId12Element = new LazyDomElement(this.domId12);\n  this.domId13Element = new LazyDomElement(this.domId13);\n  this.domId14Element = new LazyDomElement(this.domId14);\n  this.domId15Element = new LazyDomElement(this.domId15);\n  this.domId16Element = new LazyDomElement(this.domId16);\n  this.domId17Element = new LazyDomElement(this.domId17);\n  this.domId18Element = new LazyDomElement(this.domId18);\n}\n\ndefineClass(1053, 1, {}, PickersView_BinderImpl$Widgets);\nvar Lgwt_material_design_demo_client_application_components_pickers_PickersView_1BinderImpl$Widgets_2_classLit = createForClass('gwt.material.design.demo.client.application.components.pickers', 'PickersView_BinderImpl/Widgets', 1053);\nfunction PickersView_BinderImpl$Widgets$1(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1054, 1, $intern_58, PickersView_BinderImpl$Widgets$1);\n_.onClick = function onClick_122(event_0){\n  $setDate_1(this.this$11.owner.dp, new Date_1(116, 0, 1));\n}\n;\nvar Lgwt_material_design_demo_client_application_components_pickers_PickersView_1BinderImpl$Widgets$1_2_classLit = createForClass('gwt.material.design.demo.client.application.components.pickers', 'PickersView_BinderImpl/Widgets/1', 1054);\nfunction PickersView_BinderImpl$Widgets$2(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1055, 1, $intern_58, PickersView_BinderImpl$Widgets$2);\n_.onClick = function onClick_123(event_0){\n  fireToast('' + $getPickerDate(this.this$11.owner.dp));\n}\n;\nvar Lgwt_material_design_demo_client_application_components_pickers_PickersView_1BinderImpl$Widgets$2_2_classLit = createForClass('gwt.material.design.demo.client.application.components.pickers', 'PickersView_BinderImpl/Widgets/2', 1055);\nfunction PickersView_BinderImpl$Widgets$3(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1056, 1, $intern_58, PickersView_BinderImpl$Widgets$3);\n_.onClick = function onClick_124(event_0){\n  $setDate_1(this.this$11.owner.dpFormat, new Date_0);\n}\n;\nvar Lgwt_material_design_demo_client_application_components_pickers_PickersView_1BinderImpl$Widgets$3_2_classLit = createForClass('gwt.material.design.demo.client.application.components.pickers', 'PickersView_BinderImpl/Widgets/3', 1056);\nfunction $html7_2(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18){\n  var sb;\n  sb = new StringBuilder;\n  sb.string += \"<span id='\";\n  $append_3(sb, htmlEscape(arg0));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg1));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg2));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg3));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg4));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg5));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg6));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg7));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg8));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg9));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg10));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg11));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg12));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg13));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg14));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg15));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg16));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg17));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg18));\n  sb.string += \"'><\\/span>\";\n  return new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb.string);\n}\n\nfunction $get_Key$type$gwt$material$design$demo$client$application$components$pickers$PickersPresenter$_annotation$$none$$(this$static){\n  var result;\n  if (!this$static.singleton_Key$type$gwt$material$design$demo$client$application$components$pickers$PickersPresenter$_annotation$$none$$) {\n    result = new PickersPresenter($get_Key$type$com$google$web$bindery$event$shared$EventBus$_annotation$$none$$($getFragment_com_google_web_bindery_event_shared(this$static.injector)), $get_Key$type$gwt$material$design$demo$client$application$components$pickers$PickersView$_annotation$$none$$(this$static), $get_Key$type$gwt$material$design$demo$client$application$components$pickers$PickersPresenter$MyProxy$_annotation$$none$$(this$static));\n    $automaticBind(($getFragment_com_gwtplatform_mvp_client(this$static.injector) , result), $get_Key$type$com$gwtplatform$mvp$client$AutobindDisable$_annotation$$none$$($getFragment_com_gwtplatform_mvp_client(this$static.injector)));\n    this$static.singleton_Key$type$gwt$material$design$demo$client$application$components$pickers$PickersPresenter$_annotation$$none$$ = result;\n  }\n  return this$static.singleton_Key$type$gwt$material$design$demo$client$application$components$pickers$PickersPresenter$_annotation$$none$$;\n}\n\nfunction $get_Key$type$gwt$material$design$demo$client$application$components$pickers$PickersView$_annotation$$none$$(this$static){\n  var result;\n  if (!this$static.singleton_Key$type$gwt$material$design$demo$client$application$components$pickers$PickersView$_annotation$$none$$) {\n    result = new PickersView(new PickersView_BinderImpl);\n    this$static.singleton_Key$type$gwt$material$design$demo$client$application$components$pickers$PickersView$_annotation$$none$$ = result;\n  }\n  return this$static.singleton_Key$type$gwt$material$design$demo$client$application$components$pickers$PickersView$_annotation$$none$$;\n}\n\ndefineClass(534, 1, $intern_65);\n_.onSuccess_0 = function onSuccess_20(){\n  $onSuccess_0(this.val$callback2, $get_Key$type$gwt$material$design$demo$client$application$components$pickers$PickersPresenter$_annotation$$none$$(this.this$11.this$01));\n}\n;\nfunction StackTraceElement(methodName, fileName, lineNumber){\n  this.className_0 = 'Unknown';\n  this.methodName = methodName;\n  this.fileName = fileName;\n  this.lineNumber = lineNumber;\n}\n\ndefineClass(164, 1, {6:1, 164:1}, StackTraceElement);\n_.equals$ = function equals_20(other){\n  var st;\n  if (instanceOf(other, 164)) {\n    st = dynamicCast(other, 164);\n    return this.lineNumber == st.lineNumber && equals_32(this.methodName, st.methodName) && equals_32(this.className_0, st.className_0) && equals_32(this.fileName, st.fileName);\n  }\n  return false;\n}\n;\n_.hashCode$ = function hashCode_22(){\n  return hashCode_28(initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_4, 1, 3, [valueOf_1(this.lineNumber), this.className_0, this.methodName, this.fileName]));\n}\n;\n_.toString$ = function toString_22(){\n  return this.className_0 + '.' + this.methodName + '(' + (this.fileName != null?this.fileName:'Unknown Source') + (this.lineNumber >= 0?':' + this.lineNumber:'') + ')';\n}\n;\n_.lineNumber = 0;\nvar Ljava_lang_StackTraceElement_2_classLit = createForClass('java.lang', 'StackTraceElement', 164);\nfunction $lastIndexOf(this$static, str){\n  return this$static.lastIndexOf(str);\n}\n\nfunction $lastIndexOf_0(this$static, str, start_0){\n  return this$static.lastIndexOf(str, start_0);\n}\n\nfunction $startsWith(this$static, prefix){\n  return $equals_0(__substr(this$static, 0, prefix.length), prefix);\n}\n\nfunction $startsWith_0(this$static, prefix, toffset){\n  return toffset >= 0 && $equals_0(__substr(this$static, toffset, prefix.length), prefix);\n}\n\nfunction __valueOf(x_0, start_0, end){\n  var s = '';\n  for (var batchStart = start_0; batchStart < end;) {\n    var batchEnd = Math.min(batchStart + 10000, end);\n    s += String.fromCharCode.apply(null, x_0.slice(batchStart, batchEnd));\n    batchStart = batchEnd;\n  }\n  return s;\n}\n\nfunction valueOf_4(x_0){\n  return __valueOf(x_0, 0, x_0.length);\n}\n\n$entry(onLoad_0)(21);\n\n//# sourceURL=gwtmaterialdemo-21.js\n")
